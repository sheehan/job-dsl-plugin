{
    "version": "1.38-SNAPSHOT",
    "root": {
        "name": "Jenkins Job DSL API",
        "contextClass": "javaposse.jobdsl.dsl.DslFactory"
    },
    "contexts": {
        "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext",
            "methods": [
                {
                    "name": "blocksInheritance",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "blocksInheritance",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "matrix-auth",
                                "minimumVersion": "1.2"
                            },
                            "html": "Blocks inheritance of the global authorization matrix.\n     ",
                            "firstSentenceCommentText": "Blocks inheritance of the global authorization matrix."
                        }
                    ],
                    "examples": "job('example') {\n    authorization {\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "permission",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "javaposse.jobdsl.dsl.helpers.Permissions",
                                    "enumConstants": [
                                        "ItemDelete",
                                        "ItemConfigure",
                                        "ItemRead",
                                        "ItemDiscover",
                                        "ItemBuild",
                                        "ItemWorkspace",
                                        "ItemCancel",
                                        "ItemRelease",
                                        "ItemExtendedRead",
                                        "RunDelete",
                                        "RunUpdate",
                                        "ScmTag"
                                    ]
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        },
                        {
                            "parameters": [
                                {
                                    "name": "permissionEnumName",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a specific permission, but breaks apart the permission from the user name.",
                            "firstSentenceCommentText": "Adds a specific permission, but breaks apart the permission from the user name."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a specific permission.\n     ",
                            "firstSentenceCommentText": "Adds a specific permission."
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n"
                },
                {
                    "name": "permissionAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds all available permissions for the user.",
                            "firstSentenceCommentText": "Adds all available permissions for the user."
                        }
                    ],
                    "examples": "// add all permissions for user joe\njob('example') {\n    authorization {\n        permissionAll('joe')\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.BuildBlockerContext": {
            "type": "javaposse.jobdsl.dsl.BuildBlockerContext",
            "methods": [
                {
                    "name": "blockLevel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "blockLevel",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "build-blocker-plugin",
                                "minimumVersion": "1.7.1"
                            },
                            "html": "Possible values are <TT>'GLOBAL'</TT> and <TT>'NODE'</TT> (default).",
                            "firstSentenceCommentText": "Possible values are 'GLOBAL' and 'NODE' (default)."
                        }
                    ]
                },
                {
                    "name": "scanQueueFor",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scanQueueFor",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "build-blocker-plugin",
                                "minimumVersion": "1.7.1"
                            },
                            "html": "Possible values are <TT>'ALL'</TT>, <TT>'BUILDABLE'</TT> and <TT>'DISABLED'</TT> (default).",
                            "firstSentenceCommentText": "Possible values are 'ALL', 'BUILDABLE' and 'DISABLED' (default)."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContributorsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContributorsContext",
            "methods": [
                {
                    "name": "populateToolInstallations",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "shared-objects",
                                "minimumVersion": "0.1"
                            },
                            "html": "Populates the locations of installed tools as environment variables.",
                            "firstSentenceCommentText": "Populates the locations of installed tools as environment variables."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        contributors {\n            populateToolInstallations()\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext",
            "methods": [
                {
                    "name": "contributors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contributorsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.30",
                            "html": "Add environment and build variable contributors provided by other plugins.\n     ",
                            "firstSentenceCommentText": "Add environment and build variable contributors provided by other plugins.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContributorsContext"
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        contributors {\n            populateToolInstallations()\n        }\n    }\n}\n"
                },
                {
                    "name": "env",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "html": "Adds an environment variable to the build.",
                            "firstSentenceCommentText": "Adds an environment variable to the build."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        env('ONE', '1')\n        env('TWO', '2')\n    }\n}\n"
                },
                {
                    "name": "envs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<Object, Object>"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        envs(FOO: 'bar', TEST: '123')\n    }\n}\n"
                },
                {
                    "name": "groovy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30",
                            "html": "Evaluates a Groovy script and inject a map result. The groovy script must return a map Java object.\n     ",
                            "firstSentenceCommentText": "Evaluates a Groovy script and inject a map result. "
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        groovy('''\n            def a = 1\n            return [TWO: 2 * a]\n        ''')\n    }\n}\n"
                },
                {
                    "name": "keepBuildVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepBuildVariables",
                                    "type": "boolean"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Inject Jenkins build variables and also environment contributors and build variable contributors provided by\n other plugins.\n     ",
                            "firstSentenceCommentText": "Inject Jenkins build variables and also environment contributors and build variable contributors provided by\n other plugins."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "keepSystemVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepSystemVariables",
                                    "type": "boolean"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Injects Jenkins system variables and environment variables defined as global properties and as node properties.\n     ",
                            "firstSentenceCommentText": "Injects Jenkins system variables and environment variables defined as global properties and as node properties."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        keepSystemVariables(true)\n    }\n}\n"
                },
                {
                    "name": "loadFilesFromMaster",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "loadFilesFromMaster",
                                    "type": "boolean"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Load files (properties or scripts) from the master node.\n     ",
                            "firstSentenceCommentText": "Load files (properties or scripts) from the master node."
                        }
                    ]
                },
                {
                    "name": "overrideBuildParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overrideBuildParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.30",
                            "html": "Allows environment variables to override build parameters.\n     ",
                            "firstSentenceCommentText": "Allows environment variables to override build parameters."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        overrideBuildParameters()\n    }\n}\n"
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertiesFilePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds environment variables from a properties file.",
                            "firstSentenceCommentText": "Adds environment variables from a properties file."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        propertiesFile('build.properties')\n    }\n}\n"
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "html": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on.",
                            "firstSentenceCommentText": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        script('''\n           mkdir -p tests\n           rm -rf /tmp/tests.tmp\n        ''')\n    }\n}\n"
                },
                {
                    "name": "scriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptFilePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on.",
                            "firstSentenceCommentText": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on."
                        }
                    ],
                    "examples": "job('example') {\n    environmentVariables {\n        scriptFile('env.sh')\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext",
            "methods": [
                {
                    "name": "resourceNumber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourceNumber",
                                    "type": "int"
                                }
                            ],
                            "html": "Number of resources to request. By default all resources are requested.",
                            "firstSentenceCommentText": "Number of resources to request. "
                        }
                    ]
                },
                {
                    "name": "resourcesVariable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourcesVariable",
                                    "type": "String"
                                }
                            ],
                            "html": "Name for the Jenkins variable to store the reserved resources in.",
                            "firstSentenceCommentText": "Name for the Jenkins variable to store the reserved resources in."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.LogRotatorContext": {
            "type": "javaposse.jobdsl.dsl.LogRotatorContext",
            "methods": [
                {
                    "name": "artifactDaysToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int"
                                }
                            ],
                            "html": "If specified, artifacts from builds older than this number of days will be deleted, but the logs, history,\n reports, etc for the build will be kept.",
                            "firstSentenceCommentText": "If specified, artifacts from builds older than this number of days will be deleted, but the logs, history,\n reports, etc for the build will be kept."
                        }
                    ]
                },
                {
                    "name": "artifactNumToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int"
                                }
                            ],
                            "html": "If specified, only up to this number of builds have their artifacts retained.",
                            "firstSentenceCommentText": "If specified, only up to this number of builds have their artifacts retained."
                        }
                    ]
                },
                {
                    "name": "daysToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int"
                                }
                            ],
                            "html": "If specified, build records are only kept up to this number of days.",
                            "firstSentenceCommentText": "If specified, build records are only kept up to this number of days."
                        }
                    ]
                },
                {
                    "name": "numToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "numToKeep",
                                    "type": "int"
                                }
                            ],
                            "html": "If specified, only up to this number of build records are kept.",
                            "firstSentenceCommentText": "If specified, only up to this number of build records are kept."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.ClearCaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.ClearCaseContext",
            "methods": [
                {
                    "name": "configSpec",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configSpec",
                                    "type": "String..."
                                }
                            ],
                            "html": "Sets the config spec that will be used when creating the view.",
                            "firstSentenceCommentText": "Sets the config spec that will be used when creating the view."
                        }
                    ]
                },
                {
                    "name": "loadRules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "loadRules",
                                    "type": "String..."
                                }
                            ],
                            "html": "Sets the load rules for the view, which specify the path names of directories and files to load from the VOB.",
                            "firstSentenceCommentText": "Sets the load rules for the view, which specify the path names of directories and files to load from the VOB."
                        }
                    ]
                },
                {
                    "name": "mkviewOptionalParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mkviewOptionalParameter",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specifies additional arguments when creating a snapshot view using <TT>mkview</TT>.",
                            "firstSentenceCommentText": "Specifies additional arguments when creating a snapshot view using mkview."
                        }
                    ]
                },
                {
                    "name": "viewName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a view in the workspace with the specified view tag.",
                            "firstSentenceCommentText": "Creates a view in the workspace with the specified view tag."
                        }
                    ]
                },
                {
                    "name": "viewPath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewPath",
                                    "type": "String"
                                }
                            ],
                            "html": "Create a view in the workspace with the specified view path name. If left empty, the view tag will be used as\n view path.",
                            "firstSentenceCommentText": "Create a view in the workspace with the specified view path name. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.GitBrowserContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.GitBrowserContext",
            "methods": [
                {
                    "name": "gitLab",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Use GitLab as repository browser.\n     ",
                            "firstSentenceCommentText": "Use GitLab as repository browser."
                        }
                    ]
                },
                {
                    "name": "gitblit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Use Gitblit as repository browser.\n     ",
                            "firstSentenceCommentText": "Use Gitblit as repository browser."
                        }
                    ]
                },
                {
                    "name": "stash",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "html": "Use Stash as repository browser.",
                            "firstSentenceCommentText": "Use Stash as repository browser."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.GitMergeOptionsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.GitMergeOptionsContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the branch to merge.",
                            "firstSentenceCommentText": "Sets the name of the branch to merge."
                        }
                    ]
                },
                {
                    "name": "remote",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remote",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the repository that contains the branch to merge.",
                            "firstSentenceCommentText": "Sets the name of the repository that contains the branch to merge."
                        }
                    ]
                },
                {
                    "name": "strategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategy",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "git",
                                "minimumVersion": "2.0.0"
                            },
                            "html": "Selects the merge strategy.\n\n Valid values are <TT>'default'</TT> (default), <TT>'resolve'</TT>, <TT>'recursive'</TT>, <TT>'octopus'</TT>,\n <TT>'ours'</TT> and <TT>'subtree'</TT>.",
                            "firstSentenceCommentText": "Selects the merge strategy."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.RemoteContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.RemoteContext",
            "methods": [
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets credentials for authentication with the remote repository.",
                            "firstSentenceCommentText": "Sets credentials for authentication with the remote repository."
                        }
                    ]
                },
                {
                    "name": "github",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ownerAndProject",
                                    "type": "String"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'https'"
                                },
                                {
                                    "name": "host",
                                    "type": "String",
                                    "defaultValue": "'github.com'"
                                }
                            ],
                            "html": "Sets a remote URL for a GitHub repository.\n\n The URL will be derived from the <TT>ownerAndProject</TT>, <TT>protocol</TT> and <TT>host</TT> parameters.\n Supported protocols are <TT>'https'</TT>, <TT>'ssh'</TT> and <TT>'git'</TT>.",
                            "firstSentenceCommentText": "Sets a remote URL for a GitHub repository."
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a name for the remote.",
                            "firstSentenceCommentText": "Sets a name for the remote."
                        }
                    ]
                },
                {
                    "name": "refspec",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "refspec",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a refspec for the remote.",
                            "firstSentenceCommentText": "Sets a refspec for the remote."
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the remote URL.",
                            "firstSentenceCommentText": "Sets the remote URL."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.StrategyContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.StrategyContext",
            "methods": [
                {
                    "name": "ancestry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxAge",
                                    "type": "int"
                                },
                                {
                                    "name": "commit",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "git",
                                "minimumVersion": "2.3.1"
                            },
                            "html": "Selects commits to be build by maximum age and ancestor commit.",
                            "firstSentenceCommentText": "Selects commits to be build by maximum age and ancestor commit."
                        }
                    ]
                },
                {
                    "name": "gerritTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "gerrit-trigger",
                                "minimumVersion": "2.0"
                            },
                            "html": "This strategy must be selected when using the\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Gerrit+Trigger\">Gerrit Trigger Plugin</a>.",
                            "firstSentenceCommentText": "This strategy must be selected when using the\n Gerrit Trigger Plugin."
                        }
                    ]
                },
                {
                    "name": "inverse",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Build all branches except for those which match the branch specifiers.",
                            "firstSentenceCommentText": "Build all branches except for those which match the branch specifiers."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.GitContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.GitContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Specify the branches to examine for changes and to build.",
                            "firstSentenceCommentText": "Specify the branches to examine for changes and to build."
                        }
                    ]
                },
                {
                    "name": "branches",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branches",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specify the branches to examine for changes and to build.",
                            "firstSentenceCommentText": "Specify the branches to examine for changes and to build."
                        }
                    ]
                },
                {
                    "name": "browser",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitBrowserClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "html": "Adds a repository browser for browsing the details of changes in an external system.\n     ",
                            "firstSentenceCommentText": "Adds a repository browser for browsing the details of changes in an external system.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.GitBrowserContext"
                        }
                    ]
                },
                {
                    "name": "clean",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clean",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Clean up the workspace before every checkout by deleting all untracked files and directories, including those\n which are specified in <TT>.gitignore</TT>. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Clean up the workspace before every checkout by deleting all untracked files and directories, including those\n which are specified in .gitignore. "
                        }
                    ]
                },
                {
                    "name": "cloneTimeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cloneTimeout",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "git",
                                "minimumVersion": "2.0.0"
                            },
                            "html": "Specify a timeout (in minutes) for clone and fetch operations.\n     ",
                            "firstSentenceCommentText": "Specify a timeout (in minutes) for clone and fetch operations."
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>scm</TT> node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "createTag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "createTag",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Create a tag in the workspace for every build to unambiguously mark the commit that was built.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Create a tag in the workspace for every build to unambiguously mark the commit that was built.\n "
                        }
                    ]
                },
                {
                    "name": "ignoreNotifyCommit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignoreNotifyCommit",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "If set, the repository will be ignored when the notifyCommit-URL is accessed. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "If set, the repository will be ignored when the notifyCommit-URL is accessed. "
                        }
                    ]
                },
                {
                    "name": "localBranch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "localBranch",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "If given, checkout the revision to build as HEAD on this branch.\n     ",
                            "firstSentenceCommentText": "If given, checkout the revision to build as HEAD on this branch."
                        }
                    ]
                },
                {
                    "name": "mergeOptions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remote",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Allows to perform a merge to a particular branch before building.",
                            "firstSentenceCommentText": "Allows to perform a merge to a particular branch before building."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "gitMergeOptionsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.37",
                            "html": "Allows to perform a merge to a particular branch before building.\n When Git Plugin version 2.0 or later is used, this can be called multiple times to merge more than one branch.\n     ",
                            "firstSentenceCommentText": "Allows to perform a merge to a particular branch before building.\n ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.GitMergeOptionsContext"
                        }
                    ]
                },
                {
                    "name": "pruneBranches",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pruneBranches",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Prunes obsolete local branches. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Prunes obsolete local branches. "
                        }
                    ]
                },
                {
                    "name": "recursiveSubmodules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recursive",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Retrieve all submodules recursively. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Retrieve all submodules recursively. "
                        }
                    ]
                },
                {
                    "name": "reference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reference",
                                    "type": "String"
                                }
                            ],
                            "html": "Specify a folder containing a repository that will be used by Git as a reference during clone operations.",
                            "firstSentenceCommentText": "Specify a folder containing a repository that will be used by Git as a reference during clone operations."
                        }
                    ]
                },
                {
                    "name": "relativeTargetDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "relativeTargetDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Specify a local directory (relative to the workspace root) where the Git repository will be checked out.",
                            "firstSentenceCommentText": "Specify a local directory (relative to the workspace root) where the Git repository will be checked out."
                        }
                    ]
                },
                {
                    "name": "remote",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a remote. Can be repeated to add multiple remotes.",
                            "firstSentenceCommentText": "Adds a remote. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.RemoteContext"
                        }
                    ]
                },
                {
                    "name": "remotePoll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remotePoll",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Uses <TT>git ls-remote</TT> polling mechanism to compare the latest built commit SHA with the remote branch\n without cloning a local copy of the repo. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Uses git ls-remote polling mechanism to compare the latest built commit SHA with the remote branch\n without cloning a local copy of the repo. "
                        }
                    ]
                },
                {
                    "name": "shallowClone",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shallowClone",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Perform shallow clone, so that git will not download history of the project. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Perform shallow clone, so that git will not download history of the project. "
                        }
                    ]
                },
                {
                    "name": "strategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategyClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.30",
                            "html": "Sets the strategy that Jenkins will use to choose what branches to build in what order.\n     ",
                            "firstSentenceCommentText": "Sets the strategy that Jenkins will use to choose what branches to build in what order.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.StrategyContext"
                        }
                    ]
                },
                {
                    "name": "wipeOutWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "wipeOutWorkspace",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Delete the contents of the workspace before building, ensuring a fully fresh workspace.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Delete the contents of the workspace before building, ensuring a fully fresh workspace.\n "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.HgContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.HgContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Checkout selected branch.",
                            "firstSentenceCommentText": "Checkout selected branch."
                        }
                    ]
                },
                {
                    "name": "clean",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clean",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Do a clean checkout. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Do a clean checkout. "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>scm</TT> node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "html": "Use pre-defined credentials.",
                            "firstSentenceCommentText": "Use pre-defined credentials."
                        }
                    ]
                },
                {
                    "name": "disableChangeLog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableChangeLog",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disable the change log. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Disable the change log. "
                        }
                    ]
                },
                {
                    "name": "installation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "html": "Use a specific installation of Mercurial.",
                            "firstSentenceCommentText": "Use a specific installation of Mercurial."
                        }
                    ]
                },
                {
                    "name": "modules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "modules",
                                    "type": "String..."
                                }
                            ],
                            "html": "Checkout selected modules.",
                            "firstSentenceCommentText": "Checkout selected modules."
                        }
                    ]
                },
                {
                    "name": "subdirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "subdirectory",
                                    "type": "String"
                                }
                            ],
                            "html": "Checkout into subdirectory.",
                            "firstSentenceCommentText": "Checkout into subdirectory."
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tag",
                                    "type": "String"
                                }
                            ],
                            "html": "Checkout selected tag.",
                            "firstSentenceCommentText": "Checkout selected tag."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.RTCContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.RTCContext",
            "methods": [
                {
                    "name": "buildDefinition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildDefinition",
                                    "type": "String"
                                }
                            ],
                            "html": "Use a build definition for RTC integration.",
                            "firstSentenceCommentText": "Use a build definition for RTC integration."
                        }
                    ]
                },
                {
                    "name": "buildWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildWorkspace",
                                    "type": "String"
                                }
                            ],
                            "html": "Fetch from a build workspace.",
                            "firstSentenceCommentText": "Fetch from a build workspace."
                        }
                    ]
                },
                {
                    "name": "connection",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildTool",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                },
                                {
                                    "name": "serverURI",
                                    "type": "String"
                                },
                                {
                                    "name": "timeout",
                                    "type": "int"
                                }
                            ],
                            "html": "Overrides the global RTC repository connection.",
                            "firstSentenceCommentText": "Overrides the global RTC repository connection."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.SvnLocationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.SvnLocationContext",
            "methods": [
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "subversion",
                                "minimumVersion": "2.0"
                            },
                            "html": "Sets credentials for authentication with the remote server.",
                            "firstSentenceCommentText": "Sets credentials for authentication with the remote server."
                        }
                    ]
                },
                {
                    "name": "depth",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "depth",
                                    "type": "javaposse.jobdsl.dsl.helpers.scm.SvnDepth",
                                    "enumConstants": [
                                        "INFINITY",
                                        "IMMEDIATES",
                                        "EMPTY",
                                        "FILES",
                                        "AS_IT_IS"
                                    ]
                                }
                            ],
                            "html": "Specifies the depth for sparse checkouts. Defaults to <TT>SvnDepth.INFINITY</TT>.",
                            "firstSentenceCommentText": "Specifies the depth for sparse checkouts. "
                        }
                    ]
                },
                {
                    "name": "directory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "directory",
                                    "type": "String"
                                }
                            ],
                            "html": "The directoy to checkout to. By default, files are checked out into the workspace directory.",
                            "firstSentenceCommentText": "The directoy to checkout to. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.scm.SvnContext": {
            "type": "javaposse.jobdsl.dsl.helpers.scm.SvnContext",
            "methods": [
                {
                    "name": "checkoutStrategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategy",
                                    "type": "javaposse.jobdsl.dsl.helpers.scm.SvnCheckoutStrategy",
                                    "enumConstants": [
                                        "UPDATE",
                                        "CHECKOUT",
                                        "UPDATE_WITH_CLEAN",
                                        "UPDATE_WITH_REVERT"
                                    ]
                                }
                            ],
                            "html": "The checkout strategy that should be used.  This is a global setting for all locations. Defaults to\n <TT>SvnCheckoutStrategy.UPDATE</TT>.\n     ",
                            "firstSentenceCommentText": "The checkout strategy that should be used.  "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Sets a closure to be called when the XML node structure is created.\n The SVN node is passed to the closure as the first parameter.\n     ",
                            "firstSentenceCommentText": "Sets a closure to be called when the XML node structure is created.\n "
                        }
                    ]
                },
                {
                    "name": "excludedCommitMessages",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "String..."
                                }
                            ],
                            "html": "Add a list of excluded commit messages.  Each call adds to the list of excluded commit\n messages.\n     ",
                            "firstSentenceCommentText": "Add a list of excluded commit messages.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Add a list of excluded commit messages.  Each call adds to the list of excluded commit\n messages.\n     ",
                            "firstSentenceCommentText": "Add a list of excluded commit messages.  "
                        }
                    ]
                },
                {
                    "name": "excludedRegions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "String..."
                                }
                            ],
                            "html": "Add a list of excluded regions.  Each call adds to the list of excluded regions.\n     ",
                            "firstSentenceCommentText": "Add a list of excluded regions.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Add a list of excluded regions.  Each call adds to the list of excluded regions.\n     ",
                            "firstSentenceCommentText": "Add a list of excluded regions.  "
                        }
                    ]
                },
                {
                    "name": "excludedRevisionProperty",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "revisionProperty",
                                    "type": "String"
                                }
                            ],
                            "html": "Set an excluded revision property.\n     ",
                            "firstSentenceCommentText": "Set an excluded revision property."
                        }
                    ]
                },
                {
                    "name": "excludedUsers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "users",
                                    "type": "String..."
                                }
                            ],
                            "html": "Add a list of excluded users.  Each call adds to the list of excluded users.\n     ",
                            "firstSentenceCommentText": "Add a list of excluded users.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "users",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Add a list of excluded users.  Each call adds to the list of excluded users.\n     ",
                            "firstSentenceCommentText": "Add a list of excluded users.  "
                        }
                    ]
                },
                {
                    "name": "includedRegions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "String..."
                                }
                            ],
                            "html": "Add a list of included regions.  Each call adds to the list of included regions.\n     ",
                            "firstSentenceCommentText": "Add a list of included regions.  "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "patterns",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Add a list of included regions.  Each call adds to the list of included regions.\n     ",
                            "firstSentenceCommentText": "Add a list of included regions.  "
                        }
                    ]
                },
                {
                    "name": "location",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "svnUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "svnLocationClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "At least one location must be specified. Additional locations can be specified by calling <a href='#location'>location</a>\n multiple times.\n     ",
                            "firstSentenceCommentText": "At least one location must be specified. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.SvnLocationContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.ScmContext": {
            "type": "javaposse.jobdsl.dsl.helpers.ScmContext",
            "methods": [
                {
                    "name": "baseClearCase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "clearcase"
                            },
                            "html": "Adds a ClearCase SCM source.\n     ",
                            "firstSentenceCommentText": "Adds a ClearCase SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.ClearCaseContext"
                        }
                    ],
                    "examples": "// defining config spec and load rules\njob('example-1') {\n    scm {\n        baseClearCase {\n            configSpec('''element * CHECKEDOUT\nelement * /main/LATEST''')\n            loadRules('/vob/some_vob')\n        }\n    }\n}\n\n// defining config spec and load rules with multiple methods calls\njob('example-1') {\n    scm {\n        baseClearCase {\n            configSpec('element * CHECKEDOUT')\n            configSpec('element * /main/LATEST')\n            loadRules('/vob/some_vob')\n            loadRules('/vob/another_vob')\n        }\n    }\n}\n\n// defining config spec and load rules using varargs parameters\njob('example-1') {\n    scm {\n        baseClearCase {\n            configSpec('element * CHECKEDOUT', 'element * /main/LATEST')\n            loadRules('/vob/some_vob', '/vob/another_vob')\n        }\n    }\n}\n\n// reading the config spec from a file in the seed job's workspace\njob('example-1') {\n    scm {\n        baseClearCase {\n            configSpec(readFileFromWorkspace('configSpec.txt'))\n            loadRules('/vob/some_vob')\n        }\n    }\n}\n"
                },
                {
                    "name": "cloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parentProject",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "clone-workspace-scm"
                            },
                            "html": "Add a SCM source which copies the workspace of another project.\n\n Valid criteria are <TT>'Any'</TT>, <TT>'Not Failed'</TT> and <TT>'Successful'</TT>.\n     ",
                            "firstSentenceCommentText": "Add a SCM source which copies the workspace of another project."
                        }
                    ]
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "git"
                            },
                            "html": "Adds a Git SCM source.\n     ",
                            "firstSentenceCommentText": "Adds a Git SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.GitContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a Git SCM source.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Git SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a Git SCM source.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Git SCM source."
                        }
                    ],
                    "examples": "// checkout repo1 to a sub directory and clean the workspace after checkout\njob('example-1') {\n    scm {\n        git {\n            remote {\n                name('remoteB')\n                url('git@server:account/repo1.git')\n            }\n            clean()\n            relativeTargetDir('repo1')\n        }\n    }\n}\n\n// add the upstream repository as second remote and\n// merge branch featureA with master\njob('example-2') {\n    scm {\n        git {\n            remote {\n                name('origin')\n                url('git@serverA:account/repo1.git')\n            }\n            remote {\n                name('upstream')\n                url('git@serverB:account/repo1.git')\n            }\n            branch('featureA')\n            mergeOptions('upstream', 'master')\n        }\n    }\n}\n\n// add user name and email options\njob('example-3') {\n    scm {\n        git('git@git') { node -> // is hudson.plugins.git.GitSCM\n            node / gitConfigName('DSL User')\n            node / gitConfigEmail('me@me.com')\n        }\n    }\n}\n\n// add Git SCM for a GitHub repository with authentication\njob('example-4') {\n    scm {\n        git {\n            remote {\n                github('account/repo', 'ssh')\n                credentials('github-ci-key')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "github",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ownerAndProject",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'https'"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15\n",
                            "html": "Adds a Git SCM source for a GitHub repository.\n     ",
                            "firstSentenceCommentText": "Adds a Git SCM source for a GitHub repository."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "ownerAndProject",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'https'"
                                },
                                {
                                    "name": "host",
                                    "type": "String",
                                    "defaultValue": "'github.com'"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.15\n",
                            "html": "Adds a Git SCM source for a GitHub repository.\n\n The Git URL will be derived from the <TT>ownerAndProject</TT>, <TT>protocol</TT> and <TT>host</TT> parameters.\n Supported protocols are <TT>'https'</TT>, <TT>'ssh'</TT> and <TT>'git'</TT>.\n\n This will also configure the source browser to point to GitHub and set the GitHub project URL.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\n node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Adds a Git SCM source for a GitHub repository."
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "hg",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "mercurial"
                            },
                            "html": "Adds a Mercurial SCM source.",
                            "firstSentenceCommentText": "Adds a Mercurial SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "hgClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "mercurial",
                                "minimumVersion": "1.50.1"
                            },
                            "html": "Adds a Mercurial SCM source.\n     ",
                            "firstSentenceCommentText": "Adds a Mercurial SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.HgContext"
                        }
                    ],
                    "examples": "// checkout feature_branch1\njob('example-1') {\n    scm {\n        hg('http://scm', 'feature_branch1')\n    }\n}\n\n// clean checkout module1 from feature_branch1\njob('example-2') {\n    scm {\n        hg('http://scm') {\n            branch('feature_branch1')\n            modules('module1')\n            clean(true)\n        }\n    }\n}\n"
                },
                {
                    "name": "p4",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewspec",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Add Perforce SCM source.\n     ",
                            "firstSentenceCommentText": "Add Perforce SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "viewspec",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Add Perforce SCM source.\n     ",
                            "firstSentenceCommentText": "Add Perforce SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "viewspec",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "perforce"
                            },
                            "html": "Add Perforce SCM source.\n\n The client name will be set to <TT>builds-${JOB_NAME</TT>}.\n\n For security reasons, do not use a hard-coded password. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\n node is passed into the configure block.\n\n The configure block must be used to set additional options.\n     ",
                            "firstSentenceCommentText": "Add Perforce SCM source."
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        p4('//depot/Tools/build') { node ->\n            node / p4Port('perforce:1666')\n            node / p4Tool('/usr/bin/p4')\n            node / exposeP4Passwd('false')\n            node / pollOnlyOnMaster('true')\n        }\n    }\n}\n"
                },
                {
                    "name": "rtc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "teamconcert"
                            },
                            "html": "Adds a Team Concert SCM source.\n     ",
                            "firstSentenceCommentText": "Adds a Team Concert SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.RTCContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    scm {\n        rtc {\n            buildDefinition('buildDefinitionInRTC')\n        }\n    }\n}\n\njob('example-2') {\n    scm {\n        rtc {\n            buildWorkspace('some-workspace')\n            connection('my-build-tool', 'build-user', 'https://localhost:9444/ccm', 60)\n        }\n    }\n}\n"
                },
                {
                    "name": "svn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "svnUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a Subversion SCM source.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Subversion SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "svnUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "localDir",
                                    "type": "String"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a Subversion SCM source.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The <TT>scm</TT>\n node is passed into the configure block.",
                            "firstSentenceCommentText": "Adds a Subversion SCM source."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "svnClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.30",
                            "plugin": {
                                "id": "subversion"
                            },
                            "html": "Adds a Subversion SCM source.\n     ",
                            "firstSentenceCommentText": "Adds a Subversion SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.scm.SvnContext"
                        }
                    ],
                    "examples": "// checkout a project into the workspace directory\njob('example-1') {\n    scm {\n        svn('https://svn.mydomain.com/repo/project1/trunk')\n    }\n}\n\n// checkout multiple projects\njob('example-2') {\n    scm {\n        svn {\n            location('https://svn.mydomain.com/repo/project1/trunk')\n            location('https://svn.mydomain.com/repo/project2/trunk') {\n                directory('proj2')\n            }\n        }\n    }\n}\n\n// do a sparse checkout\njob('example-3') {\n    scm {\n        svn {\n            location('https://svn.mydomain.com/repo/project/trunk') {\n                directory('proj2')\n                depth(SvnDepth.EMPTY)\n            }\n        }\n    }\n}\n\n// using a different checkout strategy\njob('example-4') {\n    scm {\n        svn {\n            location('https://svn.mydomain.com/repo/project1/trunk')\n            checkoutStrategy(SvnCheckoutStrategy.CHECKOUT)\n        }\n    }\n}\n\n// configure excluded and included regions\njob('example-5') {\n    scm {\n        svn {\n            location('https://svn.mydomain.com/repo/project1/trunk')\n            excludedRegions('/project1/trunk/.*\\\\.html')\n            includedRegions('/project1/trunk/src/.*\\\\.java', '/project1/trunk/src/.*\\\\.groovy')\n        }\n    }\n}\n\n// configure excluded users, commit messages, and an excluded revision property\njob('example-6') {\n    scm {\n        svn {\n            location('https://svn.mydomain.com/repo/project1/trunk')\n            excludedUsers('jsmith')\n            excludedUsers('jdoe', 'sally')\n            excludedCommitMessages('[Bb][Aa][Dd]')\n            excludedRevisionProperty('mycompany:dontbuild')\n        }\n    }\n}\n\n// configure repository browser\njob('example-7') {\n    scm {\n        svn {\n            location('https://svn.mydomain.com/repo/project1/trunk')\n            configure { scmNode ->\n                scmNode / browser(class: 'hudson.scm.browsers.FishEyeSVN') {\n                    url('http://mycompany.com/fisheye/repo_name')\n                    rootModule('my_root_module')\n                }\n            }\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.NotificationEndpointContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationEndpointContext",
            "methods": [
                {
                    "name": "event",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "event",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "notification",
                                "minimumVersion": "1.6"
                            },
                            "html": "Sets the job lifecycle event triggering notification.\n\n Possible values are <TT>'all'</TT>, <TT>'started'</TT>, <TT>'completed'</TT> and <TT>'finalized'</TT>.",
                            "firstSentenceCommentText": "Sets the job lifecycle event triggering notification."
                        }
                    ]
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeout",
                                    "type": "int"
                                }
                            ],
                            "plugin": {
                                "id": "notification",
                                "minimumVersion": "1.6"
                            },
                            "html": "Sets a timeout in milliseconds.",
                            "firstSentenceCommentText": "Sets a timeout in milliseconds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext",
            "methods": [
                {
                    "name": "endpoint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'HTTP'"
                                },
                                {
                                    "name": "format",
                                    "type": "String",
                                    "defaultValue": "'JSON'"
                                }
                            ],
                            "html": "Adds an endpoint which will receive notifications about the job status.\n     ",
                            "firstSentenceCommentText": "Adds an endpoint which will receive notifications about the job status."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "protocol",
                                    "type": "String",
                                    "defaultValue": "'HTTP'"
                                },
                                {
                                    "name": "format",
                                    "type": "String",
                                    "defaultValue": "'JSON'"
                                },
                                {
                                    "name": "notificationEndpointClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an endpoint which will receive notifications about the job status.\n\n Possible values for the protocol argument are <TT>'HTTP'</TT>, <TT>'TCP'</TT>, and <TT>'UDP'</TT>.\n Possible values for the format argument are <TT>'JSON'</TT> and <TT>'XML'</TT>.",
                            "firstSentenceCommentText": "Adds an endpoint which will receive notifications about the job status.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationEndpointContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext",
            "methods": [
                {
                    "name": "fallbackScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fallbackScript",
                                    "type": "String"
                                }
                            ],
                            "html": "Provides alternate parameter value options in case the main script fails.",
                            "firstSentenceCommentText": "Provides alternate parameter value options in case the main script fails."
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the script that will dynamically generate the parameter value options.",
                            "firstSentenceCommentText": "Sets the script that will dynamically generate the parameter value options."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext",
            "methods": [
                {
                    "name": "parameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds parameter values for the Scriptler script.",
                            "firstSentenceCommentText": "Adds parameter values for the Scriptler script."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceContext",
            "methods": [
                {
                    "name": "choiceType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "choiceType",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects one of four different rendering options for the option values.\n\n Must be one of <TT>'SINGLE_SELECT'</TT> (default), <TT>'MULTI_SELECT'</TT>, <TT>'CHECKBOX'</TT> or <TT>'RADIO'</TT>.",
                            "firstSentenceCommentText": "Selects one of four different rendering options for the option values."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "filterable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, provides a text box filter in the UI control where a text filter can be typed.",
                            "firstSentenceCommentText": "If set, provides a text box filter in the UI control where a text filter can be typed."
                        }
                    ]
                },
                {
                    "name": "groovyScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Use a Groovy script to generate value options.",
                            "firstSentenceCommentText": "Use a Groovy script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext"
                        }
                    ]
                },
                {
                    "name": "scriptlerScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Use a Scriptler script to generate value options.",
                            "firstSentenceCommentText": "Use a Scriptler script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveContext",
            "methods": [
                {
                    "name": "choiceType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "choiceType",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects one of four different rendering options for the option values.\n\n Must be one of <TT>'SINGLE_SELECT'</TT> (default), <TT>'MULTI_SELECT'</TT>, <TT>'CHECKBOX'</TT> or <TT>'RADIO'</TT>.",
                            "firstSentenceCommentText": "Selects one of four different rendering options for the option values."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "filterable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, provides a text box filter in the UI control where a text filter can be typed.",
                            "firstSentenceCommentText": "If set, provides a text box filter in the UI control where a text filter can be typed."
                        }
                    ]
                },
                {
                    "name": "groovyScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Use a Groovy script to generate value options.",
                            "firstSentenceCommentText": "Use a Groovy script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext"
                        }
                    ]
                },
                {
                    "name": "referencedParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "referencedParameters",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a list of job parameters that trigger an auto-refresh.",
                            "firstSentenceCommentText": "Specifies a list of job parameters that trigger an auto-refresh."
                        }
                    ]
                },
                {
                    "name": "scriptlerScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Use a Scriptler script to generate value options.",
                            "firstSentenceCommentText": "Use a Scriptler script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveReferenceContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveReferenceContext",
            "methods": [
                {
                    "name": "choiceType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "choiceType",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects one of four different rendering options for the option values.\n\n Must be one of <TT>'TEXT_BOX'</TT> (default), <TT>'FORMATTED_HTML'</TT>, <TT>'FORMATTED_HIDDEN_HTML'</TT>,\n <TT>'ORDERED_LIST'</TT> or <TT>'UNORDERED_LIST'</TT>.",
                            "firstSentenceCommentText": "Selects one of four different rendering options for the option values."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "groovyScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Use a Groovy script to generate value options.",
                            "firstSentenceCommentText": "Use a Groovy script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceGroovyScriptContext"
                        }
                    ]
                },
                {
                    "name": "omitValueField",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "omitValueField",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Omits the hidden value field.",
                            "firstSentenceCommentText": "Omits the hidden value field."
                        }
                    ]
                },
                {
                    "name": "referencedParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "referencedParameters",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a list of job parameters that trigger an auto-refresh.",
                            "firstSentenceCommentText": "Specifies a list of job parameters that trigger an auto-refresh."
                        }
                    ]
                },
                {
                    "name": "scriptlerScript",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Use a Scriptler script to generate value options.",
                            "firstSentenceCommentText": "Use a Scriptler script to generate value options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceScriptlerScriptContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.parameter.CredentialsParameterContext": {
            "type": "javaposse.jobdsl.dsl.helpers.parameter.CredentialsParameterContext",
            "methods": [
                {
                    "name": "defaultValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultValue",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the default value for the parameter.",
                            "firstSentenceCommentText": "Sets the default value for the parameter."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "required",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "required",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, a value must be selected.",
                            "firstSentenceCommentText": "If set, a value must be selected."
                        }
                    ]
                },
                {
                    "name": "type",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the type of credentials which should be selectable by the parameter.\n\n Must be a fully-qualified Java class name of a credentials type. Possible values include\n <TT>'com.cloudbees.plugins.credentials.common.StandardCredentials'</TT> (default, allows any type to be chosen),\n <TT>'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl'</TT>, or\n <TT>'com.cloudbees.plugins.credentials.impl.CertificateCredentialsImpl'</TT>. Additional credentials types are\n provided by other plugins, e.g.\n <TT>'com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey'</TT> is provided by the\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/SSH+Credentials+Plugin\">SSH Credentials Plugin</a> and\n <TT>'org.jenkinsci.plugins.plaincredentials.impl.FileCredentialsImpl'</TT> and\n <TT>'org.jenkinsci.plugins.plaincredentials.impl.StringCredentialsImpl'</TT> are provided by the\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Plain+Credentials+Plugin\">Plain Credentials Plugin</a>.",
                            "firstSentenceCommentText": "Specifies the type of credentials which should be selectable by the parameter."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.GitParamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.GitParamContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Set the name of branch to look in.",
                            "firstSentenceCommentText": "Set the name of branch to look in."
                        }
                    ]
                },
                {
                    "name": "defaultValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultValue",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a default value for the parameter.",
                            "firstSentenceCommentText": "Sets a default value for the parameter."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "sortMode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sortMode",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the sort order for tags.\n\n Must be one of <TT>'NONE'</TT> (default), <TT>'ASCENDING_SMART'</TT>, <TT>'DESCENDING_SMART'</TT>,\n <TT>'ASCENDING'</TT> or <TT>'DESCENDING'</TT>.",
                            "firstSentenceCommentText": "Specifies the sort order for tags."
                        }
                    ]
                },
                {
                    "name": "tagFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tagFilter",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a filter for tags.",
                            "firstSentenceCommentText": "Specifies a filter for tags."
                        }
                    ]
                },
                {
                    "name": "type",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the type of selectable values.\n\n Must be one of <TT>'TAG'</TT> (default), <TT>'BRANCH'</TT>, <TT>'BRANCH_TAG'</TT> or <TT>'REVISION'</TT>.",
                            "firstSentenceCommentText": "Specifies the type of selectable values."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.LabelParamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.LabelParamContext",
            "methods": [
                {
                    "name": "allNodes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "trigger",
                                    "type": "String",
                                    "defaultValue": "'allCases'"
                                },
                                {
                                    "name": "eligibility",
                                    "type": "String",
                                    "defaultValue": "'AllNodeEligibility'"
                                }
                            ],
                            "html": "Defines in which case a build on the next node should be triggered.\n\n The <TT>trigger</TT> argument defines in which case a build on the next node should be triggered, must be one of\n <TT>'allCases'</TT>, <TT>'success'</TT> or <TT>'unstable'</TT>.\n\n The <TT>eligibility</TT> argument defines how selected offline nodes should be handled, must be one of\n <TT>'AllNodeEligibility'</TT>, <TT>'IgnoreOfflineNodeEligibility'</TT> or\n <TT>'IgnoreTempOfflineNodeEligibility'</TT>.",
                            "firstSentenceCommentText": "Defines in which case a build on the next node should be triggered."
                        }
                    ]
                },
                {
                    "name": "defaultValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultValue",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the default value for the parameter.",
                            "firstSentenceCommentText": "Sets the default value for the parameter."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.NodeParamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.NodeParamContext",
            "methods": [
                {
                    "name": "allowedNodes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodes",
                                    "type": "List<String>"
                                }
                            ],
                            "html": "Specifies the nodes available for selection when job gets triggered manually. Defaults to all nodes if omitted.",
                            "firstSentenceCommentText": "Specifies the nodes available for selection when job gets triggered manually. "
                        }
                    ]
                },
                {
                    "name": "defaultNodes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodes",
                                    "type": "List<String>"
                                }
                            ],
                            "html": "Specifies the nodes used when job gets triggered by anything else then manually. Empty by default.",
                            "firstSentenceCommentText": "Specifies the nodes used when job gets triggered by anything else then manually. "
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the parameter.",
                            "firstSentenceCommentText": "Sets a description for the parameter."
                        }
                    ]
                },
                {
                    "name": "eligibility",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "eligibility",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines how selected offline nodes should be handled.\n\n Must be one of <TT>'AllNodeEligibility'</TT> (default), <TT>'IgnoreOfflineNodeEligibility'</TT> or\n <TT>'IgnoreTempOfflineNodeEligibility'</TT>.",
                            "firstSentenceCommentText": "Defines how selected offline nodes should be handled."
                        }
                    ]
                },
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "trigger",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines in which case a build on the next node should be triggered.\n\n Must be one of <TT>'allCases'</TT>, <TT>'success'</TT>, <TT>'unstable'</TT>,\n <TT>'allowMultiSelectionForConcurrentBuilds'</TT> or <TT>'multiSelectionDisallowed'</TT> (default).",
                            "firstSentenceCommentText": "Defines in which case a build on the next node should be triggered."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.BuildParametersContext": {
            "type": "javaposse.jobdsl.dsl.helpers.BuildParametersContext",
            "methods": [
                {
                    "name": "activeChoiceParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "uno-choice",
                                "minimumVersion": "1.2"
                            },
                            "html": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\n script or a script from the Scriptler catalog.\n     ",
                            "firstSentenceCommentText": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\n script or a script from the Scriptler catalog.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    parameters {\n        activeChoiceParam('CHOICE-1') {\n            description('Allows user choose from multiple choices')\n            filterable()\n            choiceType('SINGLE_SELECT')\n            groovyScript {\n                script('[\"choice1\", \"choice2\"]')\n                fallbackScript('\"fallback choice\"')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    parameters {\n        activeChoiceParam('CHOICE-1') {\n            description('Allows user choose from multiple choices')\n            filterable()\n            choiceType('SINGLE_SELECT')\n            scriptlerScript('scriptler-script1.groovy') {\n                parameter('param1', 'value1')\n                parameter('param2', 'value2')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "activeChoiceReactiveParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "uno-choice",
                                "minimumVersion": "1.2"
                            },
                            "html": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\n controls change.\n     ",
                            "firstSentenceCommentText": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\n controls change.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    parameters {\n        activeChoiceReactiveParam('CHOICE-1') {\n            description('Allows user choose from multiple choices')\n            filterable()\n            choiceType('SINGLE_SELECT')\n            groovyScript {\n                script('[\"choice1\", \"choice2\"]')\n                fallbackScript('\"fallback choice\"')\n            }\n            referencedParameter('BOOLEAN-PARAM-1')\n            referencedParameter('BOOLEAN-PARAM-2')\n        }\n    }\n}\n\njob('example-2') {\n    parameters {\n        activeChoiceReactiveParam('CHOICE-1') {\n            scriptlerScript('scriptler-script1.groovy') {\n                parameter('param1', 'value1')\n                parameter('param2', 'value2')\n            }\n            referencedParameter('BOOLEAN-PARAM-1')\n        }\n    }\n}\n"
                },
                {
                    "name": "activeChoiceReactiveReferenceParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "uno-choice",
                                "minimumVersion": "1.2"
                            },
                            "html": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\n controls change.\n     ",
                            "firstSentenceCommentText": "Defines a parameter that dynamically generates a list of value options for a build parameter using a Groovy\n script or a script from the Scriptler catalog and that dynamically updates when the value of other job UI\n controls change.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.ActiveChoiceReactiveReferenceContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    parameters {\n        activeChoiceReactiveReferenceParam('CHOICE-1') {\n            description('Allows user choose from multiple choices')\n            omitValueField()\n            choiceType('FORMATTED_HIDDEN_HTML')\n            groovyScript {\n                script('[\"choice1\", \"choice2\"]')\n                fallbackScript('\"fallback choice\"')\n            }\n            referencedParameter('BOOLEAN-PARAM-1')\n            referencedParameter('BOOLEAN-PARAM-2')\n        }\n    }\n}\n\njob('example-2') {\n    parameters {\n        activeChoiceReactiveReferenceParam('CHOICE-1') {\n            scriptlerScript('scriptler-script1.groovy') {\n                parameter('param1', 'value1')\n                parameter('param2', 'value2')\n            }\n            referencedParameter('BOOLEAN-PARAM-1')\n        }\n    }\n}\n"
                },
                {
                    "name": "booleanParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Defines a simple boolean parameter.",
                            "firstSentenceCommentText": "Defines a simple boolean parameter."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('RUN_TESTS', true, 'uncheck to disable tests')\n    }\n}\n"
                },
                {
                    "name": "choiceParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "options",
                                    "type": "List<String>"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Defines a simple string parameter, which can be selected from a list.",
                            "firstSentenceCommentText": "Defines a simple string parameter, which can be selected from a list."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        choiceParam('myParameterName', ['option 1 (default)', 'option 2', 'option 3'], 'my description')\n    }\n}\n"
                },
                {
                    "name": "credentialsParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "credentials",
                                "minimumVersion": "1.22"
                            },
                            "html": "Defines a credentials parameter. The string value will be the UUID of the credential.\n     ",
                            "firstSentenceCommentText": "Defines a credentials parameter. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.parameter.CredentialsParameterContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        credentialsParam('DEPLOY_KEY') {\n            type('com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey')\n            required()\n            defaultValue('ssh-key-staging')\n            description('SSH Key for deploying build artifacts')\n        }\n    }\n}\n"
                },
                {
                    "name": "fileParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileLocation",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Defines a parameters that accepts a file submission.",
                            "firstSentenceCommentText": "Defines a parameters that accepts a file submission."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        fileParam('test/upload.zip', 'my description')\n    }\n}\n"
                },
                {
                    "name": "gitParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "git-parameter",
                                "minimumVersion": "0.4.0"
                            },
                            "html": "Defines a parameter that allows select a Git tag (or revision number).\n     ",
                            "firstSentenceCommentText": "Defines a parameter that allows select a Git tag (or revision number).",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.GitParamContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        gitParam('sha') {\n            description('Revision commit SHA')\n            type('REVISION')\n            branch('master')\n        }\n    }\n}\n"
                },
                {
                    "name": "labelParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "labelParamClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.30",
                            "plugin": {
                                "id": "nodelabelparameter"
                            },
                            "html": "Defines a parameter to select a label used to identify/restrict the node where this job should run on.\n     ",
                            "firstSentenceCommentText": "Defines a parameter to select a label used to identify/restrict the node where this job should run on.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.LabelParamContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    parameters {\n        labelParam('MY_LABEL')\n    }\n}\n\n// runs on all nodes which are labeled with \"linux\" and are online\njob('example-2') {\n    parameters {\n        labelParam('MY_LABEL') {\n            defaultValue('linux')\n            description('Select nodes')\n            allNodes('allCases', 'IgnoreOfflineNodeEligibility')\n        }\n    }\n}\n"
                },
                {
                    "name": "listTagsParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "scmUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "tagFilterRegex",
                                    "type": "String"
                                },
                                {
                                    "name": "sortNewestFirst",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sortZtoA",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "maxTagsToDisplay",
                                    "type": "String",
                                    "defaultValue": "'all'"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "subversion"
                            },
                            "html": "Defines a parameter that allows to select a Subversion tag from which to create the working copy for the project.",
                            "firstSentenceCommentText": "Defines a parameter that allows to select a Subversion tag from which to create the working copy for the project."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        listTagsParam('myParameterName', 'http://kenai.com/svn/myProject/tags', /^mytagsfilterregex/, true, true)\n    }\n}\n"
                },
                {
                    "name": "nodeParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeParamClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "nodelabelparameter"
                            },
                            "html": "Defines a parameter to select a list of nodes where the job could potentially be executed on.\n     ",
                            "firstSentenceCommentText": "Defines a parameter to select a list of nodes where the job could potentially be executed on.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.NodeParamContext"
                        }
                    ],
                    "examples": "// allows to select a single node from all nodes available\njob('example-1') {\n    parameters {\n        nodeParam('TEST_HOST')\n    }\n}\n\n// runs on node1 by default and can be run on node1, node2 or node3 when triggered manually\njob('example-2') {\n    parameters {\n        nodeParam('TEST_HOST') {\n            description('select test host')\n            defaultNodes(['node1'])\n            allowedNodes(['node1', 'node2', 'node3'])\n            trigger('multiSelectionDisallowed')\n            eligibility('IgnoreOfflineNodeEligibility')\n        }\n    }\n}\n"
                },
                {
                    "name": "runParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "jobToRun",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "filter",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Defines a run parameter, where users can pick a single run of a certain project.",
                            "firstSentenceCommentText": "Defines a run parameter, where users can pick a single run of a certain project."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        runParam('myParameterName', 'myJobName', 'my description', 'SUCCESSFUL')\n    }\n}\n"
                },
                {
                    "name": "stringParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Defines a simple text parameter, where users can enter a string value.",
                            "firstSentenceCommentText": "Defines a simple text parameter, where users can enter a string value."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        stringParam('myParameterName', 'my default stringParam value', 'my description')\n    }\n}\n"
                },
                {
                    "name": "textParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Defines a simple text parameter, where users can enter a multi-line string value.",
                            "firstSentenceCommentText": "Defines a simple text parameter, where users can enter a multi-line string value."
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        textParam('myParameterName', 'my default textParam value', 'my description')\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.properties.SidebarLinkContext": {
            "type": "javaposse.jobdsl.dsl.helpers.properties.SidebarLinkContext",
            "methods": [
                {
                    "name": "link",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "text",
                                    "type": "String"
                                },
                                {
                                    "name": "icon",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext",
            "methods": [
                {
                    "name": "customIcon",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "iconFileName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "custom-job-icon",
                                "minimumVersion": "0.2"
                            },
                            "html": "Allows to configure a custom icon for each job.\n\n The argument must point to a custom icon placed in the <TT>JENKINS_HOME/userContent/customIcon</TT> directory.\n User content can be uploaded by using\n javaposse.jobdsl.dsl.DslFactory#userContent(java.lang.String, java.io.InputStream).\n     ",
                            "firstSentenceCommentText": "Allows to configure a custom icon for each job."
                        }
                    ],
                    "examples": "userContent('customIcon/job.png', streamFileFromWorkspace('icons/job.png'))\n\njob('example') {\n    properties {\n        customIcon('job.png')\n    }\n}\n"
                },
                {
                    "name": "sidebarLinks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sidebarLinkClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "sidebar-link",
                                "minimumVersion": "1.7"
                            },
                            "html": "Adds links in the sidebar of the project page.\n\n The icon may be a plain filename of an image in Jenkins' <TT>images/24x24</TT> directory (such as\n <TT>help.gif</TT>, <TT>document.gif</TT> or <TT>refresh.gif</TT>), or <TT>/userContent/filename.ext</TT> for a custom\n icon placed in the <TT>JENKINS_HOME/userContent</TT> directory. User content can also be uploaded by using\n javaposse.jobdsl.dsl.DslFactory#userContent(java.lang.String, java.io.InputStream).\n     ",
                            "firstSentenceCommentText": "Adds links in the sidebar of the project page.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.SidebarLinkContext"
                        }
                    ],
                    "examples": "userContent('wiki.png', streamFileFromWorkspace('images/wiki.png'))\n\njob('example') {\n    properties {\n        sidebarLinks {\n            // use built-in image\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n            // use uploaded image\n            link('https://wiki.acme.org/', 'Wiki', '/userContent/wiki.png')\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext",
            "methods": [
                {
                    "name": "canRunOnFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "canRunOnFailed",
                                    "type": "Object",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, also runs when the build has failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, also runs when the build has failed. "
                        }
                    ]
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeCheckstyle",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, aggregates Checkstyle warnings. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, aggregates Checkstyle warnings. "
                        }
                    ]
                },
                {
                    "name": "computeNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "computeNew",
                                    "type": "Object"
                                }
                            ],
                            "html": "If set, computes new warnings based on the last successful build.\n This is set automatically if the <TT>unstableNew</TT> or <TT>failedNew</TT> thresholds are used.",
                            "firstSentenceCommentText": "If set, computes new warnings based on the last successful build.\n "
                        }
                    ]
                },
                {
                    "name": "defaultEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "encoding",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the encoding for parsing or showing files.",
                            "firstSentenceCommentText": "Sets the encoding for parsing or showing files."
                        }
                    ]
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeDry",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, aggregates duplicate code warnings. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, aggregates duplicate code warnings. "
                        }
                    ]
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeFindbugs",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, aggregates FindBugs warnings. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, aggregates FindBugs warnings. "
                        }
                    ]
                },
                {
                    "name": "healthLimits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer"
                                }
                            ],
                            "html": "Specifies the thresholds for the build health.",
                            "firstSentenceCommentText": "Specifies the thresholds for the build health."
                        }
                    ]
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includePmd",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, aggregates PMD warnings. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, aggregates PMD warnings. "
                        }
                    ]
                },
                {
                    "name": "shouldDetectModules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDetectModules",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, detects  Ant or Maven modules for all files that contain warnings.",
                            "firstSentenceCommentText": "If set, detects  Ant or Maven modules for all files that contain warnings."
                        }
                    ]
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeTasks",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, aggregates open tasks. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, aggregates open tasks. "
                        }
                    ]
                },
                {
                    "name": "thresholdLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "limit",
                                    "type": "String"
                                }
                            ],
                            "html": "Determines which warning priorities should be considered when evaluating the build health.\n Must be one of <TT>'low'</TT> (default), <TT>'normal'</TT> or <TT>'high'</TT>.",
                            "firstSentenceCommentText": "Determines which warning priorities should be considered when evaluating the build health.\n "
                        }
                    ]
                },
                {
                    "name": "thresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMap",
                                    "type": "Map"
                                }
                            ],
                            "html": "Sets the thresholds for considering a build as unstable or failed.\n\n The parameter is a mapping from build status to a mapping from priority to threshold. The keys of the outer map\n must be one or more of <TT>'unstableTotal'</TT>, <TT>'failedTotal'</TT>, <TT>'unstableNew'</TT> and\n <TT>'failedNew'</TT>. The keys of the inner map must be one or more of <TT>'all'</TT>, <TT>'low'</TT>,\n <TT>'normal'</TT> and <TT>'high'</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for considering a build as unstable or failed."
                        }
                    ]
                },
                {
                    "name": "useDeltaValues",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDeltaValues",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, computes the number of new warnings by subtracting the total number of warnings of the reference build\n from the total number of warnings of the current build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, computes the number of new warnings by subtracting the total number of warnings of the reference build\n from the total number of warnings of the current build. "
                        }
                    ]
                },
                {
                    "name": "useStableBuildAsReference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useStableBuildAsReference",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, uses the last stable build as the reference to compute the number of new warnings against. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, uses the last stable build as the reference to compute the number of new warnings against. "
                        }
                    ]
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeWarnings",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, aggregates compiler warnings. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, aggregates compiler warnings. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext",
            "methods": [
                {
                    "name": "canRunOnFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "canRunOnFailed",
                                    "type": "Object",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, also runs when the build has failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, also runs when the build has failed. "
                        }
                    ]
                },
                {
                    "name": "computeNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "computeNew",
                                    "type": "Object"
                                }
                            ],
                            "html": "If set, computes new warnings based on the last successful build.\n This is set automatically if the <TT>unstableNew</TT> or <TT>failedNew</TT> thresholds are used.",
                            "firstSentenceCommentText": "If set, computes new warnings based on the last successful build.\n "
                        }
                    ]
                },
                {
                    "name": "defaultEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "encoding",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the encoding for parsing or showing files.",
                            "firstSentenceCommentText": "Sets the encoding for parsing or showing files."
                        }
                    ]
                },
                {
                    "name": "healthLimits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer"
                                }
                            ],
                            "html": "Specifies the thresholds for the build health.",
                            "firstSentenceCommentText": "Specifies the thresholds for the build health."
                        }
                    ]
                },
                {
                    "name": "shouldDetectModules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDetectModules",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, detects  Ant or Maven modules for all files that contain warnings.",
                            "firstSentenceCommentText": "If set, detects  Ant or Maven modules for all files that contain warnings."
                        }
                    ]
                },
                {
                    "name": "thresholdLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "limit",
                                    "type": "String"
                                }
                            ],
                            "html": "Determines which warning priorities should be considered when evaluating the build health.\n Must be one of <TT>'low'</TT> (default), <TT>'normal'</TT> or <TT>'high'</TT>.",
                            "firstSentenceCommentText": "Determines which warning priorities should be considered when evaluating the build health.\n "
                        }
                    ]
                },
                {
                    "name": "thresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMap",
                                    "type": "Map"
                                }
                            ],
                            "html": "Sets the thresholds for considering a build as unstable or failed.\n\n The parameter is a mapping from build status to a mapping from priority to threshold. The keys of the outer map\n must be one or more of <TT>'unstableTotal'</TT>, <TT>'failedTotal'</TT>, <TT>'unstableNew'</TT> and\n <TT>'failedNew'</TT>. The keys of the inner map must be one or more of <TT>'all'</TT>, <TT>'low'</TT>,\n <TT>'normal'</TT> and <TT>'high'</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for considering a build as unstable or failed."
                        }
                    ]
                },
                {
                    "name": "useDeltaValues",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDeltaValues",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, computes the number of new warnings by subtracting the total number of warnings of the reference build\n from the total number of warnings of the current build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, computes the number of new warnings by subtracting the total number of warnings of the reference build\n from the total number of warnings of the current build. "
                        }
                    ]
                },
                {
                    "name": "useStableBuildAsReference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useStableBuildAsReference",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, uses the last stable build as the reference to compute the number of new warnings against. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, uses the last stable build as the reference to compute the number of new warnings against. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext",
            "methods": [
                {
                    "name": "allowEmpty",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowEmpty",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, does not fail the build if archiving returns nothing. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, does not fail the build if archiving returns nothing. "
                        }
                    ]
                },
                {
                    "name": "defaultExcludes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "defaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Uses default excludes. Defaults to <TT>true</TT>.\n     ",
                            "firstSentenceCommentText": "Uses default excludes. "
                        }
                    ]
                },
                {
                    "name": "exclude",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies files that will not be archived.",
                            "firstSentenceCommentText": "Specifies files that will not be archived."
                        }
                    ]
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fingerprint",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Fingerprints all archived artifacts. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Fingerprints all archived artifacts. "
                        }
                    ]
                },
                {
                    "name": "latestOnly",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "latestOnly",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "deprecated": true,
                            "html": "Keeps artifacts for the latest build only.",
                            "firstSentenceCommentText": "Keeps artifacts for the latest build only."
                        }
                    ]
                },
                {
                    "name": "onlyIfSuccessful",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyIfSuccessful",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Archives artifacts only if the build is successful. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Archives artifacts only if the build is successful. "
                        }
                    ]
                },
                {
                    "name": "pattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the files to archive. Can be called multiple times to add more patterns.",
                            "firstSentenceCommentText": "Specifies the files to archive. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext",
            "methods": [
                {
                    "name": "javadocDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to the Javadoc directory in the workspace.",
                            "firstSentenceCommentText": "Sets the path to the Javadoc directory in the workspace."
                        }
                    ]
                },
                {
                    "name": "keepAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepAll",
                                    "type": "boolean"
                                }
                            ],
                            "html": "If set, retains Javadoc for all successful builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, retains Javadoc for all successful builds. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.TestDataPublishersContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.TestDataPublishersContext",
            "methods": [
                {
                    "name": "allowClaimingOfFailedTests",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "claim",
                                "minimumVersion": "2.0"
                            },
                            "html": "Allows claiming of failed tests.",
                            "firstSentenceCommentText": "Allows claiming of failed tests."
                        }
                    ]
                },
                {
                    "name": "publishFlakyTestsReport",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.30",
                            "plugin": {
                                "id": "flaky-test-handler",
                                "minimumVersion": "1.0.0"
                            },
                            "html": "Publishes a report about flaky tests.\n     ",
                            "firstSentenceCommentText": "Publishes a report about flaky tests."
                        }
                    ]
                },
                {
                    "name": "publishTestAttachments",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "junit-attachments",
                                "minimumVersion": "1.0"
                            },
                            "html": "Published test attachments.",
                            "firstSentenceCommentText": "Published test attachments."
                        }
                    ]
                },
                {
                    "name": "publishTestStabilityData",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "test-stability",
                                "minimumVersion": "1.0"
                            },
                            "html": "Publishes the test stability history.",
                            "firstSentenceCommentText": "Publishes the test stability history."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext",
            "methods": [
                {
                    "name": "retainLongStdout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "retain",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, retains any standard output or error from a test suite in the test results after the build completes.",
                            "firstSentenceCommentText": "If set, retains any standard output or error from a test suite in the test results after the build completes."
                        }
                    ]
                },
                {
                    "name": "testDataPublishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "testDataPublishersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds additional test report features provided by other Jenkins plugins.",
                            "firstSentenceCommentText": "Adds additional test report features provided by other Jenkins plugins.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.TestDataPublishersContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext",
            "methods": [
                {
                    "name": "deleteOutputFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteOutputFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, deletes temporary JUnit files. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, deletes temporary JUnit files. "
                        }
                    ]
                },
                {
                    "name": "failIfNotNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failIfNotNew",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, fails the build if the test results have not been updated. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, fails the build if the test results have not been updated. "
                        }
                    ]
                },
                {
                    "name": "pattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies where to find test results.",
                            "firstSentenceCommentText": "Specifies where to find test results."
                        }
                    ]
                },
                {
                    "name": "skipNoTestFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "skipNoTestFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, does not fail the build if no test results have been found. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, does not fail the build if no test results have been found. "
                        }
                    ]
                },
                {
                    "name": "stopProcessingIfError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stopProcessingIfError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, fails the build on processing errors. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, fails the build on processing errors. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitCustomToolContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitCustomToolContext",
            "methods": [
                {
                    "name": "deleteOutputFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteOutputFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, deletes temporary JUnit files. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, deletes temporary JUnit files. "
                        }
                    ]
                },
                {
                    "name": "failIfNotNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failIfNotNew",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, fails the build if the test results have not been updated. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, fails the build if the test results have not been updated. "
                        }
                    ]
                },
                {
                    "name": "pattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies where to find test results.",
                            "firstSentenceCommentText": "Specifies where to find test results."
                        }
                    ]
                },
                {
                    "name": "skipNoTestFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "skipNoTestFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, does not fail the build if no test results have been found. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, does not fail the build if no test results have been found. "
                        }
                    ]
                },
                {
                    "name": "stopProcessingIfError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stopProcessingIfError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, fails the build on processing errors. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, fails the build on processing errors. "
                        }
                    ]
                },
                {
                    "name": "stylesheet",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stylesheet",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to a stylesheet for transforming custom reports.",
                            "firstSentenceCommentText": "Sets the path to a stylesheet for transforming custom reports."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext",
            "methods": [
                {
                    "name": "failure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failure",
                                    "type": "int"
                                }
                            ],
                            "html": "Fails the build if the number or percentage of test failures or skiped tests exceeds the threshold.\n Defaults to 0.",
                            "firstSentenceCommentText": "Fails the build if the number or percentage of test failures or skiped tests exceeds the threshold.\n "
                        }
                    ]
                },
                {
                    "name": "failureNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failureNew",
                                    "type": "int"
                                }
                            ],
                            "html": "Fails the build if the number or percentage of test failures or skiped tests exceeds the threshold.\n Defaults to 0.",
                            "firstSentenceCommentText": "Fails the build if the number or percentage of test failures or skiped tests exceeds the threshold.\n "
                        }
                    ]
                },
                {
                    "name": "unstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstable",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the build to unstable if the number or percentage of test failures or skiped tests exceeds the threshold.\n Defaults to 0.",
                            "firstSentenceCommentText": "Sets the build to unstable if the number or percentage of test failures or skiped tests exceeds the threshold.\n "
                        }
                    ]
                },
                {
                    "name": "unstableNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstableNew",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the build to unstable if the number or percentage of new test failures or skiped tests exceeds the\n threshold. Defaults to 0.",
                            "firstSentenceCommentText": "Sets the build to unstable if the number or percentage of new test failures or skiped tests exceeds the\n threshold. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext",
            "methods": [
                {
                    "name": "aUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an AUnit report.",
                            "firstSentenceCommentText": "Adds an AUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "boostTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a Boost test report.",
                            "firstSentenceCommentText": "Adds a Boost test report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "cTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a CTest report.",
                            "firstSentenceCommentText": "Adds a CTest report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "check",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a Check report.",
                            "firstSentenceCommentText": "Adds a Check report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "cppTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a CppTest report.",
                            "firstSentenceCommentText": "Adds a CppTest report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "cppUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a CppUnit report.",
                            "firstSentenceCommentText": "Adds a CppUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "customTool",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a report from a custom tool.",
                            "firstSentenceCommentText": "Adds a report from a custom tool.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitCustomToolContext"
                        }
                    ]
                },
                {
                    "name": "embUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an embUnit report.",
                            "firstSentenceCommentText": "Adds an embUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "failedThresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Specifies thresholds for failed tests.",
                            "firstSentenceCommentText": "Specifies thresholds for failed tests.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext"
                        }
                    ]
                },
                {
                    "name": "fpcUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a FPCUnit report.",
                            "firstSentenceCommentText": "Adds a FPCUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "googleTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a Google Test report.",
                            "firstSentenceCommentText": "Adds a Google Test report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "gtester",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "xunit",
                                "minimumVersion": "1.95"
                            },
                            "html": "Adds a gtester report.\n     ",
                            "firstSentenceCommentText": "Adds a gtester report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "jUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a JUnit report.",
                            "firstSentenceCommentText": "Adds a JUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "mbUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a MbUnit report.",
                            "firstSentenceCommentText": "Adds a MbUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "msTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a MSTest report.",
                            "firstSentenceCommentText": "Adds a MSTest report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "nUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a NUnit report.",
                            "firstSentenceCommentText": "Adds a NUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "phpUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an PHPUnit report.",
                            "firstSentenceCommentText": "Adds an PHPUnit report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "qTestLib",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an QTestLib report.",
                            "firstSentenceCommentText": "Adds an QTestLib report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "skippedThresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Specifies thresholds for skipped tests.",
                            "firstSentenceCommentText": "Specifies thresholds for skipped tests.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitThresholdContext"
                        }
                    ]
                },
                {
                    "name": "thresholdMode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMode",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext.ThresholdMode",
                                    "enumConstants": [
                                        "NUMBER",
                                        "PERCENT"
                                    ]
                                }
                            ],
                            "html": "Specifies whether thresholds are given as total number or percentages. Defaults to\n <TT>ThresholdMode.NUMBER</TT>.",
                            "firstSentenceCommentText": "Specifies whether thresholds are given as total number or percentages. "
                        }
                    ]
                },
                {
                    "name": "timeMargin",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeMargin",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies the time span in milliseconds used to consider reports as not updated. Defaults to 3 seconds.",
                            "firstSentenceCommentText": "Specifies the time span in milliseconds used to consider reports as not updated. "
                        }
                    ]
                },
                {
                    "name": "unitTest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an unittest report.",
                            "firstSentenceCommentText": "Adds an unittest report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                },
                {
                    "name": "valgrind",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resultFileClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a Valgrind report.",
                            "firstSentenceCommentText": "Adds a Valgrind report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitResultFileContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext",
            "methods": [
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a boolean parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a boolean parameter. "
                        }
                    ]
                },
                {
                    "name": "booleanParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Adds a boolean parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a boolean parameter. "
                        }
                    ]
                },
                {
                    "name": "currentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Copies parameters from the current build, except for file parameters.",
                            "firstSentenceCommentText": "Copies parameters from the current build, except for file parameters."
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "plugin": {
                                "id": "git"
                            },
                            "html": "Passes the Git commit that was used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Git commit that was used in this build to the downstream builds."
                        }
                    ]
                },
                {
                    "name": "matrixSubset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyFilter",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run.",
                            "firstSentenceCommentText": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run."
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "nodelabelparameter"
                            },
                            "html": "Defines where the target job should be executed, the value must match either a label or a node name.",
                            "firstSentenceCommentText": "Defines where the target job should be executed, the value must match either a label or a node name."
                        }
                    ]
                },
                {
                    "name": "predefinedProp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a parameter. "
                        }
                    ]
                },
                {
                    "name": "predefinedProps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "predefinedPropsMap",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "predefinedProps",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Reads parameters from a properties file.",
                            "firstSentenceCommentText": "Reads parameters from a properties file."
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Uses the same node for the triggered builds that was used for this build.",
                            "firstSentenceCommentText": "Uses the same node for the triggered builds that was used for this build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "sameNode",
                                    "type": "boolean"
                                }
                            ],
                            "deprecated": true,
                            "html": "Uses the same node for the triggered builds that was used for this build.",
                            "firstSentenceCommentText": "Uses the same node for the triggered builds that was used for this build."
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Passes the Subversion revisions that were used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Subversion revisions that were used in this build to the downstream builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext",
            "methods": [
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Adds parameter values for the projects to trigger.\n     ",
                            "firstSentenceCommentText": "Adds parameter values for the projects to trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext",
            "methods": [
                {
                    "name": "autoUpdateHealth",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoUpdateHealth",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Automatically updates the threshold for health on successful builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Automatically updates the threshold for health on successful builds. "
                        }
                    ]
                },
                {
                    "name": "autoUpdateStability",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoUpdateStability",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Automatically updates the threshold for stability on successful builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Automatically updates the threshold for stability on successful builds. "
                        }
                    ]
                },
                {
                    "name": "classTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "html": "Sets health reporting thresholds for class level converage.",
                            "firstSentenceCommentText": "Sets health reporting thresholds for class level converage."
                        }
                    ]
                },
                {
                    "name": "conditionalTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "html": "Sets health reporting thresholds for conditional level converage.",
                            "firstSentenceCommentText": "Sets health reporting thresholds for conditional level converage."
                        }
                    ]
                },
                {
                    "name": "failNoReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failNoReports",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Fails builds if no coverage reports are found. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails builds if no coverage reports are found. "
                        }
                    ]
                },
                {
                    "name": "failUnhealthy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failUnhealthy",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Fails unhealthy builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails unhealthy builds. "
                        }
                    ]
                },
                {
                    "name": "failUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failUnstable",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Fails unstable builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails unstable builds. "
                        }
                    ]
                },
                {
                    "name": "fileTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "html": "Sets health reporting thresholds for file level converage.",
                            "firstSentenceCommentText": "Sets health reporting thresholds for file level converage."
                        }
                    ]
                },
                {
                    "name": "lineTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "html": "Sets health reporting thresholds for line level converage.",
                            "firstSentenceCommentText": "Sets health reporting thresholds for line level converage."
                        }
                    ]
                },
                {
                    "name": "methodTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "html": "Sets health reporting thresholds for method level converage.",
                            "firstSentenceCommentText": "Sets health reporting thresholds for method level converage."
                        }
                    ]
                },
                {
                    "name": "onlyStable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyStable",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Considers only stable builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Considers only stable builds. "
                        }
                    ]
                },
                {
                    "name": "packageTarget",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer",
                                    "defaultValue": "8000000"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "failing",
                                    "type": "Integer",
                                    "defaultValue": "0"
                                }
                            ],
                            "html": "Sets health reporting thresholds for package level converage.",
                            "firstSentenceCommentText": "Sets health reporting thresholds for package level converage."
                        }
                    ]
                },
                {
                    "name": "sourceEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourceEncoding",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the encoding to use when showing files.",
                            "firstSentenceCommentText": "Specifies the encoding to use when showing files."
                        }
                    ]
                },
                {
                    "name": "zoomCoverageChart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "zoomCoverageChart",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Zooms the coverage chart and crop area below the minimum and above the maximum coverage of the past reports.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Zooms the coverage chart and crop area below the minimum and above the maximum coverage of the past reports.\n "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext",
            "methods": [
                {
                    "name": "commitMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commitMessage",
                                    "type": "String"
                                }
                            ],
                            "html": "If set, commits changes made to package back to SCM with the specified commit message.",
                            "firstSentenceCommentText": "If set, commits changes made to package back to SCM with the specified commit message."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext",
            "methods": [
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a boolean parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a boolean parameter. "
                        }
                    ]
                },
                {
                    "name": "condition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "condition",
                                    "type": "String"
                                }
                            ],
                            "html": "Determines for which results of the current build, the new build(s) will be triggered.\n\n Must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'UNSTABLE_OR_BETTER'</TT>, <TT>'UNSTABLE_OR_WORSE'</TT>,\n <TT>'FAILED'</TT> or <TT>'ALWAYS'</TT>.",
                            "firstSentenceCommentText": "Determines for which results of the current build, the new build(s) will be triggered."
                        }
                    ]
                },
                {
                    "name": "currentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "deprecated": true,
                            "html": "Copies parameters from the current build, except for file parameters.",
                            "firstSentenceCommentText": "Copies parameters from the current build, except for file parameters."
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Passes the Git commit that was used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Git commit that was used in this build to the downstream builds."
                        }
                    ]
                },
                {
                    "name": "matrixSubset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyFilter",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run.",
                            "firstSentenceCommentText": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run."
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "availableSince": "1.26",
                            "html": "Defines where the target job should be executed, the value must match either a label or a node name.\n     ",
                            "firstSentenceCommentText": "Defines where the target job should be executed, the value must match either a label or a node name."
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds parameter values for the projects to trigger.",
                            "firstSentenceCommentText": "Adds parameter values for the projects to trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ]
                },
                {
                    "name": "predefinedProp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a parameter. "
                        }
                    ]
                },
                {
                    "name": "predefinedProps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "predefinedPropsMap",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "predefinedProps",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propFile",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Reads parameters from a properties file.",
                            "firstSentenceCommentText": "Reads parameters from a properties file."
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sameNode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "deprecated": true,
                            "html": "Uses the same node for the triggered builds that was used for this build.",
                            "firstSentenceCommentText": "Uses the same node for the triggered builds that was used for this build."
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Passes the Subversion revisions that were used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Subversion revisions that were used in this build to the downstream builds."
                        }
                    ]
                },
                {
                    "name": "triggerWithNoParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Triggers a build even when there are currently no parameters defined.",
                            "firstSentenceCommentText": "Triggers a build even when there are currently no parameters defined."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext",
            "methods": [
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "blockingThresholds",
                                    "type": "Map<String, String>"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamTriggerContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext",
            "methods": [
                {
                    "name": "blockThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "html": "Sets the thresholds for block coverage. Defaults to <TT>0..80</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for block coverage. "
                        }
                    ]
                },
                {
                    "name": "classThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "html": "Sets the thresholds for class coverage. Defaults to <TT>0..100</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for class coverage. "
                        }
                    ]
                },
                {
                    "name": "conditionThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "html": "Sets the thresholds for branch coverage. Defaults to <TT>0..80</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for branch coverage. "
                        }
                    ]
                },
                {
                    "name": "lineThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "html": "Sets the thresholds for line coverage. Defaults to <TT>0..80</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for line coverage. "
                        }
                    ]
                },
                {
                    "name": "maxBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 100% if block coverage is greater than specified. Defaults to <TT>80</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if block coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maxClass",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 100% if class coverage is greater than specified. Defaults to <TT>100</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if class coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maxCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 100% if branch coverage is greater than specified. Defaults to <TT>80</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if branch coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maxLine",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 100% if line coverage is greater than specified. Defaults to <TT>80</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if line coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maxMethod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 100% if method coverage is greater than specified. Defaults to <TT>70</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if method coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "methodThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "range",
                                    "type": "IntRange"
                                }
                            ],
                            "html": "Sets the thresholds for method coverage. Defaults to <TT>0..70</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for method coverage. "
                        }
                    ]
                },
                {
                    "name": "minBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 0% if block coverage is less than specified. Defaults to <TT>0</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if block coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minClass",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 0% if class coverage is less than specified. Defaults to <TT>0</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if class coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 0% if branch coverage is less than specified. Defaults to <TT>0</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if branch coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minLine",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 0% if line coverage is less than specified. Defaults to <TT>0</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if line coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minMethod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "int"
                                }
                            ],
                            "html": "Reports health as 0% if method coverage is less than specified. Defaults to <TT>0</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if method coverage is less than specified. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.EmailContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>hudson.plugins.emailext.ExtendedEmailPublisher</TT> node\n is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "args",
                                    "type": "Map"
                                }
                            ],
                            "html": "Specifies the condition that should cause an email notification to be sent. Can be called multiple times to add\n more triggers.\n\n The map can contain one or more of the following keys: <TT>triggerName</TT>, <TT>subject</TT>, <TT>body</TT>,\n <TT>recipientList</TT>, <TT>sendToDevelopers</TT>, <TT>sendToRequester</TT>, <TT>includeCulprits</TT> and\n <TT>sendToRecipientList</TT>.\n\n The <TT>triggerName</TT> must be one of <TT>`PreBuild`</TT>, <TT>`StillUnstable`</TT>, <TT>`Fixed`</TT>,\n <TT>`Success`</TT>, <TT>`StillFailing`</TT>, <TT>`Improvement`</TT>, <TT>`Failure`</TT>, <TT>`Regression`</TT>,\n <TT>`Aborted`</TT>, <TT>`NotBuilt`</TT>, <TT>`FirstFailure`</TT>, <TT>`Unstable`</TT>, <TT>`Always`</TT>,\n <TT>`SecondFailure`</TT>, <TT>`FirstUnstable`</TT>, <TT>`FixedUnhealthy`</TT> or <TT>`StatusChanged`</TT>.\n Older versions of the Email-ext plugin do not support all triggers.",
                            "firstSentenceCommentText": "Specifies the condition that should cause an email notification to be sent. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "triggerName",
                                    "type": "String"
                                },
                                {
                                    "name": "subject",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "body",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "recipientList",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sendToDevelopers",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sendToRequester",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeCulprits",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sendToRecipientList",
                                    "type": "Boolean",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Specifies the condition that should cause an email notification to be sent. Can be called multiple times to add\n more triggers.\n\n The <TT>triggerName</TT> must be one of <TT>`PreBuild`</TT>, <TT>`StillUnstable`</TT>, <TT>`Fixed`</TT>,\n <TT>`Success`</TT>, <TT>`StillFailing`</TT>, <TT>`Improvement`</TT>, <TT>`Failure`</TT>, <TT>`Regression`</TT>,\n <TT>`Aborted`</TT>, <TT>`NotBuilt`</TT>, <TT>`FirstFailure`</TT>, <TT>`Unstable`</TT>, <TT>`Always`</TT>,\n <TT>`SecondFailure`</TT>, <TT>`FirstUnstable`</TT>, <TT>`FixedUnhealthy`</TT> or <TT>`StatusChanged`</TT>.\n Older versions of the Email-ext plugin do not support all triggers.",
                            "firstSentenceCommentText": "Specifies the condition that should cause an email notification to be sent. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RunConditionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext",
            "methods": [
                {
                    "name": "alwaysRun",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Runs the build steps no matter what.",
                            "firstSentenceCommentText": "Runs the build steps no matter what."
                        }
                    ]
                },
                {
                    "name": "and",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosures",
                                    "type": "Closure..."
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Runs the build steps if all of the contained conditions would run.\n     ",
                            "firstSentenceCommentText": "Runs the build steps if all of the contained conditions would run.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "batch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Runs a Windows batch script for checking the condition.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.\n     ",
                            "firstSentenceCommentText": "Runs a Windows batch script for checking the condition."
                        }
                    ]
                },
                {
                    "name": "booleanCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                }
                            ],
                            "html": "Expands the Token Macro and run the build step if it evaluates to true.",
                            "firstSentenceCommentText": "Expands the Token Macro and run the build step if it evaluates to true."
                        }
                    ]
                },
                {
                    "name": "cause",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildCause",
                                    "type": "String"
                                },
                                {
                                    "name": "exclusiveCondition",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Runs the build steps if the current build has a specific cause.",
                            "firstSentenceCommentText": "Runs the build steps if the current build has a specific cause."
                        }
                    ]
                },
                {
                    "name": "expression",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "expression",
                                    "type": "String"
                                },
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "html": "Runs the build steps if the expression matches the label.",
                            "firstSentenceCommentText": "Runs the build steps if the expression matches the label."
                        }
                    ]
                },
                {
                    "name": "fileExists",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "file",
                                    "type": "String"
                                },
                                {
                                    "name": "baseDir",
                                    "type": "javaposse.jobdsl.dsl.helpers.step.condition.FileExistsCondition.BaseDir",
                                    "enumConstants": [
                                        "JENKINS_HOME",
                                        "ARTIFACTS_DIR",
                                        "WORKSPACE"
                                    ]
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Runs the build steps if the file exists.\n     ",
                            "firstSentenceCommentText": "Runs the build steps if the file exists."
                        }
                    ]
                },
                {
                    "name": "filesMatch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includes",
                                    "type": "String"
                                },
                                {
                                    "name": "excludes",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "baseDir",
                                    "type": "javaposse.jobdsl.dsl.helpers.step.condition.FileExistsCondition.BaseDir",
                                    "enumConstants": [
                                        "JENKINS_HOME",
                                        "ARTIFACTS_DIR",
                                        "WORKSPACE"
                                    ],
                                    "defaultValue": "BaseDir.WORKSPACE"
                                }
                            ],
                            "availableSince": "1.36",
                            "html": "Runs the build steps if one or more files match the selectors.\n     ",
                            "firstSentenceCommentText": "Runs the build steps if one or more files match the selectors."
                        }
                    ]
                },
                {
                    "name": "neverRun",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Does not run the build steps.",
                            "firstSentenceCommentText": "Does not run the build steps."
                        }
                    ]
                },
                {
                    "name": "not",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Inverts the result of the selected condition.\n     ",
                            "firstSentenceCommentText": "Inverts the result of the selected condition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "or",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosures",
                                    "type": "Closure..."
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Runs the build steps if any of the contained conditions would run.\n     ",
                            "firstSentenceCommentText": "Runs the build steps if any of the contained conditions would run.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "shell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Runs a shell script for checking the condition.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.\n     ",
                            "firstSentenceCommentText": "Runs a shell script for checking the condition."
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "worstResult",
                                    "type": "String"
                                },
                                {
                                    "name": "bestResult",
                                    "type": "String"
                                }
                            ],
                            "html": "Runs the build steps if the current build status is within the configured range.\n\n The values must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT>, <TT>'NOT_BUILT'</TT> or\n <TT>'ABORTED'</TT>.",
                            "firstSentenceCommentText": "Runs the build steps if the current build status is within the configured range."
                        }
                    ]
                },
                {
                    "name": "stringsMatch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "arg1",
                                    "type": "String"
                                },
                                {
                                    "name": "arg2",
                                    "type": "String"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Runs the build steps if the two strings are the same.",
                            "firstSentenceCommentText": "Runs the build steps if the two strings are the same."
                        }
                    ]
                },
                {
                    "name": "time",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "earliestHours",
                                    "type": "int"
                                },
                                {
                                    "name": "earliestMinutes",
                                    "type": "int"
                                },
                                {
                                    "name": "latestHours",
                                    "type": "int"
                                },
                                {
                                    "name": "latestMinutes",
                                    "type": "int"
                                },
                                {
                                    "name": "useBuildTime",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Only runs the build steps during a certain period of the day.",
                            "firstSentenceCommentText": "Only runs the build steps during a certain period of the day."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext",
            "methods": [
                {
                    "name": "aborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "aborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build has been aborted. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build has been aborted. "
                        }
                    ]
                },
                {
                    "name": "chat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "chat",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a chat notification when the build fails. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a chat notification when the build fails. "
                        }
                    ]
                },
                {
                    "name": "failure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build failed. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build failed. "
                        }
                    ]
                },
                {
                    "name": "fixed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fixed",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build has been fixed. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build has been fixed. "
                        }
                    ]
                },
                {
                    "name": "notBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build has not run. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build has not run. "
                        }
                    ]
                },
                {
                    "name": "success",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "success",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is successful. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is successful. "
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tag",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a tag that should be automatically added to the notification message. Can be called multiple times to add\n more tags.",
                            "firstSentenceCommentText": "Adds a tag that should be automatically added to the notification message. "
                        }
                    ]
                },
                {
                    "name": "tags",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tags",
                                    "type": "String[]"
                                }
                            ],
                            "html": "Adds tags that should be automatically added to the notification message. Can be called multiple times to add\n more tags.",
                            "firstSentenceCommentText": "Adds tags that should be automatically added to the notification message. "
                        }
                    ]
                },
                {
                    "name": "unstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is unstable. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is unstable. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.TagToPushContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.TagToPushContext",
            "methods": [
                {
                    "name": "create",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "create",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, creates a new tag. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, creates a new tag. "
                        }
                    ]
                },
                {
                    "name": "message",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "message",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a message for the tag.",
                            "firstSentenceCommentText": "Sets a message for the tag."
                        }
                    ]
                },
                {
                    "name": "update",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "update",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, updates an existing tag. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, updates an existing tag. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetRepo",
                                    "type": "String"
                                },
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a branch to push to a remote repository. Can be called multiple times to push more branches.",
                            "firstSentenceCommentText": "Adds a branch to push to a remote repository. "
                        }
                    ]
                },
                {
                    "name": "forcePush",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "forcePush",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "git",
                                "minimumVersion": "2.2.6"
                            },
                            "html": "Adds the force option to <TT>git push</TT>.\n     ",
                            "firstSentenceCommentText": "Adds the force option to git push."
                        }
                    ]
                },
                {
                    "name": "pushMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pushMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Pushes merges back to the origin specified in the pre-build merge options. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Pushes merges back to the origin specified in the pre-build merge options. "
                        }
                    ]
                },
                {
                    "name": "pushOnlyIfSuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pushOnlyIfSuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Only pushes to remotes if the build succeeds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Only pushes to remotes if the build succeeds. "
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetRepo",
                                    "type": "String"
                                },
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a tag to push to a remote repository. Can be called multiple times to push more tags.",
                            "firstSentenceCommentText": "Adds a tag to push to a remote repository. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.TagToPushContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext",
            "methods": [
                {
                    "name": "behavior",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "enumConstants": [
                                        "DoNothing",
                                        "MarkUnstable",
                                        "MarkFailed"
                                    ]
                                }
                            ],
                            "html": "Specifies the behavior when the script fails. Defaults to <TT>Behavior.DoNothing</TT>.",
                            "firstSentenceCommentText": "Specifies the behavior when the script fails. "
                        }
                    ]
                },
                {
                    "name": "sandbox",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sandbox",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "groovy-postbuild",
                                "minimumVersion": "2.2"
                            },
                            "html": "If set, executes the the script in a sandbox environment. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, executes the the script in a sandbox environment. "
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the Groovy script to execute.\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read scripts from files.",
                            "firstSentenceCommentText": "Sets the Groovy script to execute.\n "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext",
            "methods": [
                {
                    "name": "completeJobMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "completeJobMessage",
                                    "type": "String"
                                }
                            ],
                            "html": "Configures the message that will be displayed in the room when the build is completed.",
                            "firstSentenceCommentText": "Configures the message that will be displayed in the room when the build is completed."
                        }
                    ]
                },
                {
                    "name": "notifyAborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyAborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is aborted. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is aborted. "
                        }
                    ]
                },
                {
                    "name": "notifyBackToNormal",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBackToNormal",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is back to normal. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is back to normal. "
                        }
                    ]
                },
                {
                    "name": "notifyBuildStart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBuildStart",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build starts. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build starts. "
                        }
                    ]
                },
                {
                    "name": "notifyFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is failed. "
                        }
                    ]
                },
                {
                    "name": "notifyNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyNotBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is not run. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is not run. "
                        }
                    ]
                },
                {
                    "name": "notifySuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifySuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is successful. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is successful. "
                        }
                    ]
                },
                {
                    "name": "notifyUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is unstable. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is unstable. "
                        }
                    ]
                },
                {
                    "name": "rooms",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rooms",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specifies the room names to which notifications should be sent.",
                            "firstSentenceCommentText": "Specifies the room names to which notifications should be sent."
                        }
                    ]
                },
                {
                    "name": "startJobMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "startJobMessage",
                                    "type": "String"
                                }
                            ],
                            "html": "Configures the message that will be displayed in the room when the build starts.",
                            "firstSentenceCommentText": "Configures the message that will be displayed in the room when the build starts."
                        }
                    ]
                },
                {
                    "name": "token",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets either a v1 admin/notification API token, or a v2 access token with send_notification scope.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Sets either a v1 admin/notification API token, or a v2 access token with send_notification scope."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.IrcContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext",
            "methods": [
                {
                    "name": "channel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "notificationOnly",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Adds a channel to notify. Can be called multiple times to add notify more channels.\n\n For security reasons, do not use a hard-coded password. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Adds a channel to notify. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "args",
                                    "type": "Map"
                                }
                            ],
                            "html": "Adds a channel to notify. Can be called multiple times to add notify more channels.\n\n The map can contain one or more of the following keys: <TT>name</TT>, <TT>password</TT> and\n <TT>notificationOnly</TT>.\n\n For security reasons, do not use a hard-coded password. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Adds a channel to notify. "
                        }
                    ]
                },
                {
                    "name": "notificationMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationMessage",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the message type. Must be one of <TT>'Default'</TT>, <TT>'SummaryOnly'</TT>,\n <TT>'BuildParameters'</TT> or <TT>'PrintFailingTests'</TT>.",
                            "firstSentenceCommentText": "Specifies the message type. "
                        }
                    ]
                },
                {
                    "name": "notifyScmCommitters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to the users that are suspected of having broken this build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to the users that are suspected of having broken this build. "
                        }
                    ]
                },
                {
                    "name": "notifyScmCulprits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to users from previous unstable/failed builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to users from previous unstable/failed builds. "
                        }
                    ]
                },
                {
                    "name": "notifyScmFixers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to the users that have fixed a broken build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to the users that have fixed a broken build. "
                        }
                    ]
                },
                {
                    "name": "notifyUpstreamCommitters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to upstream committers if no committers were found for a broken build. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to upstream committers if no committers were found for a broken build. "
                        }
                    ]
                },
                {
                    "name": "strategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategy",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies when to send notifications. Must be one of <TT>'ALL'</TT>, <TT>'FAILURE_AND_FIXED'</TT>,\n <TT>'ANY_FAILURE'</TT> or <TT>'STATECHANGE_ONLY'</TT>.",
                            "firstSentenceCommentText": "Specifies when to send notifications. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext",
            "methods": [
                {
                    "name": "changeBuildStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "change",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "jacoco",
                                "minimumVersion": "10.0.13"
                            },
                            "html": "If set, changes the build status according to the thresholds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, changes the build status according to the thresholds. "
                        }
                    ]
                },
                {
                    "name": "classPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classPattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to the class directories. Defaults to <TT>'**&#47;classes'</TT>.",
                            "firstSentenceCommentText": "Sets the path to the class directories. "
                        }
                    ]
                },
                {
                    "name": "exclusionPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "exclusionPattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Allows to exclude certain classes. Defaults to <TT>'**&#47;*Test*'</TT>.",
                            "firstSentenceCommentText": "Allows to exclude certain classes. "
                        }
                    ]
                },
                {
                    "name": "execPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execPattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to the exec files. Defaults to <TT>'**&#47;target/**.exec'</TT>.",
                            "firstSentenceCommentText": "Sets the path to the exec files. "
                        }
                    ]
                },
                {
                    "name": "inclusionPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "inclusionPattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Allows to include certain classes. Defaults to <TT>'**&#47;*.class'</TT>.",
                            "firstSentenceCommentText": "Allows to include certain classes. "
                        }
                    ]
                },
                {
                    "name": "maximumBranchCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumBranchCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 100% if branch coverage is greater than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if branch coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maximumClassCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumClassCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 100% if class coverage is greater than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if class coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maximumComplexityCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumComplexityCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 100% if complexity coverage is greater than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if complexity coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maximumInstructionCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumInstructionCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 100% if instruction coverage is greater than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if instruction coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maximumLineCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumLineCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 100% if line coverage is greater than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if line coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "maximumMethodCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maximumMethodCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 100% if method coverage is greater than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 100% if method coverage is greater than specified. "
                        }
                    ]
                },
                {
                    "name": "minimumBranchCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumBranchCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 0% if branch coverage is less than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if branch coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minimumClassCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumClassCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 0% if class coverage is less than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if class coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minimumComplexityCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumComplexityCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 0% if complexity coverage is less than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if complexity coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minimumInstructionCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumInstructionCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 0% if instruction coverage is less than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if instruction coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minimumLineCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumLineCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 0% if line coverage is less than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if line coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "minimumMethodCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minimumMethodCoverage",
                                    "type": "String"
                                }
                            ],
                            "html": "Reports health as 0% if method coverage is less than specified. Defaults to <TT>'0'</TT>.",
                            "firstSentenceCommentText": "Reports health as 0% if method coverage is less than specified. "
                        }
                    ]
                },
                {
                    "name": "sourcePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourcePattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to the source directories. Defaults to <TT>'**&#47;src/main/java'</TT>.",
                            "firstSentenceCommentText": "Sets the path to the source directories. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext",
            "methods": [
                {
                    "name": "evenIfDownstreamUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "evenIfDownstreamUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, runs the projects even if the downstream jobs are unstable. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, runs the projects even if the downstream jobs are unstable. "
                        }
                    ]
                },
                {
                    "name": "projects",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specifies the projects to run after all immediate downstream jobs have completed.",
                            "firstSentenceCommentText": "Specifies the projects to run after all immediate downstream jobs have completed."
                        }
                    ]
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds publishers to run after all immediate downstream jobs have completed.\n\n Currently only the <a href='../../../../../PublisherContext.html#downstreamParameterized(groovy.lang.Closure)' title='downstreamParameterized'>downstreamParameterized</a>\n publisher is supported by the Join Plugin.",
                            "firstSentenceCommentText": "Adds publishers to run after all immediate downstream jobs have completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext",
            "methods": [
                {
                    "name": "deleteOnMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteOnMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.26"
                            },
                            "html": "Deletes the branch after a successful merge. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Deletes the branch after a successful merge. "
                        }
                    ]
                },
                {
                    "name": "disallowOwnCode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disallowOwnCode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disallows a user to merge their own code. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Disallows a user to merge their own code. "
                        }
                    ]
                },
                {
                    "name": "failOnNonMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnNonMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.26"
                            },
                            "html": "Fails the build if the pull request can't be merged. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails the build if the pull request can't be merged. "
                        }
                    ]
                },
                {
                    "name": "mergeComment",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mergeComment",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a comment that should show up when the merge command is sent to GitHub.",
                            "firstSentenceCommentText": "Sets a comment that should show up when the merge command is sent to GitHub."
                        }
                    ]
                },
                {
                    "name": "onlyAdminsMerge",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyAdminsMerge",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Allows only admin users to trigger a pull request merge. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Allows only admin users to trigger a pull request merge. "
                        }
                    ]
                },
                {
                    "name": "onlyTriggerPhrase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyTriggerPhrase",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, only commenting the trigger phrase in the pull request will trigger a merge. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, only commenting the trigger phrase in the pull request will trigger a merge. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotCSVSeriesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotCSVSeriesContext",
            "methods": [
                {
                    "name": "excludeColumns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnNames",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specifies the column names to exclude from the plot.",
                            "firstSentenceCommentText": "Specifies the column names to exclude from the plot."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "columnIndexes",
                                    "type": "int..."
                                }
                            ],
                            "html": "Specifies the column indexes to exclude from the plot.",
                            "firstSentenceCommentText": "Specifies the column indexes to exclude from the plot."
                        }
                    ]
                },
                {
                    "name": "includeColumns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnNames",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specifies the column names to include in the plot.",
                            "firstSentenceCommentText": "Specifies the column names to include in the plot."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "columnIndexes",
                                    "type": "int..."
                                }
                            ],
                            "html": "Specifies the column indexes to include in the plot.",
                            "firstSentenceCommentText": "Specifies the column indexes to include in the plot."
                        }
                    ]
                },
                {
                    "name": "showTable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showTable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the original CSV data will be shown above the plot.",
                            "firstSentenceCommentText": "If set, the original CSV data will be shown above the plot."
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "html": "If set, opens the URL when a point is clicked.",
                            "firstSentenceCommentText": "If set, opens the URL when a point is clicked."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotPropertiesSeriesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotPropertiesSeriesContext",
            "methods": [
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the legend label for this data series.",
                            "firstSentenceCommentText": "Specifies the legend label for this data series."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotXMLSeriesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotXMLSeriesContext",
            "methods": [
                {
                    "name": "nodeType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodeType",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the XPath result type. Must be one of <TT>'NODESET'</TT> (default), <TT>'NODE'</TT>, <TT>'STRING'</TT>,\n <TT>'BOOLEAN'</TT> or <TT>'NUMBER'</TT>.",
                            "firstSentenceCommentText": "Sets the XPath result type. "
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                }
                            ],
                            "html": "If set, opens the URL when a point is clicked.",
                            "firstSentenceCommentText": "If set, opens the URL when a point is clicked."
                        }
                    ]
                },
                {
                    "name": "xpath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xpath",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies an XPath which selects the values that should be plotted.",
                            "firstSentenceCommentText": "Specifies an XPath which selects the values that should be plotted."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotContext",
            "methods": [
                {
                    "name": "csvFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "plotSeriesClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Loads a data series from a CSV file. Can be called multiple times to add more data series.",
                            "firstSentenceCommentText": "Loads a data series from a CSV file. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotCSVSeriesContext"
                        }
                    ]
                },
                {
                    "name": "excludeZero",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludeZero",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, does not automatically include the value zero. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, does not automatically include the value zero. "
                        }
                    ]
                },
                {
                    "name": "keepRecords",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepRecords",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, shows all builds up to included number of builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, shows all builds up to included number of builds. "
                        }
                    ]
                },
                {
                    "name": "logarithmic",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logarithmic",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the Y-axis will use a logarithmic scale. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the Y-axis will use a logarithmic scale. "
                        }
                    ]
                },
                {
                    "name": "numberOfBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "numberOfBuilds",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies the number of builds to plot across, starting with the latest build.",
                            "firstSentenceCommentText": "Specifies the number of builds to plot across, starting with the latest build."
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "plotSeriesClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Loads a data series from a properties file. Can be called multiple times to add more data series.",
                            "firstSentenceCommentText": "Loads a data series from a properties file. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotPropertiesSeriesContext"
                        }
                    ]
                },
                {
                    "name": "style",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "style",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the graph style of the plot. Must be one of <TT>'area'</TT>, <TT>'bar'</TT>, <TT>'bar3d'</TT>,\n <TT>'line'</TT> (default), <TT>'line3d'</TT>, <TT>'stackedArea'</TT>, <TT>'stackedbar'</TT>, <TT>'stackedbar3d'</TT>\n or <TT>'waterfall'</TT>.",
                            "firstSentenceCommentText": "Specifies the graph style of the plot. "
                        }
                    ]
                },
                {
                    "name": "title",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "title",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the plot title.",
                            "firstSentenceCommentText": "Specifies the plot title."
                        }
                    ]
                },
                {
                    "name": "useDescriptions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDescriptions",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, uses build descriptions used as X-axis labels. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, uses build descriptions used as X-axis labels. "
                        }
                    ]
                },
                {
                    "name": "xmlFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "plotSeriesClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Loads a data series from a XML file. Can be called multiple times to add more data series.",
                            "firstSentenceCommentText": "Loads a data series from a XML file. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotXMLSeriesContext"
                        }
                    ]
                },
                {
                    "name": "yAxis",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "yAxis",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the plot's y-axis label.",
                            "firstSentenceCommentText": "Specifies the plot's y-axis label."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext",
            "methods": [
                {
                    "name": "plot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "group",
                                    "type": "String"
                                },
                                {
                                    "name": "dataStore",
                                    "type": "String"
                                },
                                {
                                    "name": "plotClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a plot containing one or more data series. Can be called multiple times to add more plots.\n\n Plot plugin relies on a data store to hold the plot data, this is normally stored in a randomly named CSV file\n within the workspace root. To avoid conflicts this location needs to be set manually relative to the workspace\n using the <TT>dataStore</TT> parameter.",
                            "firstSentenceCommentText": "Adds a plot containing one or more data series. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.AntContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.AntContext",
            "methods": [
                {
                    "name": "antInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antInstallationName",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the name of the Ant installation to be used for this build step.",
                            "firstSentenceCommentText": "Specifies the name of the Ant installation to be used for this build step."
                        }
                    ]
                },
                {
                    "name": "buildFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the build file to be invoked. Defaults to <TT>build.gradle</TT>.",
                            "firstSentenceCommentText": "Specifies the build file to be invoked. "
                        }
                    ]
                },
                {
                    "name": "javaOpt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opt",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies custom <TT>ANT_OPTS</TT>. Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Specifies custom ANT_OPTS. "
                        }
                    ]
                },
                {
                    "name": "javaOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opts",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Specifies custom <TT>ANT_OPTS</TT>.  Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Specifies custom ANT_OPTS.  "
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "html": "Specifies a property for the Ant build. Can be called multiple times to add more properties.",
                            "firstSentenceCommentText": "Specifies a property for the Ant build. "
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Specifies properties for the Ant build. Can be called multiple times to add more properites.",
                            "firstSentenceCommentText": "Specifies properties for the Ant build. "
                        }
                    ]
                },
                {
                    "name": "target",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies an Ant target to be invoked. Can be called multiple times to add more targets.",
                            "firstSentenceCommentText": "Specifies an Ant target to be invoked. "
                        }
                    ]
                },
                {
                    "name": "targets",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Specifies Ant targets to be invoked. Can be called multiple times to add more targets.",
                            "firstSentenceCommentText": "Specifies Ant targets to be invoked. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext",
            "methods": [
                {
                    "name": "clangInstallationName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clangInstallationName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the Clang installation to use.",
                            "firstSentenceCommentText": "Sets the name of the Clang installation to use."
                        }
                    ]
                },
                {
                    "name": "configuration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configuration",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the XCode config to execute scan-build against. Defaults to <TT>Debug</TT>.",
                            "firstSentenceCommentText": "Sets the XCode config to execute scan-build against. "
                        }
                    ]
                },
                {
                    "name": "scanBuildArgs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scanBuildArgs",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets additional arguments for clang scan-build before the xcodebuild sub command.\n Defaults to <TT>'--use-analyzer Xcode'</TT>.",
                            "firstSentenceCommentText": "Sets additional arguments for clang scan-build before the xcodebuild sub command.\n "
                        }
                    ]
                },
                {
                    "name": "scheme",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scheme",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the XCode scheme.",
                            "firstSentenceCommentText": "Specifies the XCode scheme."
                        }
                    ]
                },
                {
                    "name": "targetSdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetSdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the simulator version of a currently installed SDK. Defaults to <TT>'iphonesimulator'</TT>.",
                            "firstSentenceCommentText": "Sets the simulator version of a currently installed SDK. "
                        }
                    ]
                },
                {
                    "name": "workspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspace",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the XCode workspace.",
                            "firstSentenceCommentText": "Specifies the XCode workspace."
                        }
                    ]
                },
                {
                    "name": "xcodeBuildArgs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xcodeBuildArgs",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets additional arguments for clang scan-build after the xcodebuild sub command.\n Defaults to <TT>'-derivedDataPath $WORKSPACE/build'</TT>.",
                            "firstSentenceCommentText": "Sets additional arguments for clang scan-build after the xcodebuild sub command.\n "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext",
            "methods": [
                {
                    "name": "condition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Specifies the condition to evaluate before executing the build steps.",
                            "firstSentenceCommentText": "Specifies the condition to evaluate before executing the build steps.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "runner",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "runnerName",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the action to take if the evaluation of a run condition fails. Must be one of <TT>'Fail'</TT>,\n <TT>'Unstable'</TT>, <TT>'RunUnstable'</TT>, <TT>'Run'</TT> or <TT>'DontRun'</TT>.",
                            "firstSentenceCommentText": "Specifies the action to take if the evaluation of a run condition fails. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "runner",
                                    "type": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext.EvaluationRunners",
                                    "enumConstants": [
                                        "Fail",
                                        "Unstable",
                                        "RunUnstable",
                                        "Run",
                                        "DontRun"
                                    ]
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stepContextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds one or more build steps which will be executed conditionally.",
                            "firstSentenceCommentText": "Adds one or more build steps which will be executed conditionally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext",
            "methods": [
                {
                    "name": "buildNumber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildNumber",
                                    "type": "int"
                                }
                            ],
                            "html": "Selects a specific build.",
                            "firstSentenceCommentText": "Selects a specific build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "buildNumber",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.22",
                            "html": "Selects a specific build.\n     ",
                            "firstSentenceCommentText": "Selects a specific build."
                        }
                    ]
                },
                {
                    "name": "buildParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects a build by parameter.",
                            "firstSentenceCommentText": "Selects a build by parameter."
                        }
                    ]
                },
                {
                    "name": "latestSaved",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Selects the latest saved build (marked \"keep forever\").",
                            "firstSentenceCommentText": "Selects the latest saved build (marked \"keep forever\")."
                        }
                    ]
                },
                {
                    "name": "latestSuccessful",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stable",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Selects the latest successful build. This is the default selector.",
                            "firstSentenceCommentText": "Selects the latest successful build. "
                        }
                    ]
                },
                {
                    "name": "permalink",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "linkName",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects a build by permalink.\n     ",
                            "firstSentenceCommentText": "Selects a build by permalink."
                        }
                    ]
                },
                {
                    "name": "upstreamBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fallback",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Selects the upstream build that triggered this job.\n     ",
                            "firstSentenceCommentText": "Selects the upstream build that triggered this job."
                        }
                    ]
                },
                {
                    "name": "workspace",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Copies from workspace of latest completed build.",
                            "firstSentenceCommentText": "Copies from workspace of latest completed build."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext",
            "methods": [
                {
                    "name": "buildSelector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectorClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Selects the build to copy artifacts from.",
                            "firstSentenceCommentText": "Selects the build to copy artifacts from.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        }
                    ]
                },
                {
                    "name": "excludePatterns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludePatterns",
                                    "type": "String..."
                                }
                            ],
                            "plugin": {
                                "id": "copyartifact",
                                "minimumVersion": "1.31"
                            },
                            "html": "Specify paths or patterns of artifacts to exclude. Can be called multiple times to add more patterns.",
                            "firstSentenceCommentText": "Specify paths or patterns of artifacts to exclude. "
                        }
                    ]
                },
                {
                    "name": "fingerprintArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fingerprint",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "copyartifact",
                                "minimumVersion": "1.29"
                            },
                            "html": "Automatically fingerprints all artifacts that are copied.",
                            "firstSentenceCommentText": "Automatically fingerprints all artifacts that are copied."
                        }
                    ]
                },
                {
                    "name": "flatten",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flatten",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Ignores the directory structure of the artifacts.",
                            "firstSentenceCommentText": "Ignores the directory structure of the artifacts."
                        }
                    ]
                },
                {
                    "name": "includePatterns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includePatterns",
                                    "type": "String..."
                                }
                            ],
                            "html": "Relative paths to artifact(s) to copy or leave blank to copy all artifacts. Can be called multiple times to add\n more patterns.",
                            "firstSentenceCommentText": "Relative paths to artifact(s) to copy or leave blank to copy all artifacts. "
                        }
                    ]
                },
                {
                    "name": "optional",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "optional",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Allows this build to continue even if no build is found matching the build selector.",
                            "firstSentenceCommentText": "Allows this build to continue even if no build is found matching the build selector."
                        }
                    ]
                },
                {
                    "name": "targetDirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetDirectory",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the target directory. Defaults to the workspace directory.",
                            "firstSentenceCommentText": "Specifies the target directory. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DebianContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DebianContext",
            "methods": [
                {
                    "name": "generateChangelog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nextVersion",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "alwaysBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Generates a change log.",
                            "firstSentenceCommentText": "Generates a change log."
                        }
                    ]
                },
                {
                    "name": "signPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "signPackage",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the package will be signed. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, the package will be signed. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerBlockContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerBlockContext",
            "methods": [
                {
                    "name": "buildStepFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "threshold",
                                    "type": "String"
                                }
                            ],
                            "html": "Fails the build step if the triggered build is worse or equal to the threshold.\n\n Must be of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT> or <TT>'never'</TT>.",
                            "firstSentenceCommentText": "Fails the build step if the triggered build is worse or equal to the threshold."
                        }
                    ]
                },
                {
                    "name": "failure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "threshold",
                                    "type": "String"
                                }
                            ],
                            "html": "Marks this build as failure if the triggered build is worse or equal to the threshold.\n\n Must be of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT> or <TT>'never'</TT>.",
                            "firstSentenceCommentText": "Marks this build as failure if the triggered build is worse or equal to the threshold."
                        }
                    ]
                },
                {
                    "name": "unstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "threshold",
                                    "type": "String"
                                }
                            ],
                            "html": "Mark this build as unstable if the triggered build is worse or equal to the threshold.\n\n Must be of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT> or <TT>'never'</TT>.",
                            "firstSentenceCommentText": "Mark this build as unstable if the triggered build is worse or equal to the threshold."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerParameterFactoryContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerParameterFactoryContext",
            "methods": [
                {
                    "name": "forMatchingFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filePattern",
                                    "type": "String"
                                },
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                },
                                {
                                    "name": "noFilesFoundAction",
                                    "type": "String",
                                    "defaultValue": "'SKIP'"
                                }
                            ],
                            "html": "Looks for files that match the specified pattern in the current build, then for each of them trigger a build of\n the specified project(s) by passing that file as a file parameter.\n\n The <TT>noFilesFoundAction</TT> must be one of <TT>'SKIP'</TT>, <TT>'NOPARMS'</TT> or <TT>'FAIL'</TT>.",
                            "firstSentenceCommentText": "Looks for files that match the specified pattern in the current build, then for each of them trigger a build of\n the specified project(s) by passing that file as a file parameter."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext",
            "methods": [
                {
                    "name": "block",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Blocks until the triggered projects finish their builds.",
                            "firstSentenceCommentText": "Blocks until the triggered projects finish their builds.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerBlockContext"
                        }
                    ]
                },
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a boolean parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a boolean parameter. "
                        }
                    ]
                },
                {
                    "name": "currentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "deprecated": true,
                            "html": "Copies parameters from the current build, except for file parameters.",
                            "firstSentenceCommentText": "Copies parameters from the current build, except for file parameters."
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Passes the Git commit that was used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Git commit that was used in this build to the downstream builds."
                        }
                    ]
                },
                {
                    "name": "matrixSubset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyFilter",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run.",
                            "firstSentenceCommentText": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run."
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "availableSince": "1.26",
                            "html": "Defines where the target job should be executed, the value must match either a label or a node name.\n     ",
                            "firstSentenceCommentText": "Defines where the target job should be executed, the value must match either a label or a node name."
                        }
                    ]
                },
                {
                    "name": "parameterFactories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "parameterized-trigger",
                                "minimumVersion": "2.25"
                            },
                            "html": "Adds parameters factories.",
                            "firstSentenceCommentText": "Adds parameters factories.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerParameterFactoryContext"
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds parameter values for the projects to trigger.",
                            "firstSentenceCommentText": "Adds parameter values for the projects to trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ]
                },
                {
                    "name": "predefinedProp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a parameter. "
                        }
                    ]
                },
                {
                    "name": "predefinedProps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "predefinedPropsMap",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "predefinedProps",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propFile",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Reads parameters from a properties file.",
                            "firstSentenceCommentText": "Reads parameters from a properties file."
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sameNode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "deprecated": true,
                            "html": "Uses the same node for the triggered builds that was used for this build.",
                            "firstSentenceCommentText": "Uses the same node for the triggered builds that was used for this build."
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Passes the Subversion revisions that were used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Subversion revisions that were used in this build to the downstream builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DownstreamContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DownstreamContext",
            "methods": [
                {
                    "name": "trigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "condition",
                                    "type": "String"
                                },
                                {
                                    "name": "triggerWithNoParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "blockingThresholds",
                                    "type": "Map<String, String>"
                                },
                                {
                                    "name": "downstreamTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a trigger for parametrized builds. Can be called multiple times to add more triggers.",
                            "firstSentenceCommentText": "Adds a trigger for parametrized builds. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamTriggerContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.DslContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.DslContext",
            "methods": [
                {
                    "name": "additionalClasspath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classpath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Adds entries to the classpath for DSL scripts.\n     ",
                            "firstSentenceCommentText": "Adds entries to the classpath for DSL scripts."
                        }
                    ]
                },
                {
                    "name": "external",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "dslScripts",
                                    "type": "String..."
                                }
                            ],
                            "html": "Reads Job DSL scripts from the job's workspace.",
                            "firstSentenceCommentText": "Reads Job DSL scripts from the job's workspace."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "dslScripts",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Reads Job DSL scripts from the job's workspace.\n     ",
                            "firstSentenceCommentText": "Reads Job DSL scripts from the job's workspace."
                        }
                    ]
                },
                {
                    "name": "ignoreExisting",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignore",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Ignores existing items when processing Job DSL scripts. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Ignores existing items when processing Job DSL scripts. "
                        }
                    ]
                },
                {
                    "name": "lookupStrategy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "lookupStrategy",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Chooses the lookup strategy for relative job names.\n\n Must be either <TT>'JENKINS_ROOT'</TT> (default) or <TT>'SEED_JOB'</TT>.\n     ",
                            "firstSentenceCommentText": "Chooses the lookup strategy for relative job names."
                        }
                    ]
                },
                {
                    "name": "removeAction",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "action",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the action to be taken for job that have been removed from DSL scripts.\n\n Must be one of <TT>'IGNORE'</TT> (default), <TT>'DISABLE'</TT> or <TT>'DELETE'</TT>.",
                            "firstSentenceCommentText": "Specifies the action to be taken for job that have been removed from DSL scripts."
                        }
                    ]
                },
                {
                    "name": "removeViewAction",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "action",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Specifies the action to be taken for views that have been removed from DSL scripts.\n\n Must be either <TT>'IGNORE'</TT> (default) or <TT>'DELETE'</TT>.\n     ",
                            "firstSentenceCommentText": "Specifies the action to be taken for views that have been removed from DSL scripts."
                        }
                    ]
                },
                {
                    "name": "text",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "text",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the Job DSL script.",
                            "firstSentenceCommentText": "Sets the Job DSL script."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext",
            "methods": [
                {
                    "name": "env",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "html": "Adds an environment variable to the build.",
                            "firstSentenceCommentText": "Adds an environment variable to the build."
                        }
                    ]
                },
                {
                    "name": "envs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<Object, Object>"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build."
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertiesFilePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds environment variables from a properties file.",
                            "firstSentenceCommentText": "Adds environment variables from a properties file."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.GradleContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.GradleContext",
            "methods": [
                {
                    "name": "buildFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the name of the Gradle build script file. Defaults to <TT>build.gradle</TT>.",
                            "firstSentenceCommentText": "Specifies the name of the Gradle build script file. "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>hudson.plugins.gradle.Gradle</TT> node is passed into the\n configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the build step.",
                            "firstSentenceCommentText": "Sets a description for the build step."
                        }
                    ]
                },
                {
                    "name": "fromRootBuildScriptDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fromRootBuildScriptDir",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Defaults to true."
                        }
                    ]
                },
                {
                    "name": "gradleName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gradleName",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the name of the Gradle installation to use if not using the wrapper.",
                            "firstSentenceCommentText": "Specifies the name of the Gradle installation to use if not using the wrapper."
                        }
                    ]
                },
                {
                    "name": "makeExecutable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "makeExecutable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sets the executable flag on the wrapper script file before invoking the file. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sets the executable flag on the wrapper script file before invoking the file. "
                        }
                    ]
                },
                {
                    "name": "rootBuildScriptDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rootBuildScriptDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the directory containing the <TT>build.gradle</TT>. Defaults to the workspace directory.",
                            "firstSentenceCommentText": "Specifies the directory containing the build.gradle. "
                        }
                    ]
                },
                {
                    "name": "switches",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "switches",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the Gradle switches to be invoked. Can be called multiple times to add more switches.",
                            "firstSentenceCommentText": "Specifies the Gradle switches to be invoked. "
                        }
                    ]
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the Gradle tasks to be invoked. Can be called multiple times to add more tasks.",
                            "firstSentenceCommentText": "Specifies the Gradle tasks to be invoked. "
                        }
                    ]
                },
                {
                    "name": "useWrapper",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useWrapper",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Use the Gradle wrapper to invoke the build script. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Use the Gradle wrapper to invoke the build script. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.GrailsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.GrailsContext",
            "methods": [
                {
                    "name": "forceUpgrade",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "forceUpgrade",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Runs <TT>grails upgrade --non-interactive</TT> first. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Runs grails upgrade --non-interactive first. "
                        }
                    ]
                },
                {
                    "name": "grailsWorkDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "grailsWorkDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Specify a value for the <TT>grails.work.dir</TT> system property.",
                            "firstSentenceCommentText": "Specify a value for the grails.work.dir system property."
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects a Grails installation to use.",
                            "firstSentenceCommentText": "Selects a Grails installation to use."
                        }
                    ]
                },
                {
                    "name": "nonInteractive",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nonInteractive",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Appends <TT>--non-interactive</TT> to all build targets. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Appends --non-interactive to all build targets. "
                        }
                    ]
                },
                {
                    "name": "projectBaseDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectBaseDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a path to the root of the Grails project.",
                            "firstSentenceCommentText": "Specifies a path to the root of the Grails project."
                        }
                    ]
                },
                {
                    "name": "projectWorkDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectWorkDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a value for the <TT>grails.project.work.dir</TT> system property.",
                            "firstSentenceCommentText": "Specifies a value for the grails.project.work.dir system property."
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds an additional system property. Can be called multiple times to add more properties.",
                            "firstSentenceCommentText": "Adds an additional system property. "
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Adds additional system properties. Can be called multiple times to add more properties.",
                            "firstSentenceCommentText": "Adds additional system properties. "
                        }
                    ]
                },
                {
                    "name": "serverPort",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "serverPort",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a value for the <TT>server.port</TT> system property.",
                            "firstSentenceCommentText": "Specifies a value for the server.port system property."
                        }
                    ]
                },
                {
                    "name": "target",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "target",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a target to be invoked. Can be called multiple times to add more targets.",
                            "firstSentenceCommentText": "Specifies a target to be invoked. "
                        }
                    ]
                },
                {
                    "name": "targets",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "addlTargets",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Specifies targets to be invoked. Can be called multiple times to add more targets.",
                            "firstSentenceCommentText": "Specifies targets to be invoked. "
                        }
                    ]
                },
                {
                    "name": "useWrapper",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useWrapper",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Use the Grails wrapper to invoke the build script. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use the Grails wrapper to invoke the build script. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.GroovyContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.GroovyContext",
            "methods": [
                {
                    "name": "classpath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classpath",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the script classpath. Can be called multiple times to add more entries.",
                            "firstSentenceCommentText": "Specifies the script classpath. "
                        }
                    ]
                },
                {
                    "name": "groovyInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groovyInstallationName",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the name of the Groovy installation to be used for executing the script.",
                            "firstSentenceCommentText": "Specifies the name of the Groovy installation to be used for executing the script."
                        }
                    ]
                },
                {
                    "name": "groovyParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "param",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a parameter for the Groovy executable. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a parameter for the Groovy executable. "
                        }
                    ]
                },
                {
                    "name": "groovyParams",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "params",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds parameters for the Groovy executable. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters for the Groovy executable. "
                        }
                    ]
                },
                {
                    "name": "javaOpt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opt",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a <TT>JAVA_OPTS</TT> option. Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Adds a JAVA_OPTS option. "
                        }
                    ]
                },
                {
                    "name": "javaOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "opts",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds <TT>JAVA_OPTS</TT> options. Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Adds JAVA_OPTS options. "
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a property (-D parameter) for the Groovy script. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a property (-D parameter) for the Groovy script. "
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Adds properties (-D parameter) for the Groovy script. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds properties (-D parameter) for the Groovy script. "
                        }
                    ]
                },
                {
                    "name": "scriptParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "param",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a parameter for the Groovy script. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a parameter for the Groovy script. "
                        }
                    ]
                },
                {
                    "name": "scriptParams",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "params",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds parameters for the Groovy script. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters for the Groovy script. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext",
            "methods": [
                {
                    "name": "authentication",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "authentication",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the key of the authentication to be used. Authentications are created in global configuration.",
                            "firstSentenceCommentText": "Sets the key of the authentication to be used. "
                        }
                    ]
                },
                {
                    "name": "httpMode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "httpMode",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the HTTP method to use. Must be one of <TT>'GET'</TT>, <TT>'POST'</TT>, <TT>'PUT'</TT> or <TT>'DELETE'</TT>.",
                            "firstSentenceCommentText": "Sets the HTTP method to use. "
                        }
                    ]
                },
                {
                    "name": "logResponseBody",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logResponseBody",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Allows to write the response body to the log. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Allows to write the response body to the log. "
                        }
                    ]
                },
                {
                    "name": "returnCodeBuildRelevant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "returnCodeBuildRelevant",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Fails the build if the response contains an error. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails the build if the response contains an error. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.MavenContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.MavenContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>hudson.tasks.Maven</TT> node is passed into the configure\n block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "goals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "goals",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the goals to execute including other command line options.\n When specified multiple times, the goals and options will be concatenated.\n     ",
                            "firstSentenceCommentText": "Specifies the goals to execute including other command line options.\n "
                        }
                    ]
                },
                {
                    "name": "localRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.common.MavenContext.LocalRepositoryLocation",
                                    "enumConstants": [
                                        "LocalToExecutor",
                                        "LocalToWorkspace"
                                    ]
                                }
                            ],
                            "deprecated": true,
                            "html": "Set to use isolated local Maven repositories. Defaults to <TT>LocalRepositoryLocation.LocalToExecutor</TT>.\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.LocalRepositoryLocation",
                                    "enumConstants": [
                                        "LOCAL_TO_EXECUTOR",
                                        "LOCAL_TO_WORKSPACE"
                                    ]
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "Set to use isolated local Maven repositories. Defaults to <TT>LocalRepositoryLocation.LOCAL_TO_EXECUTOR</TT>.\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories. "
                        }
                    ]
                },
                {
                    "name": "mavenInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the Maven installation for executing this step.\n     ",
                            "firstSentenceCommentText": "Specifies the Maven installation for executing this step."
                        }
                    ]
                },
                {
                    "name": "mavenOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mavenOpts",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the JVM options needed when launching Maven as an external process.\n\n When specified multiple times, the options will be concatenated.\n     ",
                            "firstSentenceCommentText": "Specifies the JVM options needed when launching Maven as an external process."
                        }
                    ]
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "props",
                                    "type": "Map"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Adds properties for the Maven build.\n     ",
                            "firstSentenceCommentText": "Adds properties for the Maven build."
                        }
                    ]
                },
                {
                    "name": "property",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Adds a property for the Maven build.\n     ",
                            "firstSentenceCommentText": "Adds a property for the Maven build."
                        }
                    ]
                },
                {
                    "name": "providedSettings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "settingsName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Specifies the managed Maven settings to be used.\n     ",
                            "firstSentenceCommentText": "Specifies the managed Maven settings to be used."
                        }
                    ]
                },
                {
                    "name": "rootPOM",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rootPOM",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the path to the root POM.\n     ",
                            "firstSentenceCommentText": "Specifies the path to the root POM."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshCredentialsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshCredentialsContext",
            "methods": [
                {
                    "name": "key",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the private key.\n\n For security reasons, do not use a hard-coded keys. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Specifies the private key."
                        }
                    ]
                },
                {
                    "name": "pathToKey",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pathToKey",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to the private key.",
                            "firstSentenceCommentText": "Sets the path to the private key."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshTransferSetContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshTransferSetContext",
            "methods": [
                {
                    "name": "excludeFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludeFiles",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies files to exclude from the transfer set.",
                            "firstSentenceCommentText": "Specifies files to exclude from the transfer set."
                        }
                    ]
                },
                {
                    "name": "execCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execCommand",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a command to execute on the remote server.",
                            "firstSentenceCommentText": "Specifies a command to execute on the remote server."
                        }
                    ]
                },
                {
                    "name": "execInPty",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execInPty",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Executes the command in a pseudo tty. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Executes the command in a pseudo tty. "
                        }
                    ]
                },
                {
                    "name": "execTimeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "execTimeout",
                                    "type": "long"
                                }
                            ],
                            "html": "Sets a timeout in milliseconds for the command to execute. Defaults to two minutes.",
                            "firstSentenceCommentText": "Sets a timeout in milliseconds for the command to execute. "
                        }
                    ]
                },
                {
                    "name": "flattenFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Only creates files on the server, does not create directories. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Only creates files on the server, does not create directories. "
                        }
                    ]
                },
                {
                    "name": "makeEmptyDirs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "makeEmptyDirs",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, this option will create any directories that match the Source files pattern, even if empty.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, this option will create any directories that match the Source files pattern, even if empty.\n "
                        }
                    ]
                },
                {
                    "name": "noDefaultExcludes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "noDefaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the default exclude patterns are disabled. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the default exclude patterns are disabled. "
                        }
                    ]
                },
                {
                    "name": "patternSeparator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "patternSeparator",
                                    "type": "String"
                                }
                            ],
                            "html": "The regular expression that is used to separate the source files and exclude files patterns. Defaults to\n <TT>'[, ]+'</TT>.",
                            "firstSentenceCommentText": "The regular expression that is used to separate the source files and exclude files patterns. "
                        }
                    ]
                },
                {
                    "name": "remoteDirIsDateFormat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteDirIsDateFormat",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Select this to include a timestamp in the remote directory. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Select this to include a timestamp in the remote directory. "
                        }
                    ]
                },
                {
                    "name": "remoteDirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteDirectory",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the destination folder.",
                            "firstSentenceCommentText": "Sets the destination folder."
                        }
                    ]
                },
                {
                    "name": "removePrefix",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "prefix",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the first part of the file path that should not be created on the remote server.",
                            "firstSentenceCommentText": "Sets the first part of the file path that should not be created on the remote server."
                        }
                    ]
                },
                {
                    "name": "sourceFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourceFiles",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the files to upload to a server.",
                            "firstSentenceCommentText": "Sets the files to upload to a server."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshServerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshServerContext",
            "methods": [
                {
                    "name": "credentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "username",
                                    "type": "String"
                                },
                                {
                                    "name": "credentialsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Sets the credentials to use with this connection.",
                            "firstSentenceCommentText": "Sets the credentials to use with this connection.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshCredentialsContext"
                        }
                    ]
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "html": "Set the label for this Server instance for use with parametrized publishing.",
                            "firstSentenceCommentText": "Set the label for this Server instance for use with parametrized publishing."
                        }
                    ]
                },
                {
                    "name": "retry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "retries",
                                    "type": "int",
                                    "defaultValue": "0"
                                },
                                {
                                    "name": "delay",
                                    "type": "int",
                                    "defaultValue": "10000"
                                }
                            ],
                            "html": "Tries again if publishing to the server or command execution fails.",
                            "firstSentenceCommentText": "Tries again if publishing to the server or command execution fails."
                        }
                    ]
                },
                {
                    "name": "transferSet",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "transferSetClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a transfer set. Can be called multiple times to add more transfer sets.",
                            "firstSentenceCommentText": "Adds a transfer set. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshTransferSetContext"
                        }
                    ]
                },
                {
                    "name": "verbose",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verbose",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Enables logging of detailed information to the Jenkins console.",
                            "firstSentenceCommentText": "Enables logging of detailed information to the Jenkins console."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext": {
            "type": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext",
            "methods": [
                {
                    "name": "alwaysPublishFromMaster",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alwaysPublishFromMaster",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Publishes from the Jenkins master. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Publishes from the Jenkins master. "
                        }
                    ]
                },
                {
                    "name": "continueOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "continueOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Continues publishing to the other servers after a problem with a previous server. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Continues publishing to the other servers after a problem with a previous server. "
                        }
                    ]
                },
                {
                    "name": "failOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Mark the build as a failure if there is a problem publishing to a server. The default is to mark the build as\n unstable.",
                            "firstSentenceCommentText": "Mark the build as a failure if there is a problem publishing to a server. "
                        }
                    ]
                },
                {
                    "name": "parameterizedPublishing",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameterName",
                                    "type": "String"
                                }
                            ],
                            "html": "Publishes to servers by matching labels against a regular expression provided by a parameter or an environment\n variable.",
                            "firstSentenceCommentText": "Publishes to servers by matching labels against a regular expression provided by a parameter or an environment\n variable."
                        }
                    ]
                },
                {
                    "name": "server",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "serverClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a target server. Can be called multiple times to add more servers.",
                            "firstSentenceCommentText": "Adds a target server. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshServerContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.PythonContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.PythonContext",
            "methods": [
                {
                    "name": "command",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the Python or shell script to execute.",
                            "firstSentenceCommentText": "Sets the Python or shell script to execute."
                        }
                    ]
                },
                {
                    "name": "ignoreExitCode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignoreExitCode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the build will not fail if the command exits with a non-zero exit code.\n     ",
                            "firstSentenceCommentText": "If set, the build will not fail if the command exits with a non-zero exit code."
                        }
                    ]
                },
                {
                    "name": "nature",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nature",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the nature of the <a href='#command(java.lang.String)'>command</a> option. Must be one of <TT>'shell'</TT>\n (default), <TT>'xshell'</TT> or <TT>'python'</TT>.",
                            "firstSentenceCommentText": "Sets the nature of the command option. "
                        }
                    ]
                },
                {
                    "name": "pythonName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pythonName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the Python installation to use. Defaults to <TT>'System-CPython-2.7'</TT>.",
                            "firstSentenceCommentText": "Sets the name of the Python installation to use. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RakeContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RakeContext",
            "methods": [
                {
                    "name": "bundleExec",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "bundleExec",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Executes Rake with Bundler 'bundle exec rake'. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Executes Rake with Bundler 'bundle exec rake'. "
                        }
                    ]
                },
                {
                    "name": "file",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "file",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to a Rakefile. Defaults to <TT>'Rakefile'</TT>.",
                            "firstSentenceCommentText": "Sets the path to a Rakefile. "
                        }
                    ]
                },
                {
                    "name": "installation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the Ruby installation to use.",
                            "firstSentenceCommentText": "Specifies the Ruby installation to use."
                        }
                    ]
                },
                {
                    "name": "libDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "libDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to Rake library directory. Defaults to <TT>'rakelib'</TT>.",
                            "firstSentenceCommentText": "Sets the path to Rake library directory. "
                        }
                    ]
                },
                {
                    "name": "silent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "silent",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Prevents logging of messages or announcements to standard output. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Prevents logging of messages or announcements to standard output. "
                        }
                    ]
                },
                {
                    "name": "task",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "task",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a single task to execute.",
                            "firstSentenceCommentText": "Adds a single task to execute."
                        }
                    ]
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Add a list of tasks to execute.",
                            "firstSentenceCommentText": "Add a list of tasks to execute."
                        }
                    ]
                },
                {
                    "name": "workingDir",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workingDir",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the path the working directory in which Rake should be executed. Defaults to the workspace directory.",
                            "firstSentenceCommentText": "Specifies the path the working directory in which Rake should be executed. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext",
            "methods": [
                {
                    "name": "blockBuildUntilComplete",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "blockUntilBuildComplete",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Blocks the job until the remote triggered projects finish their builds. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Blocks the job until the remote triggered projects finish their builds. "
                        }
                    ]
                },
                {
                    "name": "parameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a parameter value for the remote job. Can be called multiple times to add more parameter values.",
                            "firstSentenceCommentText": "Adds a parameter value for the remote job. "
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parameters",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Adds parameter values for the remote job. Can be called multiple times to add more parameter values.",
                            "firstSentenceCommentText": "Adds parameter values for the remote job. "
                        }
                    ]
                },
                {
                    "name": "pollInterval",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pollInterval",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Sets the poll interval in seconds. Defaults to 10 seconds.\n     ",
                            "firstSentenceCommentText": "Sets the poll interval in seconds. "
                        }
                    ]
                },
                {
                    "name": "preventRemoteBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "preventRemoteBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "If set, waits to trigger remote builds until no other builds are running. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "If set, waits to trigger remote builds until no other builds are running. "
                        }
                    ]
                },
                {
                    "name": "shouldNotFailBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldNotFailBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, a failure of the remote job will not fail this job. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, a failure of the remote job will not fail this job. "
                        }
                    ]
                },
                {
                    "name": "token",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.38",
                            "html": "Sets a security token which is defined on the job of the remote Jenkins host.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.\n     ",
                            "firstSentenceCommentText": "Sets a security token which is defined on the job of the remote Jenkins host."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorArtifactContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorArtifactContext",
            "methods": [
                {
                    "name": "artifactId",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactId",
                                    "type": "String"
                                }
                            ],
                            "html": "Id of the Maven artifact.\r\n     ",
                            "firstSentenceCommentText": "Id of the Maven artifact."
                        }
                    ]
                },
                {
                    "name": "classifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classifier",
                                    "type": "String"
                                }
                            ],
                            "html": "Optional Maven classifier.\r\n     ",
                            "firstSentenceCommentText": "Optional Maven classifier."
                        }
                    ]
                },
                {
                    "name": "extension",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "extension",
                                    "type": "String"
                                }
                            ],
                            "html": "Artifact extension, defaults to <code>jar</code>.\r\n     ",
                            "firstSentenceCommentText": "Artifact extension, defaults to jar."
                        }
                    ]
                },
                {
                    "name": "groupId",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groupId",
                                    "type": "String"
                                }
                            ],
                            "html": "Id of the Maven group.\r\n     ",
                            "firstSentenceCommentText": "Id of the Maven group."
                        }
                    ]
                },
                {
                    "name": "targetFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetFileName",
                                    "type": "String"
                                }
                            ],
                            "html": "Optional target file name.\r\n     ",
                            "firstSentenceCommentText": "Optional target file name."
                        }
                    ]
                },
                {
                    "name": "version",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "html": "Version of the artifact to download.\r\n     ",
                            "firstSentenceCommentText": "Version of the artifact to download."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext",
            "methods": [
                {
                    "name": "artifact",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds an artifact for resolution from a repository. Can be called multiple times to resolve more artifacts.",
                            "firstSentenceCommentText": "Adds an artifact for resolution from a repository. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorArtifactContext"
                        }
                    ]
                },
                {
                    "name": "enableRepoLogging",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "enableRepoLogging",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Enables logging for repository and transfer. Not enabled by default.",
                            "firstSentenceCommentText": "Enables logging for repository and transfer. "
                        }
                    ]
                },
                {
                    "name": "failOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Fails the build on the first artifact, which can not be retrieved. Not enabled by default.",
                            "firstSentenceCommentText": "Fails the build on the first artifact, which can not be retrieved. "
                        }
                    ]
                },
                {
                    "name": "releaseUpdatePolicy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "updatePolicy",
                                    "type": "String"
                                }
                            ],
                            "html": "Maven release update policy, defaults to <code>daily</code>.\r\n\r\n Must be one of <code>daily</code>, <code>never</code> or <code>always</code>.",
                            "firstSentenceCommentText": "Maven release update policy, defaults to daily."
                        }
                    ]
                },
                {
                    "name": "snapshotUpdatePolicy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "updatePolicy",
                                    "type": "String"
                                }
                            ],
                            "html": "Maven snapshot update policy, defaults to <code>daily</code>.\r\n\r\n Must be one of <code>daily</code>, <code>never</code> or <code>always</code>.",
                            "firstSentenceCommentText": "Maven snapshot update policy, defaults to daily."
                        }
                    ]
                },
                {
                    "name": "targetDirectory",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetDirectory",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines the directory where the artifact gets stored. Not set by default.",
                            "firstSentenceCommentText": "Defines the directory where the artifact gets stored. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext",
            "methods": [
                {
                    "name": "binding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a variable binding for the script. Cann be called multiple times to add more bindings.",
                            "firstSentenceCommentText": "Adds a variable binding for the script. "
                        }
                    ]
                },
                {
                    "name": "classpath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "classpath",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the script classpath. Can be called multiple times to add more entries.",
                            "firstSentenceCommentText": "Specifies the script classpath. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext",
            "methods": [
                {
                    "name": "clear",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "clear",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the virtualenv environment will be deleted and re-created on each build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the virtualenv environment will be deleted and re-created on each build. "
                        }
                    ]
                },
                {
                    "name": "command",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the Python or shell script to execute.",
                            "firstSentenceCommentText": "Sets the Python or shell script to execute."
                        }
                    ]
                },
                {
                    "name": "ignoreExitCode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignoreExitCode",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the build will not fail if the command exits with a non-zero exit code.\n     ",
                            "firstSentenceCommentText": "If set, the build will not fail if the command exits with a non-zero exit code."
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name for the virtualenv.",
                            "firstSentenceCommentText": "Sets the name for the virtualenv."
                        }
                    ]
                },
                {
                    "name": "nature",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nature",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the nature of the <a href='#command(java.lang.String)'>command</a> option. Must be one of <TT>'shell'</TT>\n (default), <TT>'xshell'</TT> or <TT>'python'</TT>.",
                            "firstSentenceCommentText": "Sets the nature of the command option. "
                        }
                    ]
                },
                {
                    "name": "pythonName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pythonName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the Python installation to use. Defaults to <TT>'System-CPython-2.7'</TT>.",
                            "firstSentenceCommentText": "Sets the name of the Python installation to use. "
                        }
                    ]
                },
                {
                    "name": "systemSitePackages",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "systemSitePackages",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Provides access to the global site-packages directory for the virtual environment. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Provides access to the global site-packages directory for the virtual environment. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.StepContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.StepContext",
            "methods": [
                {
                    "name": "ant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antInstallation",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "ant"
                            },
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        ant {\n            target('test')\n            targets(['publish', 'deploy'])\n            prop('logging', 'info')\n            props('test.threads': 10, 'input.status': 'release')\n            buildFile('dir1/build.xml')\n            javaOpt('-Xmx1g')\n            javaOpts(['-Dprop2=value2', '-Dprop3=value3'])\n            antInstallation('Ant 1.8')\n        }\n    }\n}\n"
                },
                {
                    "name": "batchFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "html": "Runs a Windows batch script.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.",
                            "firstSentenceCommentText": "Runs a Windows batch script."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        batchFile('echo Hello World!')\n        batchFile(readFileFromWorkspace('build.bat'))\n    }\n}\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regexp",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "description-setter",
                                "minimumVersion": "1.9"
                            },
                            "html": "Set a build description based upon a regular expression test of the log file.\n     ",
                            "firstSentenceCommentText": "Set a build description based upon a regular expression test of the log file."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        buildDescription(/.*\\[INFO\\] Uploading project information for [^\\s]* ([^\\s]*)/)\n    }\n}\n"
                },
                {
                    "name": "clangScanBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.37",
                            "plugin": {
                                "id": "clang-scanbuild-plugin",
                                "minimumVersion": "1.6"
                            },
                            "html": "Executes Clang scan-build against Mac or iPhone XCode projects or other scan-build compatible build tools.\n\n The <a href='../../../../../ClangScanBuildContext.html#workspace(java.lang.String)' title='workspace'>workspace</a>,\n <a href='../../../../../ClangScanBuildContext.html#scheme(java.lang.String)' title='scheme'>scheme</a> and\n <a href='../../../../../ClangScanBuildContext.html#clangInstallationName(java.lang.String)' title='clangInstallationName'>clangInstallationName</a> options are\n mandatory.\n     ",
                            "firstSentenceCommentText": "Executes Clang scan-build against Mac or iPhone XCode projects or other scan-build compatible build tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        clangScanBuild {\n            workspace('Mobile.xcworkspace')\n            scheme('mobile.de')\n            clangInstallationName('Clang Static Code Analyzer')\n            targetSdk('iphonesimulator')\n            configuration('Debug')\n            scanBuildArgs('--use-analyzer Xcode')\n            xcodeBuildArgs('-derivedDataPath $WORKSPACE/build')\n        }\n    }\n}\n"
                },
                {
                    "name": "conditionalSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionalStepsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "conditional-buildstep"
                            },
                            "html": "Wraps any number of other build steps, controlling their execution based on a defined condition.\n     ",
                            "firstSentenceCommentText": "Wraps any number of other build steps, controlling their execution based on a defined condition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    steps {\n        conditionalSteps {\n            condition {\n                stringsMatch('${SOME_PARAMETER}', 'pants', false)\n            }\n            runner('Fail')\n            steps {\n                shell(\"echo 'just one step'\")\n            }\n        }\n    }\n}\n\njob('example-2') {\n    steps {\n        conditionalSteps {\n            condition {\n                time(9, 0, 13, 0, false)\n            }\n            runner('Unstable')\n            steps {\n                shell(\"echo 'a first step'\")\n                ant('build') {\n                    target('test')\n                }\n            }\n        }\n    }\n}\n\njob('example-3') {\n    steps {\n        conditionalSteps {\n            condition {\n                and {\n                    status('ABORTED', 'FAILURE')\n                } {\n                    not {\n                        fileExists('script.sh', BaseDir.WORKSPACE)\n                    }\n                }\n            }\n            runner('Unstable')\n            steps {\n                shell(\"echo 'a first step'\")\n                ant('build') {\n                    target('test')\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "copyArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "optionalAllowed",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "copyartifact",
                                "minimumVersion": "1.26"
                            },
                            "html": "Copies artifacts from another project.\n     ",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        copyArtifacts('upstream') {\n            includePatterns('*.xml', '*.properties')\n            excludePatterns('test.xml', 'test.properties')\n            targetDirectory('files')\n            flatten()\n            optional()\n            buildSelector {\n                latestSuccessful(true)\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "criticalBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "Exclusion"
                            },
                            "html": "Contains the build steps of the critical zone defined by the\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.\n     ",
                            "firstSentenceCommentText": "Contains the build steps of the critical zone defined by the\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        exclusionResources('first', 'second')\n    }\n    steps {\n        criticalBlock {\n            shell('echo Hello World!')\n        }\n    }\n}\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "debian-package-builder",
                                "minimumVersion": "1.6.6"
                            },
                            "html": "Builds Debian (.deb) packages.\n     ",
                            "firstSentenceCommentText": "Builds Debian (.deb) packages.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DebianContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        debianPackage('module') {\n            generateChangelog()\n        }\n    }\n}\n"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Triggers new parametrized builds.\n     ",
                            "firstSentenceCommentText": "Triggers new parametrized builds.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        downstreamParameterized {\n            trigger('Project1, Project2') {\n                block {\n                    buildStepFailure('FAILURE')\n                    failure ('FAILURE')\n                    unstable('UNSTABLE')\n                }\n                parameters {\n                    predefinedProp('key1', 'value1')\n                    predefinedProps([key2: 'value2', key3: 'value3'])\n                }\n            }\n            trigger('Project2') {\n                parameters {\n                    currentBuild()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "dsl",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "dslClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Processes Job DSL scripts.\n     ",
                            "firstSentenceCommentText": "Processes Job DSL scripts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DslContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "scriptText",
                                    "type": "String"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Processes Job DSL scripts.\n     ",
                            "firstSentenceCommentText": "Processes Job DSL scripts."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "externalScripts",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Processes Job DSL scripts.\n     ",
                            "firstSentenceCommentText": "Processes Job DSL scripts."
                        }
                    ],
                    "examples": "job('example-1') {\n    steps {\n        dsl {\n            external('projectA.groovy', 'projectB.groovy')\n            external('projectC.groovy')\n            removeAction('DISABLE')\n            ignoreExisting()\n            additionalClasspath('lib')\n        }\n    }\n}\n\njob('example-2') {\n    steps {\n        dsl(['projectA.groovy', 'projectB.groovy'], 'DELETE')\n    }\n}\n\njob('example-3') {\n    steps {\n        dsl {\n            text(readFileFromWorkspace('more-jobs.groovy'))\n            removeAction('DELETE')\n        }\n    }\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Injects environment variables into the build.\n     ",
                            "firstSentenceCommentText": "Injects environment variables into the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        environmentVariables {\n            env('ONE', '1')\n            envs(FOO: 'bar', TEST: '123')\n            propertiesFile('env.properties')\n        }\n    }\n}\n"
                },
                {
                    "name": "gradle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gradleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "gradle"
                            },
                            "html": "Invokes a Gradle build script.\n     ",
                            "firstSentenceCommentText": "Invokes a Gradle build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GradleContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "switches",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapper",
                                    "type": "Boolean",
                                    "defaultValue": "true"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes a Gradle build script.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\n <TT>hudson.plugins.gradle.Gradle</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Gradle build script."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        gradle('check')\n        gradle {\n            tasks('clean')\n            tasks('check')\n            switches('--info')\n        }\n    }\n}\n"
                },
                {
                    "name": "grails",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Builds a Grails project.",
                            "firstSentenceCommentText": "Builds a Grails project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Builds a Grails project.",
                            "firstSentenceCommentText": "Builds a Grails project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapper",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "grails"
                            },
                            "html": "Builds a Grails project.",
                            "firstSentenceCommentText": "Builds a Grails project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        grails {\n            target('clean build')\n            useWrapper(true)\n        }\n    }\n}\n"
                },
                {
                    "name": "groovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        groovyCommand(readFileFromWorkspace('generateReports.groovy')) {\n            groovyInstallation('groovy-2.4.2')\n            scriptParam('target/reports')\n        }\n    }\n}\n"
                },
                {
                    "name": "groovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        groovyScriptFile('generateReports.groovy') {\n            groovyInstallation('groovy-2.4.2')\n            scriptParam('target/reports')\n        }\n    }\n}\n"
                },
                {
                    "name": "httpRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "requestUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "http_request"
                            },
                            "html": "Adds a step which performs a HTTP request.\n     ",
                            "firstSentenceCommentText": "Adds a step which performs a HTTP request.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        httpRequest('http://www.example.com') {\n            httpMode('POST')\n            authentication('Credentials')\n            returnCodeBuildRelevant()\n            logResponseBody()\n        }\n    }\n}\n"
                },
                {
                    "name": "maven",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "maven-plugin"
                            },
                            "html": "Invokes a Maven build.\n     ",
                            "firstSentenceCommentText": "Invokes a Maven build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.MavenContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pom",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes a Maven build.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\n <TT>hudson.tasks.Maven</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Maven build."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        maven('verify')\n        maven('clean verify', 'module-a/pom.xml')\n        maven {\n            goals('clean')\n            goals('verify')\n            mavenOpts('-Xms256m')\n            mavenOpts('-Xmx512m')\n            localRepository(LocalRepositoryLocation.LOCAL_TO_WORKSPACE)\n            properties(skipTests: true)\n            mavenInstallation('Maven 3.1.1')\n            providedSettings('central-mirror')\n        }\n    }\n}\n"
                },
                {
                    "name": "nodejsCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commandScript",
                                    "type": "String"
                                },
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "nodejs"
                            },
                            "html": "Executes a NodeJS script. Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read scripts from a file.\n     ",
                            "firstSentenceCommentText": "Executes a NodeJS script. "
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        nodejsCommand('console.log(\"Hello World!\")', 'Node 0.12.0')\n    }\n}\n"
                },
                {
                    "name": "powerShell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.32",
                            "plugin": {
                                "id": "powershell",
                                "minimumVersion": "1.2"
                            },
                            "html": "Runs a Windows PowerShell script.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.\n     ",
                            "firstSentenceCommentText": "Runs a Windows PowerShell script."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        powerShell('Write-Output \"Hello World!\"')\n        powerShell(readFileFromWorkspace('build.ps1'))\n    }\n}\n"
                },
                {
                    "name": "prerequisite",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectList",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "warningOnly",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "prereq-buildstep"
                            },
                            "html": "Verify the state of other jobs and fails the build if needed.\n     ",
                            "firstSentenceCommentText": "Verify the state of other jobs and fails the build if needed."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        prerequisite('project-a, project-b')\n    }\n}\n"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "publish-over-ssh"
                            },
                            "html": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.\n     ",
                            "firstSentenceCommentText": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        publishOverSsh {\n            server('server-name') {\n                transferSet {\n                    sourceFiles('file')\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "python",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "shiningpanda",
                                "minimumVersion": "0.21"
                            },
                            "html": "Builds the project with a declared Python installation.\n     ",
                            "firstSentenceCommentText": "Builds the project with a declared Python installation.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PythonContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        python {\n            command('python setup.py')\n        }\n    }\n}\n"
                },
                {
                    "name": "rake",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "Invokes Rake.\n     ",
                            "firstSentenceCommentText": "Invokes Rake.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String"
                                },
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "rake"
                            },
                            "html": "Invokes Rake.\n     ",
                            "firstSentenceCommentText": "Invokes Rake.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        rake('task')\n        rake('first') {\n            task('second')\n            tasks(['third', 'fourth'])\n            file('/opt/app/Rakefile')\n            installation('ruby-2.0.0-p481')\n            libDir('./rakelib')\n            workingDir('/opt/app')\n            bundleExec()\n            silent()\n        }\n    }\n}\n"
                },
                {
                    "name": "remoteTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteJenkins",
                                    "type": "String"
                                },
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "Parameterized-Remote-Trigger"
                            },
                            "html": "Triggers a job on another Jenkins instance.\n     ",
                            "firstSentenceCommentText": "Triggers a job on another Jenkins instance.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext"
                        }
                    ],
                    "examples": "// start the job 'test-flow' on the Jenkins instance named 'test-ci' without parameters\njob('example-1') {\n    steps {\n        remoteTrigger('test-ci', 'test-flow')\n    }\n}\n\n// start the job 'test-flow' on the Jenkins instance named 'test-ci' with three parameters\n// and block until the build completes\njob('example-2') {\n    steps {\n        remoteTrigger('test-ci', 'test-flow') {\n            parameter('VERSION', '$PIPELINE_VERSION')\n            parameters(BRANCH: 'feature-A', STAGING_REPO_ID: '41234232')\n            blockBuildUntilComplete()\n        }\n    }\n}\n"
                },
                {
                    "name": "resolveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repositoryConnectorClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.29",
                            "plugin": {
                                "id": "repository-connector"
                            },
                            "html": "Resolves artifacts from a Maven repository.\n     ",
                            "firstSentenceCommentText": "Resolves artifacts from a Maven repository.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        resolveArtifacts {\n            failOnError()\n            snapshotUpdatePolicy('always')\n            targetDirectory('lib')\n            artifact {\n                groupId('org.slf4j')\n                artifactId('slf4j-api')\n                version('[1.7.5,1.7.6]')\n            }\n            artifact {\n                groupId('ch.qos.logback')\n                artifactId('logback-classic')\n                version('1.1.1')\n                classifier('sources')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "sbt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sbtName",
                                    "type": "String"
                                },
                                {
                                    "name": "actions",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sbtFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "jvmFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "subdirPath",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "sbt"
                            },
                            "html": "Invokes the Scala Build Tool (SBT).\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\n <TT>org.jvnet.hudson.plugins.SbtPluginBuilder</TT> node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Invokes the Scala Build Tool (SBT)."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        sbt('SBT 0.12.3', 'test', '-Dsbt.log.noformat=true', '-Xmx2G -Xms512M', 'subproject')\n    }\n}\n"
                },
                {
                    "name": "setBuildResult",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "result",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "fail-the-build-plugin",
                                "minimumVersion": "1.0"
                            },
                            "html": "Set the build status.\n\n Must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT>, <TT>'ABORTED'</TT> or <TT>'CYCLE'</TT>.\n     ",
                            "firstSentenceCommentText": "Set the build status."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        setBuildResult('UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "shell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "html": "Runs a shell script.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.",
                            "firstSentenceCommentText": "Runs a shell script."
                        }
                    ],
                    "examples": "job('example') {\n  steps {\n      shell('echo Hello World!')\n      shell(readFileFromWorkspace('build.sh'))\n  }\n}\n"
                },
                {
                    "name": "systemGroovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a system Groovy script.",
                            "firstSentenceCommentText": "Executes a system Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        systemGroovyCommand(readFileFromWorkspace('disconnect-slave.groovy')) {\n            binding('computerName', 'ubuntu-04')\n        }\n    }\n}\n"
                },
                {
                    "name": "systemGroovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a system Groovy script.",
                            "firstSentenceCommentText": "Executes a system Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        systemGroovyCommand('disconnect-slave.groovy') {\n            binding('computerName', 'ubuntu-04')\n        }\n    }\n}\n"
                },
                {
                    "name": "vSpherePowerOff",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "This build step will power off the specified VM.\n     ",
                            "firstSentenceCommentText": "This build step will power off the specified VM."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        vSpherePowerOff('vsphere.acme.org', 'foo')\n    }\n}\n"
                },
                {
                    "name": "vSpherePowerOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "This build step will power on the specified VM.\n     ",
                            "firstSentenceCommentText": "This build step will power on the specified VM."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        vSpherePowerOn('vsphere.acme.org', 'foo')\n    }\n}\n"
                },
                {
                    "name": "vSphereRevertToSnapshot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                },
                                {
                                    "name": "snapshot",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "This build step will revert the specified VM to the specified snapshot.\n     ",
                            "firstSentenceCommentText": "This build step will revert the specified VM to the specified snapshot."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        vSphereRevertToSnapshot('vsphere.acme.org', 'foo', 'clean')\n    }\n}\n"
                },
                {
                    "name": "virtualenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "shiningpanda",
                                "minimumVersion": "0.21"
                            },
                            "html": "Creates a virtualenv to build the project.",
                            "firstSentenceCommentText": "Creates a virtualenv to build the project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        virtualenv {\n            name('venv')\n            command('pip install tox')\n            clear()\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext",
            "methods": [
                {
                    "name": "onlyIfBuildSucceeds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyIfBuildSucceeds",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, runs the build steps only if the build was successful. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, runs the build steps only if the build was successful. "
                        }
                    ]
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stepClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to run at the end of the build.",
                            "firstSentenceCommentText": "Adds build steps to run at the end of the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext",
            "methods": [
                {
                    "name": "task",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logText",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "escalate",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "runIfSuccessful",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Adds a script that will be executed if the output in the console log matches the regular expression. Can be\n called multiple times to add more scripts.",
                            "firstSentenceCommentText": "Adds a script that will be executed if the output in the console log matches the regular expression. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext",
            "methods": [
                {
                    "name": "discardOldBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        }
                    ]
                },
                {
                    "name": "publishFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishFailed",
                                    "type": "boolean"
                                }
                            ],
                            "html": "If set, publishes failed builds. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, publishes failed builds. "
                        }
                    ]
                },
                {
                    "name": "publishUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishUnstable",
                                    "type": "boolean"
                                }
                            ],
                            "html": "If set, publishes unstable builds. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, publishes unstable builds. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext",
            "methods": [
                {
                    "name": "archiveMethod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the archive method. Must be either <TT>'TAR'</TT> (default) or <TT>'ZIP'</TT>.",
                            "firstSentenceCommentText": "Sets the archive method. "
                        }
                    ]
                },
                {
                    "name": "criteria",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "criteria",
                                    "type": "String"
                                }
                            ],
                            "html": "Selects the criteria for builds to be archived. Must be one of <TT>'Any'</TT> (default), <TT>'Not Failed'</TT> or\n <TT>'Successful'</TT>.",
                            "firstSentenceCommentText": "Selects the criteria for builds to be archived. "
                        }
                    ]
                },
                {
                    "name": "overrideDefaultExcludes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overrideDefaultExcludes",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Overrides default Ant excludes.",
                            "firstSentenceCommentText": "Overrides default Ant excludes."
                        }
                    ]
                },
                {
                    "name": "workspaceExcludeGlob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies files to exclude from the cloned workspace.",
                            "firstSentenceCommentText": "Specifies files to exclude from the cloned workspace."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportTargetContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportTargetContext",
            "methods": [
                {
                    "name": "allowMissing",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowMissing",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "htmlpublisher",
                                "minimumVersion": "1.3"
                            },
                            "html": "If set, allows report to be missing. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, allows report to be missing. "
                        }
                    ]
                },
                {
                    "name": "alwaysLinkToLastBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alwaysLinkToLastBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "htmlpublisher",
                                "minimumVersion": "1.4"
                            },
                            "html": "Publishes the link on project level even if build failed.\n     ",
                            "firstSentenceCommentText": "Publishes the link on project level even if build failed."
                        }
                    ]
                },
                {
                    "name": "keepAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepAll",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, archives reports for all successful builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, archives reports for all successful builds. "
                        }
                    ]
                },
                {
                    "name": "reportFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFiles",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to the HTML report directory relative to the workspace.",
                            "firstSentenceCommentText": "Sets the path to the HTML report directory relative to the workspace."
                        }
                    ]
                },
                {
                    "name": "reportName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a title for the report.",
                            "firstSentenceCommentText": "Sets a title for the report."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext",
            "methods": [
                {
                    "name": "report",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportDir",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a report to publish. Can be called multiple times to add publish reports.",
                            "firstSentenceCommentText": "Adds a report to publish. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportTargetContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.JabberContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext",
            "methods": [
                {
                    "name": "channelNotificationName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "channelNotificationName",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the message type. Must be one of <TT>'Default'</TT> (default), <TT>'SummaryOnly'</TT>,\n <TT>'BuildParameters'</TT> or <TT>'PrintFailingTests'</TT>.",
                            "firstSentenceCommentText": "Specifies the message type. "
                        }
                    ]
                },
                {
                    "name": "notifyCulprits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyCulprits",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to users from previous unstable/failed builds. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to users from previous unstable/failed builds. "
                        }
                    ]
                },
                {
                    "name": "notifyFixers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyFixers",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to the users that have fixed a broken build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to the users that have fixed a broken build. "
                        }
                    ]
                },
                {
                    "name": "notifyOnBuildStart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyOnBuildStart",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build starts. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build starts. "
                        }
                    ]
                },
                {
                    "name": "notifySuspects",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifySuspects",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to the users that are suspected of having broken this build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to the users that are suspected of having broken this build. "
                        }
                    ]
                },
                {
                    "name": "notifyUpstreamCommitters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyUpstreamCommitters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends notifications to upstream committers if no committers were found for a broken build. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends notifications to upstream committers if no committers were found for a broken build. "
                        }
                    ]
                },
                {
                    "name": "strategyName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "strategyName",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies when to send notifications. Must be one of <TT>'ALL'</TT> (default), <TT>'FAILURE_AND_FIXED'</TT>,\n <TT>'ANY_FAILURE'</TT> or <TT>'STATECHANGE_ONLY'</TT>.",
                            "firstSentenceCommentText": "Specifies when to send notifications. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext",
            "methods": [
                {
                    "name": "disableArchiveOutput",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableArchiveOutput",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "robot",
                                "minimumVersion": "1.4.3"
                            },
                            "html": "Disables archiving of output XML file to Jenkins master. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Disables archiving of output XML file to Jenkins master. "
                        }
                    ]
                },
                {
                    "name": "logFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "logFileName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the HTML file containing the detailed robot test log. Defaults to <TT>'log.html'</TT>.",
                            "firstSentenceCommentText": "Sets the name of the HTML file containing the detailed robot test log. "
                        }
                    ]
                },
                {
                    "name": "onlyCritical",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyCritical",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Applies thresholds for critical tests only.",
                            "firstSentenceCommentText": "Applies thresholds for critical tests only."
                        }
                    ]
                },
                {
                    "name": "otherFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String..."
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "robot",
                                "minimumVersion": "1.2.1"
                            },
                            "html": "Specifies a list of robot related artifacts to be saved.\n     ",
                            "firstSentenceCommentText": "Specifies a list of robot related artifacts to be saved."
                        }
                    ]
                },
                {
                    "name": "outputFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "outputFileName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the xml file containing the robot output. Defaults to <TT>'output.xml'</TT>.",
                            "firstSentenceCommentText": "Sets the name of the xml file containing the robot output. "
                        }
                    ]
                },
                {
                    "name": "outputPath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "outputPath",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the path to directory containing robot XML and HTML files relative to the build workspace. Defaults to\n <TT>'target/robotframework-reports'</TT>.",
                            "firstSentenceCommentText": "Sets the path to directory containing robot XML and HTML files relative to the build workspace. "
                        }
                    ]
                },
                {
                    "name": "passThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "passThreshold",
                                    "type": "double"
                                }
                            ],
                            "html": "Specifies the threshold for marking a build as passed. Defaults to <TT>100</TT>.",
                            "firstSentenceCommentText": "Specifies the threshold for marking a build as passed. "
                        }
                    ]
                },
                {
                    "name": "reportFileName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFileName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the HTML file containing the robot test report. Defaults to <TT>'report.html'</TT>.",
                            "firstSentenceCommentText": "Sets the name of the HTML file containing the robot test report. "
                        }
                    ]
                },
                {
                    "name": "unstableThreshold",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "unstableThreshold",
                                    "type": "double"
                                }
                            ],
                            "html": "Specifies the threshold for marking a build as unstable. Defaults to <TT>0</TT>.",
                            "firstSentenceCommentText": "Specifies the threshold for marking a build as unstable. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ScpContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext",
            "methods": [
                {
                    "name": "entries",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sources",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "destination",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "keepHierarchy",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.27",
                            "html": "Specifies the files to upload. Can be called multiple times to upload more files.\n     ",
                            "firstSentenceCommentText": "Specifies the files to upload. "
                        }
                    ]
                },
                {
                    "name": "entry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "String"
                                },
                                {
                                    "name": "destination",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "keepHierarchy",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Specifies the files to upload. Can be called multiple times to upload more files.",
                            "firstSentenceCommentText": "Specifies the files to upload. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext",
            "methods": [
                {
                    "name": "fixedDelay",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "delay",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies a fixed delay between re-runs. The delay is specified in seconds.",
                            "firstSentenceCommentText": "Specifies a fixed delay between re-runs. "
                        }
                    ]
                },
                {
                    "name": "progressiveDelay",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "increment",
                                    "type": "int"
                                },
                                {
                                    "name": "max",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies an increasing delay between re-runs. The parameters are specified in seconds.",
                            "firstSentenceCommentText": "Specifies an increasing delay between re-runs. "
                        }
                    ]
                },
                {
                    "name": "rerunIfUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rerunIfUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, reschedules the build also when the build is unstable. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, reschedules the build also when the build is unstable. "
                        }
                    ]
                },
                {
                    "name": "retryLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "retryLimit",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets a retry limit. Defaults to 0.",
                            "firstSentenceCommentText": "Sets a retry limit. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext",
            "methods": [
                {
                    "name": "nodeFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Add a filter to optionally filter the nodes on which Rundeck will run. Can be called multiple times to add more\n filters.",
                            "firstSentenceCommentText": "Add a filter to optionally filter the nodes on which Rundeck will run. "
                        }
                    ]
                },
                {
                    "name": "nodeFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodeFilters",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Adds filters to optionally filter the nodes on which Rundeck will run. Can be called multiple times to add more\n filters.",
                            "firstSentenceCommentText": "Adds filters to optionally filter the nodes on which Rundeck will run. "
                        }
                    ]
                },
                {
                    "name": "option",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds an option for the Rundeck job to execute. Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Adds an option for the Rundeck job to execute. "
                        }
                    ]
                },
                {
                    "name": "options",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "options",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "html": "Adds options for the Rundeck job to execute. Can be called multiple times to add more options.",
                            "firstSentenceCommentText": "Adds options for the Rundeck job to execute. "
                        }
                    ]
                },
                {
                    "name": "shouldFailTheBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldFailTheBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, fails the Jenkins build if the job execution on Rundeck could not be scheduled. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, fails the Jenkins build if the job execution on Rundeck could not be scheduled. "
                        }
                    ]
                },
                {
                    "name": "shouldWaitForRundeckJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldWaitForRundeckJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, waits for Rundeck job executions to finish. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, waits for Rundeck job executions to finish. "
                        }
                    ]
                },
                {
                    "name": "tag",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tag",
                                    "type": "String"
                                }
                            ],
                            "html": "If set, checks if the SCM changelog contains the given tag, and only schedules a job execution if it is present.",
                            "firstSentenceCommentText": "If set, checks if the SCM changelog contains the given tag, and only schedules a job execution if it is present."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.S3EntryContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.S3EntryContext",
            "methods": [
                {
                    "name": "flatten",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flatten",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "s3",
                                "minimumVersion": "0.7"
                            },
                            "html": "If set, ignores the directory structure of the artifacts in the source project and copies all matching artifacts\n directly into the specified bucket.\n     ",
                            "firstSentenceCommentText": "If set, ignores the directory structure of the artifacts in the source project and copies all matching artifacts\n directly into the specified bucket."
                        }
                    ]
                },
                {
                    "name": "managedArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "managedArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, Jenkins fully manages the artifacts, exactly like it does when the artifacts are published to the master.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, Jenkins fully manages the artifacts, exactly like it does when the artifacts are published to the master.\n "
                        }
                    ]
                },
                {
                    "name": "noUploadOnFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "noUploadOnFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Skips upload if the build failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Skips upload if the build failed. "
                        }
                    ]
                },
                {
                    "name": "storageClass",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "storageClass",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the S3 storage class. Must be either <TT>'STANDARRD'</TT> (default) or <TT>'REDUCED_REDUNDANCY'</TT>.",
                            "firstSentenceCommentText": "Specifies the S3 storage class. "
                        }
                    ]
                },
                {
                    "name": "uploadFromSlave",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "uploadFromSlave",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Upload directly from the slave, instead of proxying the upload to the master. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Upload directly from the slave, instead of proxying the upload to the master. "
                        }
                    ]
                },
                {
                    "name": "useServerSideEncryption",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useServerSideEncryption",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "s3",
                                "minimumVersion": "0.7"
                            },
                            "html": "Enables S3 AES-256 server side encryption support. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Enables S3 AES-256 server side encryption support. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext",
            "methods": [
                {
                    "name": "entry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "source",
                                    "type": "String"
                                },
                                {
                                    "name": "bucketName",
                                    "type": "String"
                                },
                                {
                                    "name": "region",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Specifies files to upload. Can be called multiple times to add upload more files.",
                            "firstSentenceCommentText": "Specifies files to upload. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3EntryContext"
                        }
                    ]
                },
                {
                    "name": "metadata",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "String"
                                },
                                {
                                    "name": "value",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds metadata for the upload files. Can be called multiple times to add more metadata.",
                            "firstSentenceCommentText": "Adds metadata for the upload files. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext",
            "methods": [
                {
                    "name": "customMessage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "customMessage",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a custom message that will be included with the notifications.",
                            "firstSentenceCommentText": "Specifies a custom message that will be included with the notifications."
                        }
                    ]
                },
                {
                    "name": "includeTestSummary",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeTestSummary",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, includes a test summary in the message. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, includes a test summary in the message. "
                        }
                    ]
                },
                {
                    "name": "integrationToken",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "integrationToken",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the integration token to use for sending notifications.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Sets the integration token to use for sending notifications."
                        }
                    ]
                },
                {
                    "name": "notifyAborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyAborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is aborted. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is aborted. "
                        }
                    ]
                },
                {
                    "name": "notifyBackToNormal",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBackToNormal",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is failed. "
                        }
                    ]
                },
                {
                    "name": "notifyBuildStart",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyBuildStart",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build starts. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build starts. "
                        }
                    ]
                },
                {
                    "name": "notifyFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is failed. "
                        }
                    ]
                },
                {
                    "name": "notifyNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyNotBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is not run. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is not run. "
                        }
                    ]
                },
                {
                    "name": "notifyRepeatedFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyRepeatedFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build failed repeatedly. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build failed repeatedly. "
                        }
                    ]
                },
                {
                    "name": "notifySuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifySuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is successful. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is successful. "
                        }
                    ]
                },
                {
                    "name": "notifyUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notifyUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Sends a notification when the build is unstable. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Sends a notification when the build is unstable. "
                        }
                    ]
                },
                {
                    "name": "projectChannel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectChannel",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the channel names to which notifications should be sent.",
                            "firstSentenceCommentText": "Specifies the channel names to which notifications should be sent."
                        }
                    ]
                },
                {
                    "name": "showCommitList",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showCommitList",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, includes a list of commits in the message. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, includes a list of commits in the message. "
                        }
                    ]
                },
                {
                    "name": "teamDomain",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "teamDomain",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the Slack subdomain to which notifications should be sent.",
                            "firstSentenceCommentText": "Sets the Slack subdomain to which notifications should be sent."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.SonarTriggersContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.SonarTriggersContext",
            "methods": [
                {
                    "name": "skipIfEnvironmentVariable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "environmentVariable",
                                    "type": "String"
                                }
                            ],
                            "html": "Skip SonarQube analysis when the value of the given variable is set to <TT>true</TT>.",
                            "firstSentenceCommentText": "Skip SonarQube analysis when the value of the given variable is set to true."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.SonarContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext",
            "methods": [
                {
                    "name": "branch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the <TT>sonar.branch</TT> property.",
                            "firstSentenceCommentText": "Sets the sonar.branch property."
                        }
                    ]
                },
                {
                    "name": "overrideTriggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarTriggersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Overrides the default trigger actions set at SonarQube installation level.",
                            "firstSentenceCommentText": "Overrides the default trigger actions set at SonarQube installation level.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarTriggersContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext",
            "methods": [
                {
                    "name": "commitSha1",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commitSha1",
                                    "type": "String"
                                }
                            ],
                            "html": "Attaches the notification to a specific commit in Stash.",
                            "firstSentenceCommentText": "Attaches the notification to a specific commit in Stash."
                        }
                    ]
                },
                {
                    "name": "keepRepeatedBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keepRepeatedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, results of repeated builds of the same commit will show up in Stash as a list of builds. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, results of repeated builds of the same commit will show up in Stash as a list of builds. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext",
            "methods": [
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for Checkstyle.",
                            "firstSentenceCommentText": "Configures the violations report for Checkstyle."
                        }
                    ]
                },
                {
                    "name": "codenarc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for CodeNarc.",
                            "firstSentenceCommentText": "Configures the violations report for CodeNarc."
                        }
                    ]
                },
                {
                    "name": "cpd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for CPD.",
                            "firstSentenceCommentText": "Configures the violations report for CPD."
                        }
                    ]
                },
                {
                    "name": "cpplint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for cpplint.",
                            "firstSentenceCommentText": "Configures the violations report for cpplint."
                        }
                    ]
                },
                {
                    "name": "csslint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for CSS Lint.",
                            "firstSentenceCommentText": "Configures the violations report for CSS Lint."
                        }
                    ]
                },
                {
                    "name": "fauxProjectPath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fauxProjectPath",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets an alternative project directory for the reporting engine.",
                            "firstSentenceCommentText": "Sets an alternative project directory for the reporting engine."
                        }
                    ]
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for FindBugs.",
                            "firstSentenceCommentText": "Configures the violations report for FindBugs."
                        }
                    ]
                },
                {
                    "name": "fxcop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for FxCop.",
                            "firstSentenceCommentText": "Configures the violations report for FxCop."
                        }
                    ]
                },
                {
                    "name": "gendarme",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for Gendarme.",
                            "firstSentenceCommentText": "Configures the violations report for Gendarme."
                        }
                    ]
                },
                {
                    "name": "jcreport",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for JcReport.",
                            "firstSentenceCommentText": "Configures the violations report for JcReport."
                        }
                    ]
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for JSHint.",
                            "firstSentenceCommentText": "Configures the violations report for JSHint."
                        }
                    ]
                },
                {
                    "name": "jslint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for JSLint.",
                            "firstSentenceCommentText": "Configures the violations report for JSLint."
                        }
                    ]
                },
                {
                    "name": "pep8",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for PEP8.",
                            "firstSentenceCommentText": "Configures the violations report for PEP8."
                        }
                    ]
                },
                {
                    "name": "perFileDisplayLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "Integer"
                                }
                            ],
                            "html": "Limits the number of violations displayed per file and violation type.",
                            "firstSentenceCommentText": "Limits the number of violations displayed per file and violation type."
                        }
                    ]
                },
                {
                    "name": "perlcritic",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for Perl::Critic.",
                            "firstSentenceCommentText": "Configures the violations report for Perl::Critic."
                        }
                    ]
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for PMD.",
                            "firstSentenceCommentText": "Configures the violations report for PMD."
                        }
                    ]
                },
                {
                    "name": "pylint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for Pylint.",
                            "firstSentenceCommentText": "Configures the violations report for Pylint."
                        }
                    ]
                },
                {
                    "name": "simian",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for Simian.",
                            "firstSentenceCommentText": "Configures the violations report for Simian."
                        }
                    ]
                },
                {
                    "name": "sourceEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourceEncoding",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the encoding to use for reading source files.",
                            "firstSentenceCommentText": "Sets the encoding to use for reading source files."
                        }
                    ]
                },
                {
                    "name": "sourcePathPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sourcePathPattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Resolves class names to source file names.",
                            "firstSentenceCommentText": "Resolves class names to source file names."
                        }
                    ]
                },
                {
                    "name": "stylecop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "min",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "max",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "unstable",
                                    "type": "Integer",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pattern",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Configures the violations report for StyleCop.",
                            "firstSentenceCommentText": "Configures the violations report for StyleCop."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext",
            "methods": [
                {
                    "name": "canRunOnFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "canRunOnFailed",
                                    "type": "Object",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, also runs when the build has failed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, also runs when the build has failed. "
                        }
                    ]
                },
                {
                    "name": "computeNew",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "computeNew",
                                    "type": "Object"
                                }
                            ],
                            "html": "If set, computes new warnings based on the last successful build.\n This is set automatically if the <TT>unstableNew</TT> or <TT>failedNew</TT> thresholds are used.",
                            "firstSentenceCommentText": "If set, computes new warnings based on the last successful build.\n "
                        }
                    ]
                },
                {
                    "name": "defaultEncoding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "encoding",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the encoding for parsing or showing files.",
                            "firstSentenceCommentText": "Sets the encoding for parsing or showing files."
                        }
                    ]
                },
                {
                    "name": "excludePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "excludePattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a comma separated list of regular expressions that specifies the files to exclude from the report (based on\n their absolute filename).",
                            "firstSentenceCommentText": "Sets a comma separated list of regular expressions that specifies the files to exclude from the report (based on\n their absolute filename)."
                        }
                    ]
                },
                {
                    "name": "healthLimits",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "healthy",
                                    "type": "Integer"
                                },
                                {
                                    "name": "unhealthy",
                                    "type": "Integer"
                                }
                            ],
                            "html": "Specifies the thresholds for the build health.",
                            "firstSentenceCommentText": "Specifies the thresholds for the build health."
                        }
                    ]
                },
                {
                    "name": "includePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includePattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a comma separated list of regular expressions that specifies the files to include in the report (based on\n their absolute filename).",
                            "firstSentenceCommentText": "Sets a comma separated list of regular expressions that specifies the files to include in the report (based on\n their absolute filename)."
                        }
                    ]
                },
                {
                    "name": "resolveRelativePaths",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resolveRelativePaths",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Determines if relative paths in warnings should be resolved. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Determines if relative paths in warnings should be resolved. "
                        }
                    ]
                },
                {
                    "name": "shouldDetectModules",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDetectModules",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, detects  Ant or Maven modules for all files that contain warnings.",
                            "firstSentenceCommentText": "If set, detects  Ant or Maven modules for all files that contain warnings."
                        }
                    ]
                },
                {
                    "name": "thresholdLimit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "limit",
                                    "type": "String"
                                }
                            ],
                            "html": "Determines which warning priorities should be considered when evaluating the build health.\n Must be one of <TT>'low'</TT> (default), <TT>'normal'</TT> or <TT>'high'</TT>.",
                            "firstSentenceCommentText": "Determines which warning priorities should be considered when evaluating the build health.\n "
                        }
                    ]
                },
                {
                    "name": "thresholds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "thresholdMap",
                                    "type": "Map"
                                }
                            ],
                            "html": "Sets the thresholds for considering a build as unstable or failed.\n\n The parameter is a mapping from build status to a mapping from priority to threshold. The keys of the outer map\n must be one or more of <TT>'unstableTotal'</TT>, <TT>'failedTotal'</TT>, <TT>'unstableNew'</TT> and\n <TT>'failedNew'</TT>. The keys of the inner map must be one or more of <TT>'all'</TT>, <TT>'low'</TT>,\n <TT>'normal'</TT> and <TT>'high'</TT>.",
                            "firstSentenceCommentText": "Sets the thresholds for considering a build as unstable or failed."
                        }
                    ]
                },
                {
                    "name": "useDeltaValues",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useDeltaValues",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, computes the number of new warnings by subtracting the total number of warnings of the reference build\n from the total number of warnings of the current build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, computes the number of new warnings by subtracting the total number of warnings of the reference build\n from the total number of warnings of the current build. "
                        }
                    ]
                },
                {
                    "name": "useStableBuildAsReference",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useStableBuildAsReference",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, uses the last stable build as the reference to compute the number of new warnings against. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, uses the last stable build as the reference to compute the number of new warnings against. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext",
            "methods": [
                {
                    "name": "cleanWhenAborted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenAborted",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Deletes files when the build has been aborted. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Deletes files when the build has been aborted. "
                        }
                    ]
                },
                {
                    "name": "cleanWhenFailure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenFailure",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Deletes files when the build failed. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Deletes files when the build failed. "
                        }
                    ]
                },
                {
                    "name": "cleanWhenNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenNotBuilt",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Deletes files when the build was not run. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Deletes files when the build was not run. "
                        }
                    ]
                },
                {
                    "name": "cleanWhenSuccess",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenSuccess",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Deletes files when the build was successful. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Deletes files when the build was successful. "
                        }
                    ]
                },
                {
                    "name": "cleanWhenUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanWhenUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Deletes files when the build is unstable. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Deletes files when the build is unstable. "
                        }
                    ]
                },
                {
                    "name": "deleteCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteCommand",
                                    "type": "String"
                                }
                            ],
                            "html": "If set, an external program will be used for deletion.",
                            "firstSentenceCommentText": "If set, an external program will be used for deletion."
                        }
                    ]
                },
                {
                    "name": "deleteDirectories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteDirectories",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the pattern will also be applied to directories. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the pattern will also be applied to directories. "
                        }
                    ]
                },
                {
                    "name": "excludePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax."
                        }
                    ]
                },
                {
                    "name": "failBuildWhenCleanupFails",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, does not fail the build when the cleanup fails. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, does not fail the build when the cleanup fails. "
                        }
                    ]
                },
                {
                    "name": "includePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Makes cleanup more selective by specifying file to be deleted using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be deleted using Ant syntax."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext",
            "methods": [
                {
                    "name": "aggregateDownstreamTestResults",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobs",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeFailedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Aggregates downstream test results.\n     ",
                            "firstSentenceCommentText": "Aggregates downstream test results."
                        }
                    ],
                    "examples": "// aggregates test results from project-A and project-B and includes failed builds in the results\njob('example-1') {\n    publishers {\n        aggregateDownstreamTestResults('project-A, project-B', true)\n    }\n}\n\n// aggregates test results from all downstream jobs and ignores failed builds\njob('example-2') {\n    publishers {\n        aggregateDownstreamTestResults()\n    }\n}\n"
                },
                {
                    "name": "allowBrokenBuildClaiming",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "claim"
                            },
                            "html": "Allows to claim unsuccessful builds.\n     ",
                            "firstSentenceCommentText": "Allows to claim unsuccessful builds."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        allowBrokenBuildClaiming()\n    }\n}\n"
                },
                {
                    "name": "analysisCollector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "analysisCollectorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "analysis-collector"
                            },
                            "html": "Publishes combined analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes combined analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        analysisCollector {\n            checkstyle()\n            dry()\n            findbugs()\n            pmd()\n            tasks()\n            warnings()\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "androidLint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "android-lint"
                            },
                            "html": "Publishes Android Lint results.\n     ",
                            "firstSentenceCommentText": "Publishes Android Lint results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        androidLint('**/lint-results.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "html": "Archives artifacts with each build.\n     ",
                            "firstSentenceCommentText": "Archives artifacts with each build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Archives artifacts with each build.",
                            "firstSentenceCommentText": "Archives artifacts with each build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "latestOnly",
                                    "type": "boolean"
                                }
                            ],
                            "deprecated": true,
                            "html": "Archives artifacts with each build.",
                            "firstSentenceCommentText": "Archives artifacts with each build."
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveArtifacts {\n            pattern('build/test-output/**/*.html')\n            pattern('build/test-output/**/*.xml')\n            onlyIfSuccessful()\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveJavadoc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "javadoc"
                            },
                            "html": "Archives Javadoc artifacts.\n     ",
                            "firstSentenceCommentText": "Archives Javadoc artifacts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveJavadoc {\n            javadocDir('target/javadoc')\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveJunit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "junitClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "junit"
                            },
                            "html": "Publishes JUnit test result reports.\n     ",
                            "firstSentenceCommentText": "Publishes JUnit test result reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveJunit('**/minitest-reports/*.xml') {\n            retainLongStdout()\n            testDataPublishers {\n                publishTestStabilityData()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveXUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xUnitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "xunit"
                            },
                            "html": "Publishes reports generated from results of various testing tools.\n     ",
                            "firstSentenceCommentText": "Publishes reports generated from results of various testing tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveXUnit {\n            jUnit {\n                pattern('my_file.xml')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveXUnit {\n            aUnit {\n                pattern('my_file.xml')\n            }\n            jUnit {\n                pattern('my_other_file.xml')\n            }\n            failedThresholds {\n                unstable(10)\n                unstableNew(10)\n                failure(10)\n                failureNew(10)\n            }\n            skippedThresholds {\n                unstable(5)\n                unstableNew(5)\n                failure(5)\n                failureNew(5)\n            }\n            thresholdMode(ThresholdMode.PERCENT)\n            timeMargin(4000)\n        }\n    }\n}\n"
                },
                {
                    "name": "associatedFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "associated-files"
                            },
                            "html": "Marks files or directories outside of Jenkins as related to a build.\n     ",
                            "firstSentenceCommentText": "Marks files or directories outside of Jenkins as related to a build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        associatedFiles('/tmp/logs')\n    }\n}\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "regularExpressionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "descriptionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "multiConfigurationBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "description-setter"
                            },
                            "html": "Automatically sets a description for the build after it has completed.\n     ",
                            "firstSentenceCommentText": "Automatically sets a description for the build after it has completed."
                        }
                    ],
                    "examples": "// sets build description to the project version in case the output contains the line \"Building my.project.name 0.4.0\"\njob('example-1') {\n    publishers {\n        buildDescription(/.*Building [^\\s]* ([^\\s]*)/)\n    }\n}\n\n//sets the build description to a values defined by a build parameter or environment variable called BRANCH\njob('example-2') {\n    publishers {\n        buildDescription('', '${BRANCH}')\n    }\n}\n"
                },
                {
                    "name": "buildPipelineTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamProjectNames",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "build-pipeline-plugin"
                            },
                            "html": "Adds a manual triggers for jobs that require intervention prior to execution.\n     ",
                            "firstSentenceCommentText": "Adds a manual triggers for jobs that require intervention prior to execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        buildPipelineTrigger('deploy-cluster-1, deploy-cluster-2')\n    }\n}\n\njob('example-2') {\n    publishers {\n        buildPipelineTrigger('deploy-cluster-1, deploy-cluster-2') {\n            parameters {\n                predefinedProp('GIT_COMMIT', '$GIT_COMMIT')\n                predefinedProp('ARTIFACT_BUILD_NUMBER', '$BUILD_NUMBER')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "ccm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "ccm"
                            },
                            "html": "Publishes CCM analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes CCM analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        ccm('**/ccm.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "checkstyle"
                            },
                            "html": "Publishes Checkstyle analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes Checkstyle analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        checkstyle('**/checkstyle-result.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "chucknorris",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "chucknorris"
                            },
                            "html": "Displays a picture of Chuck Norris (instead of Jenkins the butler) and a random Chuck Norris 'The Programmer'\n fact on each build page.",
                            "firstSentenceCommentText": "Displays a picture of Chuck Norris (instead of Jenkins the butler) and a random Chuck Norris 'The Programmer'\n fact on each build page."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        chucknorris()\n    }\n}\n"
                },
                {
                    "name": "cobertura",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFile",
                                    "type": "String"
                                },
                                {
                                    "name": "coberturaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "cobertura"
                            },
                            "html": "Publishes a Cobertura coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes a Cobertura coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        cobertura('**/target/site/cobertura/coverage.xml') {\n            failNoReports(true)\n            sourceEncoding('ASCII')\n\n            // the following targets are added by default to check the method, line and conditional level coverage\n            methodTarget(80, 0, 0)\n            lineTarget(80, 0, 0)\n            conditionalTarget(70, 0, 0)\n        }\n    }\n}\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repoId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "debian-package-builder",
                                "minimumVersion": "1.6.7"
                            },
                            "html": "Uploads Debian packages.\n     ",
                            "firstSentenceCommentText": "Uploads Debian packages.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        debianPackage('precise-default') {\n            commitMessage('automatic commit by Jenkins')\n        }\n    }\n}\n"
                },
                {
                    "name": "dependencyCheck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "dependency-check-jenkins-plugin"
                            },
                            "html": "Publishes OWASP dependency check results.\n     ",
                            "firstSentenceCommentText": "Publishes OWASP dependency check results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        dependencyCheck('**/DependencyCheck-Report.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "downstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "thresholdName",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "html": "Triggers builds on other projects.\n\n The <TT>threshold</TT> must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.",
                            "firstSentenceCommentText": "Triggers builds on other projects."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        downstream('project-a', 'UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Triggers parameterized builds on other projects.",
                            "firstSentenceCommentText": "Triggers parameterized builds on other projects.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        downstreamParameterized {\n            trigger('Project1, Project2') {\n                condition('UNSTABLE_OR_BETTER')\n                parameters {\n                    currentBuild()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "highThreshold",
                                    "type": "Object",
                                    "defaultValue": "50"
                                },
                                {
                                    "name": "normalThreshold",
                                    "type": "Object",
                                    "defaultValue": "25"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "dry"
                            },
                            "html": "Publishes duplicate code analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes duplicate code analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        dry('**/cpd.xml', 80, 20) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "emma",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "emmaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "emma"
                            },
                            "html": "Publishes an Emma coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes an Emma coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        emma('coverage-results/coverage.xml') {\n            minClass(20)\n            maxClass(80)\n            minMethod(20)\n            maxMethod(50)\n            minBlock(30)\n            maxBlock(70)\n            minLine(30)\n            maxLine(70)\n            minCondition(30)\n            maxCondition(90)\n        }\n    }\n}\n"
                },
                {
                    "name": "extendedEmail",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "contentTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "email-ext"
                            },
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        extendedEmail('me@halfempty.org', 'Oops', 'Something broken') {\n            trigger('PreBuild')\n            trigger(triggerName: 'StillUnstable', subject: 'Subject', body: 'Body', recipientList: 'RecipientList',\n                    sendToDevelopers: true, sendToRequester: true, includeCulprits: true, sendToRecipientList: false)\n            configure { node ->\n                node / contentType << 'html'\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "isRankActivated",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "findbugs"
                            },
                            "html": "Publishes FindBugs analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes FindBugs analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        findbugs('**/findbugsXml.xml', false) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "recordBuildArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Activates fingerprinting for the build.\n     ",
                            "firstSentenceCommentText": "Activates fingerprinting for the build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        fingerprint('**/*.jar')\n    }\n}\n"
                },
                {
                    "name": "flexiblePublish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flexiblePublishClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "flexible-publish"
                            },
                            "html": "Add conditional post-build actions.\n\n If the <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Any+Build+Step+Plugin\">Any Build Step Plugin</a> is\n installed, build steps can be used along with publishers. When using versions older then 0.13 of the Flexible\n Publish Plugin, only one build step or one publisher can be used.\n     ",
                            "firstSentenceCommentText": "Add conditional post-build actions.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        flexiblePublish {\n            condition {\n                status('ABORTED', 'FAILURE')\n            }\n            publisher {\n                wsCleanup()\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        flexiblePublish {\n            condition {\n                and {\n                    stringsMatch('foo', 'bar', false)\n                } {\n                    status('SUCCESS', 'SUCCESS')\n                }\n            }\n            step {\n                shell('echo hello!')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "flowdock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "jenkins-flowdock-plugin"
                            },
                            "html": "Sends build notification to Flowdock.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.\n     ",
                            "firstSentenceCommentText": "Sends build notification to Flowdock.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tokens",
                                    "type": "String[]"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "html": "Sends build notification to Flowdock.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.\n     ",
                            "firstSentenceCommentText": "Sends build notification to Flowdock.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        }
                    ],
                    "examples": "// notify using the plugin defaults\njob('example-1') {\n    publishers {\n        flowdock('a-flow-token')\n    }\n}\n\n// notify on all build statuses\njob('example-2') {\n    publishers {\n        flowdock('flow-token') {\n            unstable()\n            success()\n            aborted()\n            failure()\n            fixed()\n            notBuilt()\n        }\n    }\n}\n\n// notify multiple flows in their chat using the tags 'jenkins' and 'build'\njob('example-3') {\n    publishers {\n        flowdock('first-flow-token, second-flow-token') {\n            chat()\n            tags('jenkins', 'build')\n        }\n    }\n}\n"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitPublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "git"
                            },
                            "html": "Pushes tags or branches to a Git repository.\n     ",
                            "firstSentenceCommentText": "Pushes tags or branches to a Git repository.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext"
                        }
                    ],
                    "examples": "// push a to branch if the job succeeded\njob('example-1') {\n    publishers {\n        git {\n            pushOnlyIfSuccess()\n            branch('origin', 'staging')\n        }\n    }\n}\n\n// create and push a tag if the job succeeded, the tag name and message are parametrized.\njob('example-2') {\n    publishers {\n        git {\n            pushOnlyIfSuccess()\n            tag('origin', 'foo-$PIPELINE_VERSION') {\n                message('Release $PIPELINE_VERSION')\n                create()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "githubCommitNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "github"
                            },
                            "html": "Create commit status notifications on the commits based on the outcome of the build.\n     ",
                            "firstSentenceCommentText": "Create commit status notifications on the commits based on the outcome of the build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        githubCommitNotifier()\n    }\n}\n"
                },
                {
                    "name": "groovyPostBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "enumConstants": [
                                        "DoNothing",
                                        "MarkUnstable",
                                        "MarkFailed"
                                    ],
                                    "defaultValue": "Behavior.DoNothing"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Executes Groovy scripts after a build.\n     ",
                            "firstSentenceCommentText": "Executes Groovy scripts after a build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "groovyPostbuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.37",
                            "plugin": {
                                "id": "groovy-postbuild"
                            },
                            "html": "Executes Groovy scripts after a build.\n     ",
                            "firstSentenceCommentText": "Executes Groovy scripts after a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext"
                        }
                    ],
                    "examples": "// run a groovy script and if that fails will mark the build as failed\njob('example') {\n    publishers {\n        groovyPostBuild('println \"hello, world\"', Behavior.MarkFailed)\n    }\n}\n"
                },
                {
                    "name": "hipChat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "hipChatClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "hipchat",
                                "minimumVersion": "0.1.9"
                            },
                            "html": "Sends notifications to HipChat.\n     ",
                            "firstSentenceCommentText": "Sends notifications to HipChat.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        hipChat {\n            rooms('Dev Team A', 'QA')\n            notifyAborted()\n            notifyNotBuilt()\n            notifyUnstable()\n            notifyFailure()\n            notifyBackToNormal()\n        }\n    }\n}\n"
                },
                {
                    "name": "irc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ircClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "ircbot"
                            },
                            "html": "Sends notifications to IRC.\n     ",
                            "firstSentenceCommentText": "Sends notifications to IRC.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        irc {\n            channel('#channel1', 'password1', true)\n            channel(name: '#channel2', password: 'password2', notificationOnly: false)\n            notifyScmCommitters()\n            notifyScmCulprits()\n            notifyUpstreamCommitters(false)\n            notifyScmFixers()\n            strategy('ALL')\n            notificationMessage('SummaryOnly')\n        }\n    }\n}\n"
                },
                {
                    "name": "jacocoCodeCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jacocoClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "jacoco"
                            },
                            "html": "Publishes a JaCoCo coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes a JaCoCo coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        jacocoCodeCoverage {\n            minimumInstructionCoverage('20')\n            minimumBranchCoverage('20')\n            minimumComplexityCoverage('20')\n            minimumLineCoverage('20')\n            minimumMethodCoverage('20')\n            minimumClassCoverage('20')\n            maximumInstructionCoverage('80')\n            maximumBranchCoverage('80')\n            maximumComplexityCoverage('80')\n            maximumLineCoverage('80')\n            maximumMethodCoverage('80')\n            maximumClassCoverage('80')\n        }\n    }\n}\n"
                },
                {
                    "name": "joinTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "joinTriggerClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "join",
                                "minimumVersion": "1.15"
                            },
                            "html": "Runs a job after all immediate downstream jobs have completed.\n     ",
                            "firstSentenceCommentText": "Runs a job after all immediate downstream jobs have completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        joinTrigger {\n            projects('upload-to-staging')\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        joinTrigger {\n            publishers {\n                downstreamParameterized {\n                    trigger('upload-to-staging') {\n                        currentBuild()\n                    }\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "jshint-checkstyle"
                            },
                            "html": "Publishes JSHint analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes JSHint analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        jshint('**/jshint-result.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "mailer",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "dontNotifyEveryUnstableBuild",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sendToIndividuals",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "mailer"
                            },
                            "html": "Sends email notifications.\n     ",
                            "firstSentenceCommentText": "Sends email notifications."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mailer('me@example.com', true, true)\n    }\n}\n"
                },
                {
                    "name": "mavenDeploymentLinker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "maven-deployment-linker"
                            },
                            "html": "Add a summary to the build of the artifacts uploaded to a Maven repository.\n     ",
                            "firstSentenceCommentText": "Add a summary to the build of the artifacts uploaded to a Maven repository."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mavenDeploymentLinker('.*.tar.gz')\n    }\n}\n"
                },
                {
                    "name": "mergePullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.17"
                            },
                            "html": "Allows to merge the pull request if the build was successful.\n     ",
                            "firstSentenceCommentText": "Allows to merge the pull request if the build was successful.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mergePullRequest {\n            mergeComment('merged by Jenkins')\n            disallowOwnCode()\n        }\n    }\n}\n"
                },
                {
                    "name": "plotBuildData",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "plotsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "plot",
                                "minimumVersion": "1.9"
                            },
                            "html": "Plots data across builds.\n     ",
                            "firstSentenceCommentText": "Plots data across builds.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        plotBuildData {\n            plot('Important Plot', 'my_data_store.csv') {\n                propertiesFile('my_data.properties')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        plotBuildData {\n            plot('Bar Charts', 'bar_chart_data_store.csv') {\n                style('bar')\n                propertiesFile('my_data.properties') {\n                    label('My Label')\n                }\n            }\n        }\n    }\n}\n\njob('example-3') {\n    publishers {\n        plotBuildData {\n            plot('Exciting plots', 'excitment.csv') {\n                title('X vs Y')\n                yAxis('Y')\n                numberOfBuilds(42)\n                useDescriptions()\n                keepRecords()\n                excludeZero()\n                logarithmic()\n                propertiesFile('my_data.properties') {\n                    label('Builds')\n                }\n            }\n        }\n    }\n}\n\njob('example-4') {\n    publishers {\n        plotBuildData {\n            plot('Other charts', '123012992213.csv') {\n                style('line3d')\n                csvFile('my_data.properties') {\n                    includeColumns(1, 8, 14)\n                    showTable()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "pmd"
                            },
                            "html": "Publishes PMD analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes PMD analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        pmd('**/*.pmd') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "postBuildScripts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "postbuildscript"
                            },
                            "html": "Execute a set of scripts at the end of the build.\n     ",
                            "firstSentenceCommentText": "Execute a set of scripts at the end of the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        postBuildScripts {\n            steps {\n                shell('echo Hello World')\n            }\n            onlyIfBuildSucceeds(false)\n        }\n    }\n}\n"
                },
                {
                    "name": "postBuildTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "postbuild-task"
                            },
                            "html": "Searches for a regular expression in the console log and, if matched, executes a script.\n     ",
                            "firstSentenceCommentText": "Searches for a regular expression in the console log and, if matched, executes a script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        postBuildTask {\n            task('BUILD SUCCESSFUL', 'git clean -fdx')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "build-publisher",
                                "minimumVersion": "1.20"
                            },
                            "html": "Publishes builds to another Jenkins instance.\n     ",
                            "firstSentenceCommentText": "Publishes builds to another Jenkins instance.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishBuild {\n            discardOldBuilds(7, 10)\n        }\n    }\n}\n"
                },
                {
                    "name": "publishCloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String",
                                    "defaultValue": "'TAR'"
                                },
                                {
                                    "name": "overrideDefaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "clone-workspace-scm"
                            },
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishCloneWorkspace('build/libs/**')\n    }\n}\n"
                },
                {
                    "name": "publishHtml",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "htmlReportContext",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "htmlpublisher"
                            },
                            "html": "Publishes HTML reports.",
                            "firstSentenceCommentText": "Publishes HTML reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishHtml {\n            report('build/test-output') {\n                reportName('Test Output')\n            }\n            report('test') {\n                reportName('Gradle Tests')\n                keepAll()\n                allowMissing()\n                alwaysLinkToLastBuild()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "publishJabber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "jabber"
                            },
                            "html": "Sends notifications to Jabber.",
                            "firstSentenceCommentText": "Sends notifications to Jabber.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishJabber('*room@example.org') {\n            strategyName('STATECHANGE_ONLY')\n            notifySuspects()\n            channelNotificationName('BuildParameters')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.34",
                            "plugin": {
                                "id": "publish-over-ssh",
                                "minimumVersion": "1.12"
                            },
                            "html": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.\n     ",
                            "firstSentenceCommentText": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishOverSsh {\n            server('my-server-01') {\n                credentials('user01') {\n                    pathToKey('path01')\n                }\n                label('server-01')\n                transferSet {\n                    sourceFiles('files')\n                    execCommand('command')\n                }\n            }\n            server('my-server-02') {\n                credentials('user2') {\n                    key('key')\n                }\n                label('server-02')\n                transferSet {\n                    sourceFiles('files2')\n                    execCommand('command2')\n                }\n            }\n            parameterizedPublishing('PARAMETER')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishRobotFrameworkReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "robotClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "robot"
                            },
                            "html": "Publishes Robot Framework test reports.\n     ",
                            "firstSentenceCommentText": "Publishes Robot Framework test reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishRobotFrameworkReports {\n            passThreshold(80.0)\n            unstableThreshold(20.0)\n            onlyCritical()\n        }\n    }\n}\n"
                },
                {
                    "name": "publishScp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "site",
                                    "type": "String"
                                },
                                {
                                    "name": "scpClosure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "scp"
                            },
                            "html": "Uploads artifacts to the remote sites using the SFTP (SSH) protocol. The site is specified in the global Jenkins\n configuration.",
                            "firstSentenceCommentText": "Uploads artifacts to the remote sites using the SFTP (SSH) protocol. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishScp('docs.acme.org') {\n            entry('build/docs/**', 'project-a', true)\n        }\n    }\n}\n"
                },
                {
                    "name": "retryBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "naginatorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "naginator",
                                "minimumVersion": "1.15"
                            },
                            "html": "Allows to automatically reschedule a build after a failure. By default a progressive\n delay with an increment of 5 minutes and a maximum of 3 hours is used.\n     ",
                            "firstSentenceCommentText": "Allows to automatically reschedule a build after a failure. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        retryBuild {\n            rerunIfUnstable()\n            retryLimit(3)\n            progressiveDelay(60, 600)\n        }\n    }\n}\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifier",
                                    "type": "String"
                                },
                                {
                                    "name": "rundeckClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "rundeck"
                            },
                            "html": "Triggers a Rundeck job.\n     ",
                            "firstSentenceCommentText": "Triggers a Rundeck job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        rundeck('13eba461-179d-40a1-8a08-bafee33fdc12')\n    }\n}\n\njob('example-2') {\n    publishers {\n        rundeck('13eba461-179d-40a1-8a08-bafee33fdc12') {\n            options(artifact: 'app', env: 'dev')\n            option('version', '1.1')\n            tag('deploy app to dev')\n            nodeFilters(hostname: 'dev(\\\\d+).company.net')\n            nodeFilter('tags', 'www+dev')\n            shouldWaitForRundeckJob()\n            shouldFailTheBuild()\n        }\n    }\n}\n"
                },
                {
                    "name": "s3",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "profile",
                                    "type": "String"
                                },
                                {
                                    "name": "s3PublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "s3"
                            },
                            "html": "Uploads build artifacts to Amazon S3.\n     ",
                            "firstSentenceCommentText": "Uploads build artifacts to Amazon S3.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        s3('myProfile') {\n            entry('foo', 'bar', 'eu-west-1') {\n                storageClass('REDUCED_REDUNDANCY')\n                noUploadOnFailure()\n                uploadFromSlave()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "slackNotifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "slackNotificationsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "slack",
                                "minimumVersion": "1.8"
                            },
                            "html": "Sends notifications to Slack.\n     ",
                            "firstSentenceCommentText": "Sends notifications to Slack.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        slackNotifications {\n            projectChannel('Dev Team A')\n            notifyAborted()\n            notifyFailure()\n            notifyNotBuilt()\n            notifyUnstable()\n            notifyBackToNormal()\n        }\n    }\n}\n"
                },
                {
                    "name": "sonar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "sonar"
                            },
                            "html": "Triggers SonarQube analysis.\n     ",
                            "firstSentenceCommentText": "Triggers SonarQube analysis.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext"
                        }
                    ],
                    "examples": "// run Sonar analysis for feature-xy branch,\n// but skip if SKIP_SONAR environment variable is set to true\njob('example') {\n    publishers {\n        sonar {\n            branch('feature-xy')\n            overrideTriggers {\n                skipIfEnvironmentVariable('SKIP_SONAR')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "stashNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stashNotifierClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "stashNotifier"
                            },
                            "html": "Notifies an Atlassian Stash instance of Jenkins builds in progress and of their results.\n     ",
                            "firstSentenceCommentText": "Notifies an Atlassian Stash instance of Jenkins builds in progress and of their results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext"
                        }
                    ],
                    "examples": "// notify Stash using the global Jenkins settings\njob('example-1') {\n    publishers {\n        stashNotifier()\n    }\n}\n\n// notify Stash using the global Jenkins settings and sets keepRepeatedBuilds to true\njob('example-2') {\n    publishers {\n        stashNotifier {\n            keepRepeatedBuilds()\n        }\n    }\n}\n"
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "excludePattern",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "high",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "normal",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "low",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "Object",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "tasks"
                            },
                            "html": "Scans the workspace for open tasks.\n     ",
                            "firstSentenceCommentText": "Scans the workspace for open tasks.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        tasks('**/cpd.xml', '**/*.xml', 'FIXME', 'TODO', 'LOW', true) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "textFinder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "alsoCheckConsoleOutput",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "succeedIfFound",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "unstableIfFound",
                                    "type": "Object",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "text-finder"
                            },
                            "html": "Searches for keywords in files or the console log and uses that to downgrade a build to be unstable or a failure.\n     ",
                            "firstSentenceCommentText": "Searches for keywords in files or the console log and uses that to downgrade a build to be unstable or a failure."
                        }
                    ],
                    "examples": "// marks a build as unstable if \"[ERROR]\" has been in found in any log file\njob('example') {\n    publishers {\n        textFinder(/[ERROR]/, '**/*.log', false, false, true)\n    }\n}\n"
                },
                {
                    "name": "violations",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Generates reports from static code violations detectors.",
                            "firstSentenceCommentText": "Generates reports from static code violations detectors.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "int"
                                },
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "violations"
                            },
                            "html": "Generates reports from static code violations detectors.",
                            "firstSentenceCommentText": "Generates reports from static code violations detectors.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        violations(50) {\n            sourcePathPattern('source pattern')\n            fauxProjectPath('faux path')\n            perFileDisplayLimit(51)\n            checkstyle(10, 11, 10, 'test-report/*.xml')\n            findbugs(12, 13, 12)\n            jshint(10, 11, 10, 'test-report/*.xml')\n        }\n    }\n}\n"
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "consoleParsers",
                                    "type": "List"
                                },
                                {
                                    "name": "parserConfigurations",
                                    "type": "Map",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "warningsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "warnings",
                                "minimumVersion": "4.0"
                            },
                            "html": "Scans for compiler warnings.\n\n The first argument specifies the name of the console parsers to use. The second argument specifies a map of log\n file parsers, the key is the name of the parser and the value defines the files to scan. The parser are either\n built-in ones or custom parsers defined in the global Jenkins configuration.\n     ",
                            "firstSentenceCommentText": "Scans for compiler warnings.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        warnings(['Java Compiler (javac)'], ['Java Compiler (javac)': '**/*.log']) {\n            excludePattern('**/test**')\n            resolveRelativePaths()\n        }\n    }\n}\n"
                },
                {
                    "name": "wsCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "ws-cleanup"
                            },
                            "html": "Deletes files from the workspace after the build completed.\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace after the build completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext"
                        }
                    ],
                    "examples": "// delete all files after a build\njob('example-1') {\n    publishers {\n        wsCleanup()\n    }\n}\n\n// delete all 'src' directories in the directory tree\njob('example-2') {\n    publishers {\n        wsCleanup {\n            includePattern('**/src/**')\n            deleteDirectories(true)\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext",
            "methods": [
                {
                    "name": "condition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Specifies the condition to evaluate before executing publishers or build steps.",
                            "firstSentenceCommentText": "Specifies the condition to evaluate before executing publishers or build steps.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RunConditionContext"
                        }
                    ]
                },
                {
                    "name": "publisher",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds one or more post-build actions which will be executed conditionally.",
                            "firstSentenceCommentText": "Adds one or more post-build actions which will be executed conditionally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ]
                },
                {
                    "name": "step",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "any-buildstep"
                            },
                            "html": "Adds one or more build steps which will be executed conditionally.",
                            "firstSentenceCommentText": "Adds one or more build steps which will be executed conditionally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.BuildFlowPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.BuildFlowPublisherContext",
            "methods": [
                {
                    "name": "aggregateBuildFlowTests",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "build-flow-test-aggregator",
                                "minimumVersion": "1.1"
                            },
                            "html": "Aggregates test results from builds started dynamically by build flow jobs.\n     ",
                            "firstSentenceCommentText": "Aggregates test results from builds started dynamically by build flow jobs."
                        }
                    ],
                    "examples": "buildFlowJob('example') {\n    publishers {\n        aggregateBuildFlowTests()\n    }\n}\n"
                },
                {
                    "name": "aggregateDownstreamTestResults",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobs",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeFailedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Aggregates downstream test results.\n     ",
                            "firstSentenceCommentText": "Aggregates downstream test results."
                        }
                    ],
                    "examples": "// aggregates test results from project-A and project-B and includes failed builds in the results\njob('example-1') {\n    publishers {\n        aggregateDownstreamTestResults('project-A, project-B', true)\n    }\n}\n\n// aggregates test results from all downstream jobs and ignores failed builds\njob('example-2') {\n    publishers {\n        aggregateDownstreamTestResults()\n    }\n}\n"
                },
                {
                    "name": "allowBrokenBuildClaiming",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "claim"
                            },
                            "html": "Allows to claim unsuccessful builds.\n     ",
                            "firstSentenceCommentText": "Allows to claim unsuccessful builds."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        allowBrokenBuildClaiming()\n    }\n}\n"
                },
                {
                    "name": "analysisCollector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "analysisCollectorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "analysis-collector"
                            },
                            "html": "Publishes combined analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes combined analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        analysisCollector {\n            checkstyle()\n            dry()\n            findbugs()\n            pmd()\n            tasks()\n            warnings()\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "androidLint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "android-lint"
                            },
                            "html": "Publishes Android Lint results.\n     ",
                            "firstSentenceCommentText": "Publishes Android Lint results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        androidLint('**/lint-results.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "html": "Archives artifacts with each build.\n     ",
                            "firstSentenceCommentText": "Archives artifacts with each build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Archives artifacts with each build.",
                            "firstSentenceCommentText": "Archives artifacts with each build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "latestOnly",
                                    "type": "boolean"
                                }
                            ],
                            "deprecated": true,
                            "html": "Archives artifacts with each build.",
                            "firstSentenceCommentText": "Archives artifacts with each build."
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveArtifacts {\n            pattern('build/test-output/**/*.html')\n            pattern('build/test-output/**/*.xml')\n            onlyIfSuccessful()\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveJavadoc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "javadoc"
                            },
                            "html": "Archives Javadoc artifacts.\n     ",
                            "firstSentenceCommentText": "Archives Javadoc artifacts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveJavadoc {\n            javadocDir('target/javadoc')\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveJunit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "junitClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "junit"
                            },
                            "html": "Publishes JUnit test result reports.\n     ",
                            "firstSentenceCommentText": "Publishes JUnit test result reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveJunit('**/minitest-reports/*.xml') {\n            retainLongStdout()\n            testDataPublishers {\n                publishTestStabilityData()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveXUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xUnitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "xunit"
                            },
                            "html": "Publishes reports generated from results of various testing tools.\n     ",
                            "firstSentenceCommentText": "Publishes reports generated from results of various testing tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveXUnit {\n            jUnit {\n                pattern('my_file.xml')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveXUnit {\n            aUnit {\n                pattern('my_file.xml')\n            }\n            jUnit {\n                pattern('my_other_file.xml')\n            }\n            failedThresholds {\n                unstable(10)\n                unstableNew(10)\n                failure(10)\n                failureNew(10)\n            }\n            skippedThresholds {\n                unstable(5)\n                unstableNew(5)\n                failure(5)\n                failureNew(5)\n            }\n            thresholdMode(ThresholdMode.PERCENT)\n            timeMargin(4000)\n        }\n    }\n}\n"
                },
                {
                    "name": "associatedFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "associated-files"
                            },
                            "html": "Marks files or directories outside of Jenkins as related to a build.\n     ",
                            "firstSentenceCommentText": "Marks files or directories outside of Jenkins as related to a build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        associatedFiles('/tmp/logs')\n    }\n}\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "regularExpressionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "descriptionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "multiConfigurationBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "description-setter"
                            },
                            "html": "Automatically sets a description for the build after it has completed.\n     ",
                            "firstSentenceCommentText": "Automatically sets a description for the build after it has completed."
                        }
                    ],
                    "examples": "// sets build description to the project version in case the output contains the line \"Building my.project.name 0.4.0\"\njob('example-1') {\n    publishers {\n        buildDescription(/.*Building [^\\s]* ([^\\s]*)/)\n    }\n}\n\n//sets the build description to a values defined by a build parameter or environment variable called BRANCH\njob('example-2') {\n    publishers {\n        buildDescription('', '${BRANCH}')\n    }\n}\n"
                },
                {
                    "name": "buildPipelineTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamProjectNames",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "build-pipeline-plugin"
                            },
                            "html": "Adds a manual triggers for jobs that require intervention prior to execution.\n     ",
                            "firstSentenceCommentText": "Adds a manual triggers for jobs that require intervention prior to execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        buildPipelineTrigger('deploy-cluster-1, deploy-cluster-2')\n    }\n}\n\njob('example-2') {\n    publishers {\n        buildPipelineTrigger('deploy-cluster-1, deploy-cluster-2') {\n            parameters {\n                predefinedProp('GIT_COMMIT', '$GIT_COMMIT')\n                predefinedProp('ARTIFACT_BUILD_NUMBER', '$BUILD_NUMBER')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "ccm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "ccm"
                            },
                            "html": "Publishes CCM analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes CCM analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        ccm('**/ccm.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "checkstyle"
                            },
                            "html": "Publishes Checkstyle analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes Checkstyle analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        checkstyle('**/checkstyle-result.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "chucknorris",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "chucknorris"
                            },
                            "html": "Displays a picture of Chuck Norris (instead of Jenkins the butler) and a random Chuck Norris 'The Programmer'\n fact on each build page.",
                            "firstSentenceCommentText": "Displays a picture of Chuck Norris (instead of Jenkins the butler) and a random Chuck Norris 'The Programmer'\n fact on each build page."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        chucknorris()\n    }\n}\n"
                },
                {
                    "name": "cobertura",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFile",
                                    "type": "String"
                                },
                                {
                                    "name": "coberturaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "cobertura"
                            },
                            "html": "Publishes a Cobertura coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes a Cobertura coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        cobertura('**/target/site/cobertura/coverage.xml') {\n            failNoReports(true)\n            sourceEncoding('ASCII')\n\n            // the following targets are added by default to check the method, line and conditional level coverage\n            methodTarget(80, 0, 0)\n            lineTarget(80, 0, 0)\n            conditionalTarget(70, 0, 0)\n        }\n    }\n}\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repoId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "debian-package-builder",
                                "minimumVersion": "1.6.7"
                            },
                            "html": "Uploads Debian packages.\n     ",
                            "firstSentenceCommentText": "Uploads Debian packages.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        debianPackage('precise-default') {\n            commitMessage('automatic commit by Jenkins')\n        }\n    }\n}\n"
                },
                {
                    "name": "dependencyCheck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "dependency-check-jenkins-plugin"
                            },
                            "html": "Publishes OWASP dependency check results.\n     ",
                            "firstSentenceCommentText": "Publishes OWASP dependency check results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        dependencyCheck('**/DependencyCheck-Report.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "downstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "thresholdName",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "html": "Triggers builds on other projects.\n\n The <TT>threshold</TT> must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.",
                            "firstSentenceCommentText": "Triggers builds on other projects."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        downstream('project-a', 'UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Triggers parameterized builds on other projects.",
                            "firstSentenceCommentText": "Triggers parameterized builds on other projects.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        downstreamParameterized {\n            trigger('Project1, Project2') {\n                condition('UNSTABLE_OR_BETTER')\n                parameters {\n                    currentBuild()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "highThreshold",
                                    "type": "Object",
                                    "defaultValue": "50"
                                },
                                {
                                    "name": "normalThreshold",
                                    "type": "Object",
                                    "defaultValue": "25"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "dry"
                            },
                            "html": "Publishes duplicate code analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes duplicate code analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        dry('**/cpd.xml', 80, 20) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "emma",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "emmaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "emma"
                            },
                            "html": "Publishes an Emma coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes an Emma coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        emma('coverage-results/coverage.xml') {\n            minClass(20)\n            maxClass(80)\n            minMethod(20)\n            maxMethod(50)\n            minBlock(30)\n            maxBlock(70)\n            minLine(30)\n            maxLine(70)\n            minCondition(30)\n            maxCondition(90)\n        }\n    }\n}\n"
                },
                {
                    "name": "extendedEmail",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "contentTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "email-ext"
                            },
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        extendedEmail('me@halfempty.org', 'Oops', 'Something broken') {\n            trigger('PreBuild')\n            trigger(triggerName: 'StillUnstable', subject: 'Subject', body: 'Body', recipientList: 'RecipientList',\n                    sendToDevelopers: true, sendToRequester: true, includeCulprits: true, sendToRecipientList: false)\n            configure { node ->\n                node / contentType << 'html'\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "isRankActivated",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "findbugs"
                            },
                            "html": "Publishes FindBugs analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes FindBugs analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        findbugs('**/findbugsXml.xml', false) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "recordBuildArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Activates fingerprinting for the build.\n     ",
                            "firstSentenceCommentText": "Activates fingerprinting for the build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        fingerprint('**/*.jar')\n    }\n}\n"
                },
                {
                    "name": "flexiblePublish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flexiblePublishClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "flexible-publish"
                            },
                            "html": "Add conditional post-build actions.\n\n If the <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Any+Build+Step+Plugin\">Any Build Step Plugin</a> is\n installed, build steps can be used along with publishers. When using versions older then 0.13 of the Flexible\n Publish Plugin, only one build step or one publisher can be used.\n     ",
                            "firstSentenceCommentText": "Add conditional post-build actions.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        flexiblePublish {\n            condition {\n                status('ABORTED', 'FAILURE')\n            }\n            publisher {\n                wsCleanup()\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        flexiblePublish {\n            condition {\n                and {\n                    stringsMatch('foo', 'bar', false)\n                } {\n                    status('SUCCESS', 'SUCCESS')\n                }\n            }\n            step {\n                shell('echo hello!')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "flowdock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "jenkins-flowdock-plugin"
                            },
                            "html": "Sends build notification to Flowdock.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.\n     ",
                            "firstSentenceCommentText": "Sends build notification to Flowdock.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        }
                    ],
                    "examples": "// notify using the plugin defaults\njob('example-1') {\n    publishers {\n        flowdock('a-flow-token')\n    }\n}\n\n// notify on all build statuses\njob('example-2') {\n    publishers {\n        flowdock('flow-token') {\n            unstable()\n            success()\n            aborted()\n            failure()\n            fixed()\n            notBuilt()\n        }\n    }\n}\n\n// notify multiple flows in their chat using the tags 'jenkins' and 'build'\njob('example-3') {\n    publishers {\n        flowdock('first-flow-token, second-flow-token') {\n            chat()\n            tags('jenkins', 'build')\n        }\n    }\n}\n"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitPublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "git"
                            },
                            "html": "Pushes tags or branches to a Git repository.\n     ",
                            "firstSentenceCommentText": "Pushes tags or branches to a Git repository.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext"
                        }
                    ],
                    "examples": "// push a to branch if the job succeeded\njob('example-1') {\n    publishers {\n        git {\n            pushOnlyIfSuccess()\n            branch('origin', 'staging')\n        }\n    }\n}\n\n// create and push a tag if the job succeeded, the tag name and message are parametrized.\njob('example-2') {\n    publishers {\n        git {\n            pushOnlyIfSuccess()\n            tag('origin', 'foo-$PIPELINE_VERSION') {\n                message('Release $PIPELINE_VERSION')\n                create()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "githubCommitNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "github"
                            },
                            "html": "Create commit status notifications on the commits based on the outcome of the build.\n     ",
                            "firstSentenceCommentText": "Create commit status notifications on the commits based on the outcome of the build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        githubCommitNotifier()\n    }\n}\n"
                },
                {
                    "name": "groovyPostBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "enumConstants": [
                                        "DoNothing",
                                        "MarkUnstable",
                                        "MarkFailed"
                                    ],
                                    "defaultValue": "Behavior.DoNothing"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Executes Groovy scripts after a build.\n     ",
                            "firstSentenceCommentText": "Executes Groovy scripts after a build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "groovyPostbuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.37",
                            "plugin": {
                                "id": "groovy-postbuild"
                            },
                            "html": "Executes Groovy scripts after a build.\n     ",
                            "firstSentenceCommentText": "Executes Groovy scripts after a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext"
                        }
                    ],
                    "examples": "// run a groovy script and if that fails will mark the build as failed\njob('example') {\n    publishers {\n        groovyPostBuild('println \"hello, world\"', Behavior.MarkFailed)\n    }\n}\n"
                },
                {
                    "name": "hipChat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "hipChatClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "hipchat",
                                "minimumVersion": "0.1.9"
                            },
                            "html": "Sends notifications to HipChat.\n     ",
                            "firstSentenceCommentText": "Sends notifications to HipChat.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        hipChat {\n            rooms('Dev Team A', 'QA')\n            notifyAborted()\n            notifyNotBuilt()\n            notifyUnstable()\n            notifyFailure()\n            notifyBackToNormal()\n        }\n    }\n}\n"
                },
                {
                    "name": "irc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ircClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "ircbot"
                            },
                            "html": "Sends notifications to IRC.\n     ",
                            "firstSentenceCommentText": "Sends notifications to IRC.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        irc {\n            channel('#channel1', 'password1', true)\n            channel(name: '#channel2', password: 'password2', notificationOnly: false)\n            notifyScmCommitters()\n            notifyScmCulprits()\n            notifyUpstreamCommitters(false)\n            notifyScmFixers()\n            strategy('ALL')\n            notificationMessage('SummaryOnly')\n        }\n    }\n}\n"
                },
                {
                    "name": "jacocoCodeCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jacocoClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "jacoco"
                            },
                            "html": "Publishes a JaCoCo coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes a JaCoCo coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        jacocoCodeCoverage {\n            minimumInstructionCoverage('20')\n            minimumBranchCoverage('20')\n            minimumComplexityCoverage('20')\n            minimumLineCoverage('20')\n            minimumMethodCoverage('20')\n            minimumClassCoverage('20')\n            maximumInstructionCoverage('80')\n            maximumBranchCoverage('80')\n            maximumComplexityCoverage('80')\n            maximumLineCoverage('80')\n            maximumMethodCoverage('80')\n            maximumClassCoverage('80')\n        }\n    }\n}\n"
                },
                {
                    "name": "joinTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "joinTriggerClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "join",
                                "minimumVersion": "1.15"
                            },
                            "html": "Runs a job after all immediate downstream jobs have completed.\n     ",
                            "firstSentenceCommentText": "Runs a job after all immediate downstream jobs have completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        joinTrigger {\n            projects('upload-to-staging')\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        joinTrigger {\n            publishers {\n                downstreamParameterized {\n                    trigger('upload-to-staging') {\n                        currentBuild()\n                    }\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "jshint-checkstyle"
                            },
                            "html": "Publishes JSHint analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes JSHint analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        jshint('**/jshint-result.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "mailer",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "dontNotifyEveryUnstableBuild",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sendToIndividuals",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "mailer"
                            },
                            "html": "Sends email notifications.\n     ",
                            "firstSentenceCommentText": "Sends email notifications."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mailer('me@example.com', true, true)\n    }\n}\n"
                },
                {
                    "name": "mavenDeploymentLinker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "maven-deployment-linker"
                            },
                            "html": "Add a summary to the build of the artifacts uploaded to a Maven repository.\n     ",
                            "firstSentenceCommentText": "Add a summary to the build of the artifacts uploaded to a Maven repository."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mavenDeploymentLinker('.*.tar.gz')\n    }\n}\n"
                },
                {
                    "name": "mergePullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.17"
                            },
                            "html": "Allows to merge the pull request if the build was successful.\n     ",
                            "firstSentenceCommentText": "Allows to merge the pull request if the build was successful.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mergePullRequest {\n            mergeComment('merged by Jenkins')\n            disallowOwnCode()\n        }\n    }\n}\n"
                },
                {
                    "name": "plotBuildData",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "plotsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "plot",
                                "minimumVersion": "1.9"
                            },
                            "html": "Plots data across builds.\n     ",
                            "firstSentenceCommentText": "Plots data across builds.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        plotBuildData {\n            plot('Important Plot', 'my_data_store.csv') {\n                propertiesFile('my_data.properties')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        plotBuildData {\n            plot('Bar Charts', 'bar_chart_data_store.csv') {\n                style('bar')\n                propertiesFile('my_data.properties') {\n                    label('My Label')\n                }\n            }\n        }\n    }\n}\n\njob('example-3') {\n    publishers {\n        plotBuildData {\n            plot('Exciting plots', 'excitment.csv') {\n                title('X vs Y')\n                yAxis('Y')\n                numberOfBuilds(42)\n                useDescriptions()\n                keepRecords()\n                excludeZero()\n                logarithmic()\n                propertiesFile('my_data.properties') {\n                    label('Builds')\n                }\n            }\n        }\n    }\n}\n\njob('example-4') {\n    publishers {\n        plotBuildData {\n            plot('Other charts', '123012992213.csv') {\n                style('line3d')\n                csvFile('my_data.properties') {\n                    includeColumns(1, 8, 14)\n                    showTable()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "pmd"
                            },
                            "html": "Publishes PMD analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes PMD analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        pmd('**/*.pmd') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "postBuildScripts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "postbuildscript"
                            },
                            "html": "Execute a set of scripts at the end of the build.\n     ",
                            "firstSentenceCommentText": "Execute a set of scripts at the end of the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        postBuildScripts {\n            steps {\n                shell('echo Hello World')\n            }\n            onlyIfBuildSucceeds(false)\n        }\n    }\n}\n"
                },
                {
                    "name": "postBuildTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "postbuild-task"
                            },
                            "html": "Searches for a regular expression in the console log and, if matched, executes a script.\n     ",
                            "firstSentenceCommentText": "Searches for a regular expression in the console log and, if matched, executes a script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        postBuildTask {\n            task('BUILD SUCCESSFUL', 'git clean -fdx')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "build-publisher",
                                "minimumVersion": "1.20"
                            },
                            "html": "Publishes builds to another Jenkins instance.\n     ",
                            "firstSentenceCommentText": "Publishes builds to another Jenkins instance.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishBuild {\n            discardOldBuilds(7, 10)\n        }\n    }\n}\n"
                },
                {
                    "name": "publishCloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String",
                                    "defaultValue": "'TAR'"
                                },
                                {
                                    "name": "overrideDefaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "clone-workspace-scm"
                            },
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishCloneWorkspace('build/libs/**')\n    }\n}\n"
                },
                {
                    "name": "publishHtml",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "htmlReportContext",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "htmlpublisher"
                            },
                            "html": "Publishes HTML reports.",
                            "firstSentenceCommentText": "Publishes HTML reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishHtml {\n            report('build/test-output') {\n                reportName('Test Output')\n            }\n            report('test') {\n                reportName('Gradle Tests')\n                keepAll()\n                allowMissing()\n                alwaysLinkToLastBuild()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "publishJabber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "jabber"
                            },
                            "html": "Sends notifications to Jabber.",
                            "firstSentenceCommentText": "Sends notifications to Jabber.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishJabber('*room@example.org') {\n            strategyName('STATECHANGE_ONLY')\n            notifySuspects()\n            channelNotificationName('BuildParameters')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.34",
                            "plugin": {
                                "id": "publish-over-ssh",
                                "minimumVersion": "1.12"
                            },
                            "html": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.\n     ",
                            "firstSentenceCommentText": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishOverSsh {\n            server('my-server-01') {\n                credentials('user01') {\n                    pathToKey('path01')\n                }\n                label('server-01')\n                transferSet {\n                    sourceFiles('files')\n                    execCommand('command')\n                }\n            }\n            server('my-server-02') {\n                credentials('user2') {\n                    key('key')\n                }\n                label('server-02')\n                transferSet {\n                    sourceFiles('files2')\n                    execCommand('command2')\n                }\n            }\n            parameterizedPublishing('PARAMETER')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishRobotFrameworkReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "robotClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "robot"
                            },
                            "html": "Publishes Robot Framework test reports.\n     ",
                            "firstSentenceCommentText": "Publishes Robot Framework test reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishRobotFrameworkReports {\n            passThreshold(80.0)\n            unstableThreshold(20.0)\n            onlyCritical()\n        }\n    }\n}\n"
                },
                {
                    "name": "publishScp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "site",
                                    "type": "String"
                                },
                                {
                                    "name": "scpClosure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "scp"
                            },
                            "html": "Uploads artifacts to the remote sites using the SFTP (SSH) protocol. The site is specified in the global Jenkins\n configuration.",
                            "firstSentenceCommentText": "Uploads artifacts to the remote sites using the SFTP (SSH) protocol. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishScp('docs.acme.org') {\n            entry('build/docs/**', 'project-a', true)\n        }\n    }\n}\n"
                },
                {
                    "name": "retryBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "naginatorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "naginator",
                                "minimumVersion": "1.15"
                            },
                            "html": "Allows to automatically reschedule a build after a failure. By default a progressive\n delay with an increment of 5 minutes and a maximum of 3 hours is used.\n     ",
                            "firstSentenceCommentText": "Allows to automatically reschedule a build after a failure. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        retryBuild {\n            rerunIfUnstable()\n            retryLimit(3)\n            progressiveDelay(60, 600)\n        }\n    }\n}\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifier",
                                    "type": "String"
                                },
                                {
                                    "name": "rundeckClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "rundeck"
                            },
                            "html": "Triggers a Rundeck job.\n     ",
                            "firstSentenceCommentText": "Triggers a Rundeck job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        rundeck('13eba461-179d-40a1-8a08-bafee33fdc12')\n    }\n}\n\njob('example-2') {\n    publishers {\n        rundeck('13eba461-179d-40a1-8a08-bafee33fdc12') {\n            options(artifact: 'app', env: 'dev')\n            option('version', '1.1')\n            tag('deploy app to dev')\n            nodeFilters(hostname: 'dev(\\\\d+).company.net')\n            nodeFilter('tags', 'www+dev')\n            shouldWaitForRundeckJob()\n            shouldFailTheBuild()\n        }\n    }\n}\n"
                },
                {
                    "name": "s3",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "profile",
                                    "type": "String"
                                },
                                {
                                    "name": "s3PublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "s3"
                            },
                            "html": "Uploads build artifacts to Amazon S3.\n     ",
                            "firstSentenceCommentText": "Uploads build artifacts to Amazon S3.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        s3('myProfile') {\n            entry('foo', 'bar', 'eu-west-1') {\n                storageClass('REDUCED_REDUNDANCY')\n                noUploadOnFailure()\n                uploadFromSlave()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "slackNotifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "slackNotificationsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "slack",
                                "minimumVersion": "1.8"
                            },
                            "html": "Sends notifications to Slack.\n     ",
                            "firstSentenceCommentText": "Sends notifications to Slack.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        slackNotifications {\n            projectChannel('Dev Team A')\n            notifyAborted()\n            notifyFailure()\n            notifyNotBuilt()\n            notifyUnstable()\n            notifyBackToNormal()\n        }\n    }\n}\n"
                },
                {
                    "name": "sonar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "sonar"
                            },
                            "html": "Triggers SonarQube analysis.\n     ",
                            "firstSentenceCommentText": "Triggers SonarQube analysis.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext"
                        }
                    ],
                    "examples": "// run Sonar analysis for feature-xy branch,\n// but skip if SKIP_SONAR environment variable is set to true\njob('example') {\n    publishers {\n        sonar {\n            branch('feature-xy')\n            overrideTriggers {\n                skipIfEnvironmentVariable('SKIP_SONAR')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "stashNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stashNotifierClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "stashNotifier"
                            },
                            "html": "Notifies an Atlassian Stash instance of Jenkins builds in progress and of their results.\n     ",
                            "firstSentenceCommentText": "Notifies an Atlassian Stash instance of Jenkins builds in progress and of their results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext"
                        }
                    ],
                    "examples": "// notify Stash using the global Jenkins settings\njob('example-1') {\n    publishers {\n        stashNotifier()\n    }\n}\n\n// notify Stash using the global Jenkins settings and sets keepRepeatedBuilds to true\njob('example-2') {\n    publishers {\n        stashNotifier {\n            keepRepeatedBuilds()\n        }\n    }\n}\n"
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "excludePattern",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "high",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "normal",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "low",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "Object",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "tasks"
                            },
                            "html": "Scans the workspace for open tasks.\n     ",
                            "firstSentenceCommentText": "Scans the workspace for open tasks.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        tasks('**/cpd.xml', '**/*.xml', 'FIXME', 'TODO', 'LOW', true) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "textFinder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "alsoCheckConsoleOutput",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "succeedIfFound",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "unstableIfFound",
                                    "type": "Object",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "text-finder"
                            },
                            "html": "Searches for keywords in files or the console log and uses that to downgrade a build to be unstable or a failure.\n     ",
                            "firstSentenceCommentText": "Searches for keywords in files or the console log and uses that to downgrade a build to be unstable or a failure."
                        }
                    ],
                    "examples": "// marks a build as unstable if \"[ERROR]\" has been in found in any log file\njob('example') {\n    publishers {\n        textFinder(/[ERROR]/, '**/*.log', false, false, true)\n    }\n}\n"
                },
                {
                    "name": "violations",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Generates reports from static code violations detectors.",
                            "firstSentenceCommentText": "Generates reports from static code violations detectors.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "int"
                                },
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "violations"
                            },
                            "html": "Generates reports from static code violations detectors.",
                            "firstSentenceCommentText": "Generates reports from static code violations detectors.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        violations(50) {\n            sourcePathPattern('source pattern')\n            fauxProjectPath('faux path')\n            perFileDisplayLimit(51)\n            checkstyle(10, 11, 10, 'test-report/*.xml')\n            findbugs(12, 13, 12)\n            jshint(10, 11, 10, 'test-report/*.xml')\n        }\n    }\n}\n"
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "consoleParsers",
                                    "type": "List"
                                },
                                {
                                    "name": "parserConfigurations",
                                    "type": "Map",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "warningsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "warnings",
                                "minimumVersion": "4.0"
                            },
                            "html": "Scans for compiler warnings.\n\n The first argument specifies the name of the console parsers to use. The second argument specifies a map of log\n file parsers, the key is the name of the parser and the value defines the files to scan. The parser are either\n built-in ones or custom parsers defined in the global Jenkins configuration.\n     ",
                            "firstSentenceCommentText": "Scans for compiler warnings.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        warnings(['Java Compiler (javac)'], ['Java Compiler (javac)': '**/*.log']) {\n            excludePattern('**/test**')\n            resolveRelativePaths()\n        }\n    }\n}\n"
                },
                {
                    "name": "wsCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "ws-cleanup"
                            },
                            "html": "Deletes files from the workspace after the build completed.\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace after the build completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext"
                        }
                    ],
                    "examples": "// delete all files after a build\njob('example-1') {\n    publishers {\n        wsCleanup()\n    }\n}\n\n// delete all 'src' directories in the directory tree\njob('example-2') {\n    publishers {\n        wsCleanup {\n            includePattern('**/src/**')\n            deleteDirectories(true)\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext",
            "methods": [
                {
                    "name": "categories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "categories",
                                    "type": "List<String>"
                                }
                            ],
                            "html": "Throttles this project as part of one or more categories.",
                            "firstSentenceCommentText": "Throttles this project as part of one or more categories."
                        }
                    ]
                },
                {
                    "name": "maxPerNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxPerNode",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run at any one time,\n across all nodes.",
                            "firstSentenceCommentText": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run at any one time,\n across all nodes."
                        }
                    ]
                },
                {
                    "name": "maxTotal",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxTotal",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run per node.",
                            "firstSentenceCommentText": "Sets the maximum number of concurrent builds of this project (or category) to be allowed to run per node."
                        }
                    ]
                },
                {
                    "name": "throttleDisabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleDisabled",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the throttle. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Disables the throttle. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GerritEventContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GerritEventContext",
            "methods": [
                {
                    "name": "changeAbandoned",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a change is abandoned.\n     ",
                            "firstSentenceCommentText": "Trigger when a change is abandoned."
                        }
                    ]
                },
                {
                    "name": "changeMerged",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a change is merged/submitted.\n     ",
                            "firstSentenceCommentText": "Trigger when a change is merged/submitted."
                        }
                    ]
                },
                {
                    "name": "changeRestored",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a change is restored.\n     ",
                            "firstSentenceCommentText": "Trigger when a change is restored."
                        }
                    ]
                },
                {
                    "name": "commentAdded",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a review comment is left with the indicated vote category and value.\n     ",
                            "firstSentenceCommentText": "Trigger when a review comment is left with the indicated vote category and value."
                        }
                    ]
                },
                {
                    "name": "draftPublished",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a draft change or patch set is published.\n     ",
                            "firstSentenceCommentText": "Trigger when a draft change or patch set is published."
                        }
                    ]
                },
                {
                    "name": "patchsetCreated",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a new change or patch set is uploaded.\n     ",
                            "firstSentenceCommentText": "Trigger when a new change or patch set is uploaded."
                        }
                    ]
                },
                {
                    "name": "refUpdated",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "html": "Trigger when a reference (e.g., branch or tag) is updated.\n     ",
                            "firstSentenceCommentText": "Trigger when a reference (e.g., branch or tag) is updated."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GerritContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GerritContext",
            "methods": [
                {
                    "name": "buildFailed",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "html": "The Verified and Code Review vote to set in Gerrit when the build fails.\n\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build fails."
                        }
                    ]
                },
                {
                    "name": "buildNotBuilt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "html": "The Verified and Code Review vote to set in Gerrit when no build was built.\n\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when no build was built."
                        }
                    ]
                },
                {
                    "name": "buildStarted",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "html": "The Verified and Code Review vote to set in Gerrit when the build starts.\n\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build starts."
                        }
                    ]
                },
                {
                    "name": "buildSuccessful",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "html": "The Verified and Code Review vote to set in Gerrit when the build is successful.\n\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build is successful."
                        }
                    ]
                },
                {
                    "name": "buildUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "verified",
                                    "type": "Integer"
                                },
                                {
                                    "name": "codeReview",
                                    "type": "Integer"
                                }
                            ],
                            "html": "The Verified and Code Review vote to set in Gerrit when the build is unstable.\n\n Set an argument to <TT>null</TT> to use the default value.",
                            "firstSentenceCommentText": "The Verified and Code Review vote to set in Gerrit when the build is unstable."
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>GerritTrigger</TT> node is passed into the configure\n block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "events",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "eventClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Specifies which type of Gerrit events should trigger the build.",
                            "firstSentenceCommentText": "Specifies which type of Gerrit events should trigger the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GerritEventContext"
                        }
                    ]
                },
                {
                    "name": "project",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "branches",
                                    "type": "List<String>"
                                }
                            ],
                            "html": "Specifies on which Gerrit projects to trigger a build on.",
                            "firstSentenceCommentText": "Specifies on which Gerrit projects to trigger a build on."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "branch",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies on which Gerrit projects to trigger a build on.",
                            "firstSentenceCommentText": "Specifies on which Gerrit projects to trigger a build on."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderCommitStatusContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderCommitStatusContext",
            "methods": [
                {
                    "name": "completedStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildResult",
                                    "type": "String"
                                },
                                {
                                    "name": "message",
                                    "type": "String"
                                }
                            ],
                            "html": "Use a custom status for when a build is completed. Can be called multiple times to set messages for different\n build results. Valid build results are <TT>'SUCCESS'</TT>, <TT>'FAILURE'</TT>, and <TT>'ERROR'</TT>.",
                            "firstSentenceCommentText": "Use a custom status for when a build is completed. "
                        }
                    ]
                },
                {
                    "name": "context",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "context",
                                    "type": "String"
                                }
                            ],
                            "html": "A string label to differentiate this status from the status of other systems.",
                            "firstSentenceCommentText": "A string label to differentiate this status from the status of other systems."
                        }
                    ]
                },
                {
                    "name": "startedStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "startedStatus",
                                    "type": "String"
                                }
                            ],
                            "html": "Use a custom status for when a build is started.",
                            "firstSentenceCommentText": "Use a custom status for when a build is started."
                        }
                    ]
                },
                {
                    "name": "triggeredStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggeredStatus",
                                    "type": "String"
                                }
                            ],
                            "html": "Use a custom status for when a build is triggered.",
                            "firstSentenceCommentText": "Use a custom status for when a build is triggered."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderExtensionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderExtensionContext",
            "methods": [
                {
                    "name": "commitStatus",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Updates the commit status during the build.",
                            "firstSentenceCommentText": "Updates the commit status during the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderCommitStatusContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext",
            "methods": [
                {
                    "name": "admin",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "admin",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds admins for this job.",
                            "firstSentenceCommentText": "Adds admins for this job."
                        }
                    ]
                },
                {
                    "name": "admins",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "admins",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds admins for this job.",
                            "firstSentenceCommentText": "Adds admins for this job."
                        }
                    ]
                },
                {
                    "name": "allowMembersOfWhitelistedOrgsAsAdmin",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowMembersOfWhitelistedOrgsAsAdmin",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.15-0"
                            },
                            "html": "Allows members of whitelisted organisations to behave like admins.\n     ",
                            "firstSentenceCommentText": "Allows members of whitelisted organisations to behave like admins."
                        }
                    ]
                },
                {
                    "name": "autoCloseFailedPullRequests",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoCloseFailedPullRequests",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Close pull request automatically when the build fails.",
                            "firstSentenceCommentText": "Close pull request automatically when the build fails."
                        }
                    ]
                },
                {
                    "name": "commentFilePath",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commentFilePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.14"
                            },
                            "html": "Extends the standard build comment message on github with a custom message file.\n     ",
                            "firstSentenceCommentText": "Extends the standard build comment message on github with a custom message file."
                        }
                    ]
                },
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cron",
                                    "type": "String"
                                }
                            ],
                            "html": "This schedules polling to GitHub for new changes in pull requests.",
                            "firstSentenceCommentText": "This schedules polling to GitHub for new changes in pull requests."
                        }
                    ]
                },
                {
                    "name": "extensions",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.26"
                            },
                            "html": "Adds additional trigger options.\n     ",
                            "firstSentenceCommentText": "Adds additional trigger options.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GitHubPullRequestBuilderExtensionContext"
                        }
                    ]
                },
                {
                    "name": "onlyTriggerPhrase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "onlyTriggerPhrase",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "When set, only commenting the trigger phrase in the pull request will trigger a build.",
                            "firstSentenceCommentText": "When set, only commenting the trigger phrase in the pull request will trigger a build."
                        }
                    ]
                },
                {
                    "name": "orgWhitelist",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "organization",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds organisation names whose members are considered whitelisted for this specific job.",
                            "firstSentenceCommentText": "Adds organisation names whose members are considered whitelisted for this specific job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "organizations",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds organisation names whose members are considered whitelisted for this specific job.",
                            "firstSentenceCommentText": "Adds organisation names whose members are considered whitelisted for this specific job."
                        }
                    ]
                },
                {
                    "name": "permitAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "permitAll",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Build every pull request automatically without asking.",
                            "firstSentenceCommentText": "Build every pull request automatically without asking."
                        }
                    ]
                },
                {
                    "name": "triggerPhrase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggerPhrase",
                                    "type": "String"
                                }
                            ],
                            "html": "When filled, commenting this phrase in the pull request will trigger a build.",
                            "firstSentenceCommentText": "When filled, commenting this phrase in the pull request will trigger a build."
                        }
                    ]
                },
                {
                    "name": "useGitHubHooks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useGitHubHooks",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Checking this option will disable regular polling for changes in GitHub and will try to create a GitHub hook.",
                            "firstSentenceCommentText": "Checking this option will disable regular polling for changes in GitHub and will try to create a GitHub hook."
                        }
                    ]
                },
                {
                    "name": "userWhitelist",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds whitelisted users for this job.",
                            "firstSentenceCommentText": "Adds whitelisted users for this job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "users",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds whitelisted users for this job.",
                            "firstSentenceCommentText": "Adds whitelisted users for this job."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext",
            "methods": [
                {
                    "name": "executionStatuses",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "executionStatuses",
                                    "type": "String..."
                                }
                            ],
                            "html": "Only triggers a build if the status of the Rundeck execution at the origin of the notification matches one of\n  the given statuses.\n\n Possible values for are <TT>'SUCCEEDED'</TT>, <TT>'FAILED'</TT> and <TT>'ABORTED'</TT>.",
                            "firstSentenceCommentText": "Only triggers a build if the status of the Rundeck execution at the origin of the notification matches one of\n  the given statuses."
                        }
                    ]
                },
                {
                    "name": "jobIdentifiers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifiers",
                                    "type": "String..."
                                }
                            ],
                            "html": "Only triggers a new build if the Rundeck execution at the origin of the notification matches one of the following\n Rundeck job identifier. The identifier can be either a job UUID or a job reference.",
                            "firstSentenceCommentText": "Only triggers a new build if the Rundeck execution at the origin of the notification matches one of the following\n Rundeck job identifier. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext",
            "methods": [
                {
                    "name": "ignorePostCommitHooks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignorePostCommitHooks",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "Ignore changes notified by SCM post-commit hooks. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Ignore changes notified by SCM post-commit hooks. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerInspectionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerInspectionContext",
            "methods": [
                {
                    "name": "path",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a JSON/XPATH path expression to the inspection.\n     ",
                            "firstSentenceCommentText": "Adds a JSON/XPATH path expression to the inspection."
                        }
                    ]
                },
                {
                    "name": "regexp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "exp",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a RegExp for TEXT inspections.\n\n Checks that the given Regexp is actually compilable to a Java RegExp.\n     ",
                            "firstSentenceCommentText": "Adds a RegExp for TEXT inspections."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerEntryContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerEntryContext",
            "methods": [
                {
                    "name": "check",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "performCheck",
                                    "type": "String"
                                }
                            ],
                            "html": "Enables checks to perform for URL.\n\n Can be one of <TT>'status'</TT> (check status code), <TT>'etag'</TT> (check the ETag) and <TT>'lastModified'</TT>\n (check the last modified date).\n     ",
                            "firstSentenceCommentText": "Enables checks to perform for URL."
                        }
                    ]
                },
                {
                    "name": "inspection",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "type",
                                    "type": "String"
                                },
                                {
                                    "name": "inspectionClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds inspections of the returned content.\n\n Can be one of <TT>'change'</TT>, <TT>'json'</TT>, <TT>'xml'</TT> or <TT>'text</TT>.\n     ",
                            "firstSentenceCommentText": "Adds inspections of the returned content.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerInspectionContext"
                        }
                    ]
                },
                {
                    "name": "proxy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "active",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Enables/Disables the use of the global proxy that is configured for Jenkins.\n\n Defaults to <code>false</code>\n     ",
                            "firstSentenceCommentText": "Enables/Disables the use of the global proxy that is configured for Jenkins."
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "statusCode",
                                    "type": "int"
                                }
                            ],
                            "html": "Define the expected status code of the response.\n\n Defaults to 200.\n Needs to be used with <TT>check('status')</TT> to be useful.\n     ",
                            "firstSentenceCommentText": "Define the expected status code of the response."
                        }
                    ]
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeout",
                                    "type": "long"
                                }
                            ],
                            "html": "Defines how many seconds the trigger will wait when checking the URL.\n\n Defaults to 300 seconds.\n     ",
                            "firstSentenceCommentText": "Defines how many seconds the trigger will wait when checking the URL."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>URLTrigger</TT> node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cron",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the cron schedule. Defaults to <TT>'H/5 * * * *'</TT>.",
                            "firstSentenceCommentText": "Sets the cron schedule. "
                        }
                    ]
                },
                {
                    "name": "restrictToLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "label",
                                    "type": "String"
                                }
                            ],
                            "html": "Restricts execution to label.",
                            "firstSentenceCommentText": "Restricts execution to label."
                        }
                    ]
                },
                {
                    "name": "url",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "url",
                                    "type": "String"
                                },
                                {
                                    "name": "entryClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a monitored URL to the trigger.",
                            "firstSentenceCommentText": "Adds a monitored URL to the trigger.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerEntryContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext",
            "methods": [
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                }
                            ],
                            "html": "Triggers the job based on regular intervals.",
                            "firstSentenceCommentText": "Triggers the job based on regular intervals."
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        cron('@daily')\n    }\n}\n"
                },
                {
                    "name": "gerrit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "gerrit-trigger"
                            },
                            "html": "Polls Gerrit for changes.",
                            "firstSentenceCommentText": "Polls Gerrit for changes.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GerritContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        gerrit {\n            events {\n                changeMerged()\n                draftPublished()\n            }\n            project('reg_exp:myProject', ['ant:feature-branch', 'plain:origin/refs/mybranch'])\n            project('test-project', '**')\n            buildSuccessful(10, null)\n        }\n    }\n}\n"
                },
                {
                    "name": "githubPush",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "github"
                            },
                            "html": "Trigger that runs jobs on push notifications from GitHub.\n     ",
                            "firstSentenceCommentText": "Trigger that runs jobs on push notifications from GitHub."
                        }
                    ],
                    "examples": "job('example-1') {\n    triggers {\n        githubPush()\n    }\n}\n"
                },
                {
                    "name": "pullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "ghprb"
                            },
                            "html": "Builds pull requests from GitHub and will report the results back to the pull request.\n\n The pull request builder plugin requires a special Git SCM configuration, see the plugin documentation for\n details.\n     ",
                            "firstSentenceCommentText": "Builds pull requests from GitHub and will report the results back to the pull request.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        git {\n            remote {\n                github('test-owner/test-project')\n                refspec('+refs/pull/*:refs/remotes/origin/pr/*')\n            }\n            branch('${sha1}')\n        }\n    }\n    triggers {\n        pullRequest {\n            admin('USER_ID')\n            userWhitelist('you@you.com')\n            orgWhitelist(['your_github_org', 'another_org'])\n            cron('H/5 * * * *')\n            triggerPhrase('Ok to test')\n            onlyTriggerPhrase()\n            useGitHubHooks()\n            permitAll()\n            autoCloseFailedPullRequests()\n            allowMembersOfWhitelistedOrgsAsAdmin()\n            extensions {\n                commitStatus {\n                    context('deploy to staging site')\n                    startedStatus('deploying to staging site...')\n                    completedStatus('SUCCESS', 'All is well')\n                    completedStatus('FAILURE', 'Something went wrong. Investigate!')\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "rundeck",
                                "minimumVersion": "3.4"
                            },
                            "html": "Allows to schedule a build on Jenkins after a job execution on RunDeck.\n     ",
                            "firstSentenceCommentText": "Allows to schedule a build on Jenkins after a job execution on RunDeck.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        rundeck {\n            jobIdentifiers('2027ce89-7924-4ecf-a963-30090ada834f',\n                    'my-project-name:main-group/sub-group/my-job')\n            executionStatuses('FAILED', 'ABORTED')\n        }\n    }\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                },
                                {
                                    "name": "scmTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Polls source control for changes at regular intervals.",
                            "firstSentenceCommentText": "Polls source control for changes at regular intervals.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    triggers {\n        scm('@daily')\n    }\n}\n\njob('example-2') {\n    triggers {\n        scm('@midnight') {\n            ignorePostCommitHooks()\n        }\n    }\n}\n"
                },
                {
                    "name": "upstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "threshold",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger.\n\n Possible thresholds are <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.\n     ",
                            "firstSentenceCommentText": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger."
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        upstream('other', 'UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "urlTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "crontab",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "urltrigger"
                            },
                            "html": "Adds DSL for adding and configuring the URL trigger plugin to a job.\n     ",
                            "firstSentenceCommentText": "Adds DSL for adding and configuring the URL trigger plugin to a job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        urlTrigger {\n            cron('* 0 * 0 *')\n            restrictToLabel('foo')\n\n            // simple configuration\n            url('http://www.example.com/foo/') {\n                proxy(true)\n                status(404)\n                timeout(4000)\n                check('status')\n                check('etag')\n                check('lastModified')\n            }\n\n            // Content inspection (MD5 hash)\n            url('http://www.example.com/bar/') {\n                inspection('change')\n            }\n\n            // content inspection for JSON content with detailed checking using JSONPath\n            url('http://www.example.com/baz/') {\n                inspection('json') {\n                    path('$.store.book[0].title')\n                }\n            }\n\n            // content inspection for text content with detailed checking using regular expressions\n            url('http://www.example.com/fubar/') {\n                inspection('text') {\n                    regexp(/_(foo|bar).+/)\n                }\n            }\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext",
            "methods": [
                {
                    "name": "glassfish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "port",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String"
                                }
                            ],
                            "html": "Allocates a GlassFish JMX port that lets Jenkins shut down a run-away GlassFish through JMX.\n\n For security reasons, do not use a hard-coded password. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Allocates a GlassFish JMX port that lets Jenkins shut down a run-away GlassFish through JMX."
                        }
                    ]
                },
                {
                    "name": "port",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "port",
                                    "type": "String"
                                },
                                {
                                    "name": "ports",
                                    "type": "String..."
                                }
                            ],
                            "html": "Allocates plain TCP ports.",
                            "firstSentenceCommentText": "Allocates plain TCP ports."
                        }
                    ]
                },
                {
                    "name": "tomcat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "port",
                                    "type": "String"
                                },
                                {
                                    "name": "password",
                                    "type": "String"
                                }
                            ],
                            "html": "Allocates a Tomcat shutdown port that lets Jenkins shut down a run-away Tomcat through the shut down port.\n\n For security reasons, do not use a hard-coded password. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.",
                            "firstSentenceCommentText": "Allocates a Tomcat shutdown port that lets Jenkins shut down a run-away Tomcat through the shut down port."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext",
            "methods": [
                {
                    "name": "targetLocation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targetLocation",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines where the file should be created on the slave.  If it is blank, a temporary file will be created.",
                            "firstSentenceCommentText": "Defines where the file should be created on the slave.  "
                        }
                    ]
                },
                {
                    "name": "variable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                }
                            ],
                            "html": "Allows to define an environment variable with which refers to the file location.",
                            "firstSentenceCommentText": "Allows to define an environment variable with which refers to the file location."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext",
            "methods": [
                {
                    "name": "custom",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "configFileClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Makes a custom file available to the build.\n     ",
                            "firstSentenceCommentText": "Makes a custom file available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext"
                        }
                    ]
                },
                {
                    "name": "file",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "configFileClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "An alias for <a href='#custom(java.lang.String, groovy.lang.Closure)'>custom</a>.\n     ",
                            "firstSentenceCommentText": "An alias for custom.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext"
                        }
                    ]
                },
                {
                    "name": "mavenSettings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "configFileClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Makes a Maven settings file available to the build.\n     ",
                            "firstSentenceCommentText": "Makes a Maven settings file available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFileContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext",
            "methods": [
                {
                    "name": "file",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "html": "Copies the file given in the credentials to a temporary location, then sets the variable to that location.",
                            "firstSentenceCommentText": "Copies the file given in the credentials to a temporary location, then sets the variable to that location."
                        }
                    ]
                },
                {
                    "name": "string",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a variable to the text given in the credentials.",
                            "firstSentenceCommentText": "Sets a variable to the text given in the credentials."
                        }
                    ]
                },
                {
                    "name": "usernamePassword",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a variable to the username and password given in the credentials, separated by a colon (:).",
                            "firstSentenceCommentText": "Sets a variable to the username and password given in the credentials, separated by a colon (:)."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "userVariableName",
                                    "type": "String"
                                },
                                {
                                    "name": "passwordVariableName",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "credentials-binding",
                                "minimumVersion": "1.3"
                            },
                            "html": "Sets one variable to the username and one variable to the password given in the credentials.\n     ",
                            "firstSentenceCommentText": "Sets one variable to the username and one variable to the password given in the credentials."
                        }
                    ]
                },
                {
                    "name": "zipFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "variable",
                                    "type": "String"
                                },
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "html": "Unpacks the ZIP file given in the credentials to a temporary directory, then sets the variable to that location.",
                            "firstSentenceCommentText": "Unpacks the ZIP file given in the credentials to a temporary directory, then sets the variable to that location."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext",
            "methods": [
                {
                    "name": "convertHomesToUppercase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "convertHomesToUppercase",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Converts <TT>#ToolName_HOME</TT> variables to the upper-case. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Converts #ToolName_HOME variables to the upper-case. "
                        }
                    ]
                },
                {
                    "name": "skipMasterInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "skipMasterInstallation",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Skips installation of tools at the matrix master job. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Skips installation of tools at the matrix master job. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext",
            "methods": [
                {
                    "name": "env",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "html": "Adds an environment variable to the build.",
                            "firstSentenceCommentText": "Adds an environment variable to the build."
                        }
                    ]
                },
                {
                    "name": "envs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<Object, Object>"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build."
                        }
                    ]
                },
                {
                    "name": "groovy",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30",
                            "html": "Evaluates a Groovy script and inject a map result. The groovy script must return a map Java object.\n     ",
                            "firstSentenceCommentText": "Evaluates a Groovy script and inject a map result. "
                        }
                    ]
                },
                {
                    "name": "propertiesFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertiesFilePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds environment variables from a properties file.",
                            "firstSentenceCommentText": "Adds environment variables from a properties file."
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "html": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on.",
                            "firstSentenceCommentText": "Executes a script aimed at setting an environment such as creating folders, copying files, and so on."
                        }
                    ]
                },
                {
                    "name": "scriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scriptFilePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on.",
                            "firstSentenceCommentText": "Executes a script file aimed at setting an environment such as create folders, copy files, and so on."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext",
            "methods": [
                {
                    "name": "delete",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "delete",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Deletes copied keychains after build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Deletes copied keychains after build. "
                        }
                    ]
                },
                {
                    "name": "keychain",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keychain",
                                    "type": "String"
                                },
                                {
                                    "name": "identity",
                                    "type": "String"
                                },
                                {
                                    "name": "prefix",
                                    "type": "String",
                                    "defaultValue": "''"
                                }
                            ],
                            "html": "Adds a keychain. Can be used multiple times to add more keychains.\n With a single keychain, the prefix is optional.",
                            "firstSentenceCommentText": "Adds a keychain. "
                        }
                    ]
                },
                {
                    "name": "overwrite",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overwrite",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Overwrites existing keychains. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Overwrites existing keychains. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext",
            "methods": [
                {
                    "name": "failBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Fails the build when the log size exceeds the maximum size. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails the build when the log size exceeds the maximum size. "
                        }
                    ]
                },
                {
                    "name": "maxSize",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "maxSize",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the maximum allowed size for the output log.",
                            "firstSentenceCommentText": "Sets the maximum allowed size for the output log."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext",
            "methods": [
                {
                    "name": "cleanupParameter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cleanupParameter",
                                    "type": "String"
                                }
                            ],
                            "html": "Set this field to a boolean environment variable and if the variables value is set to true than the workspace\n will be cleaned up.",
                            "firstSentenceCommentText": "Set this field to a boolean environment variable and if the variables value is set to true than the workspace\n will be cleaned up."
                        }
                    ]
                },
                {
                    "name": "deleteCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteCommand",
                                    "type": "String"
                                }
                            ],
                            "html": "If set, an external program will be used for deletion.",
                            "firstSentenceCommentText": "If set, an external program will be used for deletion."
                        }
                    ]
                },
                {
                    "name": "deleteDirectories",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "deleteDirectories",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, the pattern will also be applied to directories. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, the pattern will also be applied to directories. "
                        }
                    ]
                },
                {
                    "name": "excludePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be excluded from deletion using Ant syntax."
                        }
                    ]
                },
                {
                    "name": "includePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Makes cleanup more selective by specifying file to be deleted using Ant syntax.",
                            "firstSentenceCommentText": "Makes cleanup more selective by specifying file to be deleted using Ant syntax."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext",
            "methods": [
                {
                    "name": "failOnError",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "failOnError",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Fails the build when one of the steps fails. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Fails the build when one of the steps fails. "
                        }
                    ]
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to be run before SCM checkout.",
                            "firstSentenceCommentText": "Adds build steps to be run before SCM checkout.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext",
            "methods": [
                {
                    "name": "gems",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gems",
                                    "type": "String..."
                                }
                            ],
                            "html": "Specifies which gems should be pre-installed.",
                            "firstSentenceCommentText": "Specifies which gems should be pre-installed."
                        }
                    ]
                },
                {
                    "name": "ignoreLocalVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ignore",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Defaults to false."
                        }
                    ]
                },
                {
                    "name": "rbenvRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repository",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a rbenv git repository. Defaults to <TT>'https://github.com/sstephenson/rbenv.git'</TT>.",
                            "firstSentenceCommentText": "Specifies a rbenv git repository. "
                        }
                    ]
                },
                {
                    "name": "rbenvRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "revision",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a branch in the rbenv git repository. Defaults to <TT>'master'</TT>.",
                            "firstSentenceCommentText": "Specifies a branch in the rbenv git repository. "
                        }
                    ]
                },
                {
                    "name": "root",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "root",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the <TT>RBENV_ROOT</TT>. Defaults to <TT>'$HOME/.rbenv'</TT>.",
                            "firstSentenceCommentText": "Sets the RBENV_ROOT. "
                        }
                    ]
                },
                {
                    "name": "rubyBuildRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repository",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a ruby-build git repository. Defaults to <TT>'https://github.com/sstephenson/ruby-build.git'</TT>.",
                            "firstSentenceCommentText": "Specifies a ruby-build git repository. "
                        }
                    ]
                },
                {
                    "name": "rubyBuildRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "revision",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a branch in the ruby-build git repository. Defaults to <TT>'master'</TT>.",
                            "firstSentenceCommentText": "Specifies a branch in the ruby-build git repository. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>ReleaseWrapper</TT> node is passed into the configure\n block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "doNotKeepLog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "doNotKeepLog",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, release builds will not be automatically kept forever. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, release builds will not be automatically kept forever. "
                        }
                    ]
                },
                {
                    "name": "overrideBuildParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "overrideBuildParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, a release can override the build parameters.",
                            "firstSentenceCommentText": "If set, a release can override the build parameters."
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parametersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Add parameters for the release.",
                            "firstSentenceCommentText": "Add parameters for the release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ]
                },
                {
                    "name": "postBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to run after a successful or failed release.",
                            "firstSentenceCommentText": "Adds build steps to run after a successful or failed release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "postFailedBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to run after a failed release.",
                            "firstSentenceCommentText": "Adds build steps to run after a failed release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "postSuccessfulBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to run after a successful release.",
                            "firstSentenceCommentText": "Adds build steps to run after a successful release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "preBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to run before the release.",
                            "firstSentenceCommentText": "Adds build steps to run before the release.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ]
                },
                {
                    "name": "releaseVersionTemplate",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseVersionTemplate",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a template used to tell the release process how to formulate a release version string.",
                            "firstSentenceCommentText": "Sets a template used to tell the release process how to formulate a release version string."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext",
            "methods": [
                {
                    "name": "abortBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.30",
                            "plugin": {
                                "id": "build-timeout",
                                "minimumVersion": "1.13"
                            },
                            "html": "Aborts the build. This is a default operation performed if no operations are specified.\n     ",
                            "firstSentenceCommentText": "Aborts the build. "
                        }
                    ]
                },
                {
                    "name": "absolute",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "minutes",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.24",
                            "html": "Aborts the build based on a fixed time-out.\n     ",
                            "firstSentenceCommentText": "Aborts the build based on a fixed time-out."
                        }
                    ]
                },
                {
                    "name": "elastic",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "percentage",
                                    "type": "int",
                                    "defaultValue": "150"
                                },
                                {
                                    "name": "numberOfBuilds",
                                    "type": "int",
                                    "defaultValue": "3"
                                },
                                {
                                    "name": "minutesDefault",
                                    "type": "int",
                                    "defaultValue": "60"
                                }
                            ],
                            "availableSince": "1.24",
                            "html": "Defines time to wait before killing the build as a percentage of the mean of the duration of the last\n successful builds.\n     ",
                            "firstSentenceCommentText": "Defines time to wait before killing the build as a percentage of the mean of the duration of the last\n successful builds."
                        }
                    ]
                },
                {
                    "name": "failBuild",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.24",
                            "html": "Marked the build as failed.\n     ",
                            "firstSentenceCommentText": "Marked the build as failed."
                        }
                    ]
                },
                {
                    "name": "likelyStuck",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.24",
                            "html": "Uses a heuristics based approach to detect builds that are suspiciously running for a long time.\n     ",
                            "firstSentenceCommentText": "Uses a heuristics based approach to detect builds that are suspiciously running for a long time."
                        }
                    ]
                },
                {
                    "name": "noActivity",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "180"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "build-timeout",
                                "minimumVersion": "1.13"
                            },
                            "html": "Aborts the build when the specified seconds have passed since the last log output.\n     ",
                            "firstSentenceCommentText": "Aborts the build when the specified seconds have passed since the last log output."
                        }
                    ]
                },
                {
                    "name": "writeDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "html": "Sets the build description.\n     ",
                            "firstSentenceCommentText": "Sets the build description."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext",
            "methods": [
                {
                    "name": "assignedLabels",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "assignedLabels",
                                    "type": "String"
                                }
                            ],
                            "html": "Starts Xvfb only on nodes with the specified labels.",
                            "firstSentenceCommentText": "Starts Xvfb only on nodes with the specified labels."
                        }
                    ]
                },
                {
                    "name": "autoDisplayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "autoDisplayName",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Lets Xvfb choose the display number automatically. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Lets Xvfb choose the display number automatically. "
                        }
                    ]
                },
                {
                    "name": "debug",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "debug",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Redirects the output of Xvfb into the job log. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Redirects the output of Xvfb into the job log. "
                        }
                    ]
                },
                {
                    "name": "displayNameOffset",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayNameOffset",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies an offset to be added to the job's executor number which will form the display name. Defaults to 1.",
                            "firstSentenceCommentText": "Specifies an offset to be added to the job's executor number which will form the display name. "
                        }
                    ]
                },
                {
                    "name": "parallelBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "parallelBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, prevents collision when running multiple Jenkins nodes on the same machine. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, prevents collision when running multiple Jenkins nodes on the same machine. "
                        }
                    ]
                },
                {
                    "name": "screen",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "screen",
                                    "type": "String"
                                }
                            ],
                            "html": "Changes the screen resolution and pixel depth. Default to <TT>'1024x768x24'</TT>.",
                            "firstSentenceCommentText": "Changes the screen resolution and pixel depth. "
                        }
                    ]
                },
                {
                    "name": "shutdownWithBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shutdownWithBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Keeps Xvfb running for post build steps. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Keeps Xvfb running for post build steps. "
                        }
                    ]
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeout",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies the number of seconds to wait for Xvfb to start. Defaults to 0.",
                            "firstSentenceCommentText": "Specifies the number of seconds to wait for Xvfb to start. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext",
            "methods": [
                {
                    "name": "takeScreenshot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "takeScreenshot",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Takes a screenshot upon completion of the build. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Takes a screenshot upon completion of the build. "
                        }
                    ]
                },
                {
                    "name": "useXauthority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "useXauthority",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "plugin": {
                                "id": "xvnc",
                                "minimumVersion": "1.16"
                            },
                            "html": "Creates a dedicated Xauthority file per build. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Creates a dedicated Xauthority file per build. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext",
            "methods": [
                {
                    "name": "allocatePorts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "portsArg",
                                    "type": "String[]"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "port-allocator"
                            },
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "cl",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        }
                    ],
                    "examples": "// allocates two ports: one randomly assigned and accessible by env var $HTTP\n// the second is fixed and the port allocator controls concurrent usage\njob('example-1') {\n    wrappers {\n        allocatePorts('HTTP', '8080')\n    }\n}\n\n// allocates a GlassFish and a Tomcat port\njob('example-2') {\n    wrappers {\n        allocatePorts {\n            glassfish('1234', 'user', 'password')\n            tomcat('1234', 'password')\n        }\n    }\n}\n"
                },
                {
                    "name": "buildName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nameTemplate",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "build-name-setter"
                            },
                            "html": "Sets the display name of a build.\n     ",
                            "firstSentenceCommentText": "Sets the display name of a build."
                        }
                    ],
                    "examples": "// define the build name based on the build number and an environment variable\njob('example') {\n    wrappers {\n        buildName('#${BUILD_NUMBER} on ${ENV,var=\"BRANCH\"}')\n    }\n}\n"
                },
                {
                    "name": "buildUserVars",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "build-user-vars-plugin"
                            },
                            "html": "Adds a number of environment variables with information about the current user.\n     ",
                            "firstSentenceCommentText": "Adds a number of environment variables with information about the current user."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        buildUserVars()\n    }\n}\n"
                },
                {
                    "name": "colorizeOutput",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "colorMap",
                                    "type": "String",
                                    "defaultValue": "'xterm'"
                                }
                            ],
                            "plugin": {
                                "id": "ansicolor"
                            },
                            "html": "Renders ANSI escape sequences, including color, to console output.\n     ",
                            "firstSentenceCommentText": "Renders ANSI escape sequences, including color, to console output."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n    }\n}\n"
                },
                {
                    "name": "configFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configFilesClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Make globally configured files available to the build.\n     ",
                            "firstSentenceCommentText": "Make globally configured files available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        configFiles {\n            file('myCustomConfigFile') {\n                variable('CONFIG_FILE')\n            }\n            mavenSettings('myJenkinsSettingsFile') {\n                targetLocation('settings.xml')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "credentialsBinding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "credentials-binding"
                            },
                            "html": "Binds environment variables to credentials.\n     ",
                            "firstSentenceCommentText": "Binds environment variables to credentials.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        credentialsBinding {\n            file('KEYSTORE', 'keystore.jks')\n            usernamePassword('PASSWORD', 'keystore password')\n        }\n    }\n}\n"
                },
                {
                    "name": "customTools",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.30",
                            "plugin": {
                                "id": "custom-tools-plugin"
                            },
                            "html": "Installs custom tools.\n     ",
                            "firstSentenceCommentText": "Installs custom tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        customTools(['NodeJS', 'figlet']) {\n            skipMasterInstallation()\n        }\n    }\n}\n"
                },
                {
                    "name": "deliveryPipelineVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "template",
                                    "type": "String"
                                },
                                {
                                    "name": "setDisplayName",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Creates a pipeline version based on the template and optionally sets that version as display name for the build.\n     ",
                            "firstSentenceCommentText": "Creates a pipeline version based on the template and optionally sets that version as display name for the build."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        deliveryPipelineVersion('1.0.${BUILD_NUMBER}', true)\n    }\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Injects environment variables into the build.\n     ",
                            "firstSentenceCommentText": "Injects environment variables into the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        environmentVariables {\n            env('ONE', '1')\n            envs(FOO: 'bar', TEST: '123')\n            propertiesFile('env.properties')\n        }\n    }\n}\n"
                },
                {
                    "name": "exclusionResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "String..."
                                }
                            ],
                            "availableSince": "1.24",
                            "html": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "Exclusion"
                            },
                            "html": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        exclusionResources('first', 'second')\n    }\n    steps {\n        criticalBlock {\n            shell('echo Hello World!')\n        }\n    }\n}\n"
                },
                {
                    "name": "golang",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "golang"
                            },
                            "html": "Sets up a Go environment.\n     ",
                            "firstSentenceCommentText": "Sets up a Go environment."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        golang('Go 1.3.3')\n    }\n}\n"
                },
                {
                    "name": "injectPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Injects globally defined passwords as environment variables into the job.\n     ",
                            "firstSentenceCommentText": "Injects globally defined passwords as environment variables into the job."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        injectPasswords()\n    }\n}\n"
                },
                {
                    "name": "keychains",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keychainsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "kpp-management-plugin"
                            },
                            "html": "Configures keychains for the build.\n     ",
                            "firstSentenceCommentText": "Configures keychains for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        keychains {\n            keychain('test1', 'test2')\n            delete()\n            overwrite()\n        }\n    }\n}\n"
                },
                {
                    "name": "logSizeChecker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "logfilesizechecker"
                            },
                            "html": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.\n     ",
                            "firstSentenceCommentText": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext"
                        }
                    ],
                    "examples": "// default configuration using the system wide definition\njob('example-1') {\n    wrappers {\n        logSizeChecker()\n    }\n}\n\n// using job specific configuration, setting the max log size to 10 MB and fail the build of the log file is larger.\njob('example-2') {\n    wrappers {\n        logSizeChecker {\n            maxSize(10)\n            failBuild()\n        }\n    }\n}\n"
                },
                {
                    "name": "maskPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "mask-passwords"
                            },
                            "html": "Masks the passwords that occur in the console output.\n     ",
                            "firstSentenceCommentText": "Masks the passwords that occur in the console output."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        maskPasswords()\n    }\n}\n"
                },
                {
                    "name": "nodejs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "nodejs"
                            },
                            "html": "Sets up a NodeJS environment.\n     ",
                            "firstSentenceCommentText": "Sets up a NodeJS environment."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        nodejs('NodeJS 0.10.26')\n    }\n}\n"
                },
                {
                    "name": "preBuildCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "ws-cleanup"
                            },
                            "html": "Deletes files from the workspace before the build starts.\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace before the build starts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext"
                        }
                    ],
                    "examples": "// cleanup all files\njob('example-1') {\n    wrappers {\n        preBuildCleanup()\n    }\n}\n\n// cleanup all files and directories in target directories, but only if the CLEANUP build parameter is set to 'true'\njob('example-2') {\n    wrappers {\n        preBuildCleanup {\n            includePattern('**/target/**')\n            deleteDirectories()\n            cleanupParameter('CLEANUP')\n        }\n    }\n}\n"
                },
                {
                    "name": "preScmSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "preSCMbuildstep"
                            },
                            "html": "Allows to run build steps before SCM checkout.\n     ",
                            "firstSentenceCommentText": "Allows to run build steps before SCM checkout.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        preScmSteps {\n            steps {\n                shell('echo Hello World')\n            }\n            failOnError()\n        }\n    }\n}\n"
                },
                {
                    "name": "rbenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubyVersion",
                                    "type": "String"
                                },
                                {
                                    "name": "rbenvClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "rbenv"
                            },
                            "html": "Specifies the rbenv wrapper to be used during job execution.\n     ",
                            "firstSentenceCommentText": "Specifies the rbenv wrapper to be used during job execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        rbenv('2.1.2') {\n            ignoreLocalVersion()\n            gems('bundler', 'rake')\n        }\n    }\n}\n"
                },
                {
                    "name": "release",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "release"
                            },
                            "html": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.\n     ",
                            "firstSentenceCommentText": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        release {\n            doNotKeepLog()\n            overrideBuildParameters()\n            parameters {\n                booleanParam('param', false, 'some boolean build parameter')\n            }\n            preBuildSteps {\n                shell(\"echo 'hello'\")\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "runOnSameNodeAs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "useSameWorkspace",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "plugin": {
                                "id": "job-node-stalker"
                            },
                            "html": "Build the job on the same node as another job and optionally use the same workspace as the other job.\n     ",
                            "firstSentenceCommentText": "Build the job on the same node as another job and optionally use the same workspace as the other job."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        runOnSameNodeAs('project-a', true)\n    }\n}\n"
                },
                {
                    "name": "rvm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubySpecification",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "rvm"
                            },
                            "html": "Configures the job to prepare a Ruby environment controlled by RVM for the build.\n     ",
                            "firstSentenceCommentText": "Configures the job to prepare a Ruby environment controlled by RVM for the build."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        rvm('ruby-1.9.3')\n    }\n}\n"
                },
                {
                    "name": "sshAgent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "ssh-agent"
                            },
                            "html": "Provide SSH credentials to builds via a ssh-agent in Jenkins.\n     ",
                            "firstSentenceCommentText": "Provide SSH credentials to builds via a ssh-agent in Jenkins."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        sshAgent('deployment-key')\n    }\n}\n"
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeoutClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "build-timeout",
                                "minimumVersion": "1.12"
                            },
                            "html": "Add a timeout to the build job.\n\n Defaults to a absolute timeout with a maximum build time of 3 minutes.\n     ",
                            "firstSentenceCommentText": "Add a timeout to the build job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext"
                        }
                    ],
                    "examples": "// defines an absolute timeout with a maximum build time of 3 minutes\njob('example-1') {\n    wrappers {\n        timeout()\n    }\n}\n\n// defines an absolute timeout with a maximum build time of one hour\njob('example-2') {\n    wrappers {\n        timeout {\n            absolute(60)\n        }\n    }\n}\n\n// the build will timeout when it take 3 times longer than the reference build duration of the last 3 builds\n// use a 30 minutes timeout when no successful builds available as reference\njob('example-3') {\n    wrappers {\n        timeout {\n            elastic(300, 3, 30)\n        }\n    }\n}\n\n// abort when the build is likely to be stuck\njob('example-4') {\n    wrappers {\n        timeout {\n            likelyStuck()\n        }\n    }\n}\n\n// timeout if there has been no activity for 180 seconds\n// then fail the build and set a build description\njob('example-5') {\n    wrappers {\n        timeout {\n            noActivity(180)\n            failBuild()\n            writeDescription('Build failed due to timeout after {0} minutes')\n        }\n    }\n}\n"
                },
                {
                    "name": "timestamps",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "timestamper"
                            },
                            "html": "Adds timestamps to the console log.",
                            "firstSentenceCommentText": "Adds timestamps to the console log."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        timestamps()\n    }\n}\n"
                },
                {
                    "name": "toolenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "String..."
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "toolenv"
                            },
                            "html": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment.\n     ",
                            "firstSentenceCommentText": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        toolenv('Ant 1.8.2', 'Maven 3.1')\n    }\n}\n"
                },
                {
                    "name": "xvfb",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "xvfb"
                            },
                            "html": "Controls the Xvfb virtual frame buffer X11 server.\n     ",
                            "firstSentenceCommentText": "Controls the Xvfb virtual frame buffer X11 server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        xvfb('default') {\n            screen('1920x1080x24')\n        }\n    }\n}\n"
                },
                {
                    "name": "xvnc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xvncClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "xvnc"
                            },
                            "html": "Run a Xvnc session during a build.\n     ",
                            "firstSentenceCommentText": "Run a Xvnc session during a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        xvnc {\n            takeScreenshot()\n            useXauthority(false)\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.BuildFlowJob": {
            "type": "javaposse.jobdsl.dsl.jobs.BuildFlowJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "buildFlow",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "buildFlowText",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the build flow DSL script.\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read DSL scripts from\n files.",
                            "firstSentenceCommentText": "Sets the build flow DSL script.\n "
                        }
                    ],
                    "examples": "// triple-quotes can be used for inline flow DSL definition\nbuildFlowJob('example-1') {\n    buildFlow('''\n        build(\"job1\")\n    ''')\n}\n\n// the build flow text can also be read from a file\nbuildFlowJob('example-2') {\n    buildFlow(readFileFromWorkspace('my-build-flow-text.groovy'))\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildFlowPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        shell('echo START')\n        gradle('check')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.jobfilter.RegexFilter": {
            "type": "javaposse.jobdsl.dsl.views.jobfilter.RegexFilter",
            "methods": [
                {
                    "name": "matchType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "matchType",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.MatchType",
                                    "enumConstants": [
                                        "INCLUDE_MATCHED",
                                        "INCLUDE_UNMATCHED",
                                        "EXCLUDE_MATCHED",
                                        "EXCLUDE_UNMATCHED"
                                    ]
                                }
                            ],
                            "html": "Specifies whether the filter includes or excludes jobs from the view. Defaults to\n <TT>MatchType.INCLUDE_MATCHED</TT>.",
                            "firstSentenceCommentText": "Specifies whether the filter includes or excludes jobs from the view. "
                        }
                    ]
                },
                {
                    "name": "matchValue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.RegexMatchValue",
                                    "enumConstants": [
                                        "NAME",
                                        "DESCRIPTION",
                                        "SCM",
                                        "EMAIL",
                                        "MAVEN",
                                        "SCHEDULE",
                                        "NODE"
                                    ]
                                }
                            ],
                            "html": "Selects the value to be matched. Defaults to <TT>RegexMatchValue.NAME</TT>.",
                            "firstSentenceCommentText": "Selects the value to be matched. "
                        }
                    ]
                },
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the regular expression used for filtering the selected value.",
                            "firstSentenceCommentText": "Sets the regular expression used for filtering the selected value."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.jobfilter.JobStatusesFilter": {
            "type": "javaposse.jobdsl.dsl.views.jobfilter.JobStatusesFilter",
            "methods": [
                {
                    "name": "matchType",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "matchType",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.MatchType",
                                    "enumConstants": [
                                        "INCLUDE_MATCHED",
                                        "INCLUDE_UNMATCHED",
                                        "EXCLUDE_MATCHED",
                                        "EXCLUDE_UNMATCHED"
                                    ]
                                }
                            ],
                            "html": "Specifies whether the filter includes or excludes jobs from the view. Defaults to\n <TT>MatchType.INCLUDE_MATCHED</TT>.",
                            "firstSentenceCommentText": "Specifies whether the filter includes or excludes jobs from the view. "
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "status",
                                    "type": "javaposse.jobdsl.dsl.views.jobfilter.Status..."
                                }
                            ],
                            "html": "Selects the status of the jobs to be included or excluded.",
                            "firstSentenceCommentText": "Selects the status of the jobs to be included or excluded."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.JobFiltersContext": {
            "type": "javaposse.jobdsl.dsl.views.JobFiltersContext",
            "methods": [
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regexFilterClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a regular expression filter.",
                            "firstSentenceCommentText": "Adds a regular expression filter.",
                            "contextClass": "javaposse.jobdsl.dsl.views.jobfilter.RegexFilter"
                        }
                    ],
                    "examples": "listView('example') {\n    jobFilters {\n        regex {\n            matchType(MatchType.EXCLUDE_MATCHED)\n            matchValue(RegexMatchValue.DESCRIPTION)\n            regex('.*project-a.*')\n        }\n    }\n}\n"
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "statusesFilterClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a job status filter.",
                            "firstSentenceCommentText": "Adds a job status filter.",
                            "contextClass": "javaposse.jobdsl.dsl.views.jobfilter.JobStatusesFilter"
                        }
                    ],
                    "examples": "listView('example') {\n    jobFilters {\n        status {\n            matchType(MatchType.INCLUDE_MATCHED)\n            status(Status.FAILED)\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.JobsContext": {
            "type": "javaposse.jobdsl.dsl.views.JobsContext",
            "methods": [
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds jobs to the view. Can be called multiple times to added more jobs.",
                            "firstSentenceCommentText": "Adds jobs to the view. "
                        }
                    ],
                    "examples": "listView('example') {\n    jobs {\n        name('build')\n        name('test')\n    }\n}\n"
                },
                {
                    "name": "names",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobNames",
                                    "type": "String..."
                                }
                            ],
                            "html": "Adds jobs to the view. Can be called multiple times to added more jobs.",
                            "firstSentenceCommentText": "Adds jobs to the view. "
                        }
                    ],
                    "examples": "listView('example') {\n    jobs {\n        names('build', 'test')\n    }\n}\n"
                },
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "html": "If configured, the regular expression will be applied to all job names. Those that match the regular expression\n will be shown in the view.",
                            "firstSentenceCommentText": "If configured, the regular expression will be applied to all job names. "
                        }
                    ],
                    "examples": "listView('example') {\n    jobs {\n        regex('project-A-.+')\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.BuildMonitorView": {
            "type": "javaposse.jobdsl.dsl.views.BuildMonitorView",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "buildMonitorView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "buildMonitorView('project-a') {\n    description('View for project A')\n}\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "buildMonitorView('example') {\n    filterBuildQueue()\n}\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ],
                    "examples": "buildMonitorView('example') {\n    filterExecutors()\n}\n"
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ],
                    "examples": "buildMonitorView('example') {\n    jobFilters {\n        regex {\n            matchType(MatchType.EXCLUDE_MATCHED)\n            matchValue(RegexMatchValue.DESCRIPTION)\n            regex('.*project-a.*')\n        }\n        status {\n            matchType(MatchType.INCLUDE_MATCHED)\n            status(Status.FAILED)\n        }\n    }\n}\n"
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds jobs to the view.",
                            "firstSentenceCommentText": "Adds jobs to the view.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ],
                    "examples": "buildMonitorView('example') {\n    jobs {\n        name('build')\n        name('test')\n        names('compile', 'deploy')\n        regex('project-A-.+')\n    }\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "recurse",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldRecurse",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "If set to <TT>true</TT>, jobs from sub-folders will be shown.\n Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "If set to true, jobs from sub-folders will be shown.\n "
                        }
                    ],
                    "examples": "buildMonitorView('project-A') {\n    recurse()\n}\n"
                },
                {
                    "name": "statusFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "javaposse.jobdsl.dsl.views.ListView.StatusFilter",
                                    "enumConstants": [
                                        "ALL",
                                        "ENABLED",
                                        "DISABLED"
                                    ]
                                }
                            ],
                            "html": "Filter the job list by enabled/disabled status. Defaults to <TT>StatusFilter.ALL</TT>.",
                            "firstSentenceCommentText": "Filter the job list by enabled/disabled status. "
                        }
                    ],
                    "examples": "buildMonitorView('project-A') {\n    statusFilter(StatusFilter.ENABLED)\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.BuildPipelineView": {
            "type": "javaposse.jobdsl.dsl.views.BuildPipelineView",
            "methods": [
                {
                    "name": "alwaysAllowManualTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alwaysAllowManualTrigger",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Use this method if you want to be able to execute a successful pipeline step again. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to be able to execute a successful pipeline step again. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    alwaysAllowManualTrigger()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "consoleOutputLinkStyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "outputStyle",
                                    "type": "javaposse.jobdsl.dsl.views.BuildPipelineView.OutputStyle",
                                    "enumConstants": [
                                        "Lightbox",
                                        "NewWindow",
                                        "ThisWindow"
                                    ]
                                }
                            ],
                            "html": "Defines the console output style. Defaults to <TT>OutputStyle.Lightbox</TT>.",
                            "firstSentenceCommentText": "Defines the console output style. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    consoleOutputLinkStyle(OutputStyle.Lightbox)\n}\n"
                },
                {
                    "name": "customCssUrl",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "customCssUrl",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a URL for custom CSS files.",
                            "firstSentenceCommentText": "Sets a URL for custom CSS files."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    customCssUrl('url/to/custom/css/files')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "buildPipelineView('project-a') {\n    description('View for project A')\n}\n"
                },
                {
                    "name": "displayedBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayedBuilds",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets number of displayed builds. Defaults to 1 and must be greater than zero.",
                            "firstSentenceCommentText": "Sets number of displayed builds. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    displayedBuilds(5)\n}\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    filterBuildQueue()\n}\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    filterExecutors()\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "refreshFrequency",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "refreshFrequency",
                                    "type": "int"
                                }
                            ],
                            "html": "Frequency at which the Build Pipeline Plugin updates the build cards in seconds. Defaults to 3.",
                            "firstSentenceCommentText": "Frequency at which the Build Pipeline Plugin updates the build cards in seconds. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    refreshFrequency(60)\n}\n"
                },
                {
                    "name": "selectedJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectedJob",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines the first job in the pipeline.",
                            "firstSentenceCommentText": "Defines the first job in the pipeline."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    selectedJob('project-a-compile')\n}\n"
                },
                {
                    "name": "showPipelineDefinitionHeader",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showPipelineDefinitionHeader",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Use this method if you want to show the pipeline definition header in the pipeline view. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to show the pipeline definition header in the pipeline view. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    showPipelineDefinitionHeader()\n}\n"
                },
                {
                    "name": "showPipelineParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showPipelineParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Use this method if you want to display the parameters used to run the first job in each pipeline's revision box.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to display the parameters used to run the first job in each pipeline's revision box.\n "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    showPipelineParameters()\n}\n"
                },
                {
                    "name": "showPipelineParametersInHeaders",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "showPipelineParametersInHeaders",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Use this method if you want to display the parameters used to run the latest successful job in the pipeline's\n project headers. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method if you want to display the parameters used to run the latest successful job in the pipeline's\n project headers. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    showPipelineParametersInHeaders()\n}\n"
                },
                {
                    "name": "startsWithParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "startsWithParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "build-pipeline-plugin",
                                "minimumVersion": "1.4.3"
                            },
                            "html": "Use this method if you want toggle the \"Pipeline starts with parameters\" option in the pipeline view\n configuration. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Use this method if you want toggle the \"Pipeline starts with parameters\" option in the pipeline view\n configuration. "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    startsWithParameters()\n}\n"
                },
                {
                    "name": "title",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "title",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a title for the pipeline.",
                            "firstSentenceCommentText": "Sets a title for the pipeline."
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    title('Project A CI Pipeline')\n}\n"
                },
                {
                    "name": "triggerOnlyLatestJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "triggerOnlyLatestJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Use this method to restrict the display of a trigger button to only the most recent successful build pipelines.\n This option will also limit retries to just unsuccessful builds of the most recent build pipelines. Defaults to\n <TT>false</TT>.",
                            "firstSentenceCommentText": "Use this method to restrict the display of a trigger button to only the most recent successful build pipelines.\n "
                        }
                    ],
                    "examples": "buildPipelineView('example') {\n    triggerOnlyLatestJob()\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.CategorizationCriteriaContext": {
            "type": "javaposse.jobdsl.dsl.views.CategorizationCriteriaContext",
            "methods": [
                {
                    "name": "regexGroupingRule",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "groupRegex",
                                    "type": "String"
                                },
                                {
                                    "name": "namingRule",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a rule to build groups of jobs that will be categorized by using a regular expression.",
                            "firstSentenceCommentText": "Adds a rule to build groups of jobs that will be categorized by using a regular expression."
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    categorizationCriteria {\n        regexGroupingRule(/^configuration_([^_]+).*$/)\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.ColumnsContext": {
            "type": "javaposse.jobdsl.dsl.views.ColumnsContext",
            "methods": [
                {
                    "name": "buildButton",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing a button for scheduling a build.",
                            "firstSentenceCommentText": "Adds a column showing a button for scheduling a build."
                        }
                    ]
                },
                {
                    "name": "categorizedJob",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "categorized-view",
                                "minimumVersion": "1.8"
                            },
                            "html": "Adds a column for showing a job's category.\n     ",
                            "firstSentenceCommentText": "Adds a column for showing a job's category."
                        }
                    ]
                },
                {
                    "name": "claim",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.29",
                            "plugin": {
                                "id": "claim"
                            },
                            "html": "Adds a column for showing that a build has been claimed.\n     ",
                            "firstSentenceCommentText": "Adds a column for showing that a build has been claimed."
                        }
                    ]
                },
                {
                    "name": "configureProject",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "extra-columns"
                            },
                            "html": "Adds a column showing a button for opening the item's configuration.\n     ",
                            "firstSentenceCommentText": "Adds a column showing a button for opening the item's configuration."
                        }
                    ]
                },
                {
                    "name": "customIcon",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "custom-job-icon",
                                "minimumVersion": "0.2"
                            },
                            "html": "Adds a column showing a custom icon.\n     ",
                            "firstSentenceCommentText": "Adds a column showing a custom icon."
                        }
                    ]
                },
                {
                    "name": "lastBuildConsole",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "extra-columns"
                            },
                            "html": "Adds a column showing a button for opening the console output.\n     ",
                            "firstSentenceCommentText": "Adds a column showing a button for opening the console output."
                        }
                    ]
                },
                {
                    "name": "lastBuildNode",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "build-node-column",
                                "minimumVersion": "0.1"
                            },
                            "html": "Adds a column for showing the node which executed the last build.\n     ",
                            "firstSentenceCommentText": "Adds a column for showing the node which executed the last build."
                        }
                    ]
                },
                {
                    "name": "lastDuration",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing the duration of the last build.",
                            "firstSentenceCommentText": "Adds a column showing the duration of the last build."
                        }
                    ]
                },
                {
                    "name": "lastFailure",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing the last failed build.",
                            "firstSentenceCommentText": "Adds a column showing the last failed build."
                        }
                    ]
                },
                {
                    "name": "lastSuccess",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing the last successful build.",
                            "firstSentenceCommentText": "Adds a column showing the last successful build."
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing the item name.",
                            "firstSentenceCommentText": "Adds a column showing the item name."
                        }
                    ]
                },
                {
                    "name": "robotResults",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "robot",
                                "minimumVersion": "1.6.0"
                            },
                            "html": "Adds a column for showing Robot Framework test results.\n     ",
                            "firstSentenceCommentText": "Adds a column for showing Robot Framework test results."
                        }
                    ]
                },
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing the status of the last build.",
                            "firstSentenceCommentText": "Adds a column showing the status of the last build."
                        }
                    ]
                },
                {
                    "name": "weather",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a weather report showing the aggregated status of recent builds.",
                            "firstSentenceCommentText": "Adds a weather report showing the aggregated status of recent builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.CategorizedJobsView": {
            "type": "javaposse.jobdsl.dsl.views.CategorizedJobsView",
            "methods": [
                {
                    "name": "categorizationCriteria",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "categorizationCriteriaClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds grouping rules.",
                            "firstSentenceCommentText": "Adds grouping rules.",
                            "contextClass": "javaposse.jobdsl.dsl.views.CategorizationCriteriaContext"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    categorizationCriteria {\n        regexGroupingRule(/^configuration_([^_]+).*$/)\n    }\n}\n"
                },
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.ColumnsContext"
                        }
                    ],
                    "examples": "categorizedJobsView('project-A') {\n    columns {\n        status()\n        weather()\n        name()\n        lastSuccess()\n        lastFailure()\n        lastDuration()\n        buildButton()\n    }\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "categorizedJobsView('project-a') {\n    description('View for project A')\n}\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    filterBuildQueue()\n}\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    filterExecutors()\n}\n"
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    jobFilters {\n        regex {\n            matchType(MatchType.EXCLUDE_MATCHED)\n            matchValue(RegexMatchValue.DESCRIPTION)\n            regex('.*project-a.*')\n        }\n        status {\n            matchType(MatchType.INCLUDE_MATCHED)\n            status(Status.FAILED)\n        }\n    }\n}\n"
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds jobs to the view.",
                            "firstSentenceCommentText": "Adds jobs to the view.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    jobs {\n        name('build')\n        name('test')\n        names('compile', 'deploy')\n        regex('project-A-.+')\n    }\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "recurse",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldRecurse",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "If set to <TT>true</TT>, jobs from sub-folders will be shown.\n Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "If set to true, jobs from sub-folders will be shown.\n "
                        }
                    ],
                    "examples": "categorizedJobsView('project-A') {\n    recurse()\n}\n"
                },
                {
                    "name": "statusFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "javaposse.jobdsl.dsl.views.ListView.StatusFilter",
                                    "enumConstants": [
                                        "ALL",
                                        "ENABLED",
                                        "DISABLED"
                                    ]
                                }
                            ],
                            "html": "Filter the job list by enabled/disabled status. Defaults to <TT>StatusFilter.ALL</TT>.",
                            "firstSentenceCommentText": "Filter the job list by enabled/disabled status. "
                        }
                    ],
                    "examples": "categorizedJobsView('project-A') {\n    statusFilter(StatusFilter.ENABLED)\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.ConfigFile": {
            "type": "javaposse.jobdsl.dsl.ConfigFile",
            "methods": [
                {
                    "name": "comment",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "comment",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a comment for the config file.",
                            "firstSentenceCommentText": "Sets a comment for the config file."
                        }
                    ]
                },
                {
                    "name": "content",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "content",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the content for the config file. Use <a href='../../../DslFactory.html#readFileFromWorkspace(java.lang.String)' title='DslFactory.readFileFromWorkspace'>DslFactory.readFileFromWorkspace</a> to read the\n content from a file.",
                            "firstSentenceCommentText": "Sets the content for the config file. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.DeliveryPipelinesContext": {
            "type": "javaposse.jobdsl.dsl.views.DeliveryPipelinesContext",
            "methods": [
                {
                    "name": "component",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "initialJobName",
                                    "type": "String"
                                }
                            ],
                            "html": "Add a pipeline by specifying name and start job.",
                            "firstSentenceCommentText": "Add a pipeline by specifying name and start job."
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    pipelines {\n        component('Sub System A', 'compile-a')\n        component('Sub System B', 'compile-b')\n    }\n}\n"
                },
                {
                    "name": "regex",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "html": "Add a pipeline by specifying a regular expression.",
                            "firstSentenceCommentText": "Add a pipeline by specifying a regular expression."
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    pipelines {\n        regex(/compile-(.*)/)\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.DeliveryPipelineView": {
            "type": "javaposse.jobdsl.dsl.views.DeliveryPipelineView",
            "methods": [
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "number",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the number of columns used for showing pipelines. Defaults to 1.",
                            "firstSentenceCommentText": "Sets the number of columns used for showing pipelines. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    columns(2)\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "enableManualTriggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Show a button if a task is manual. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show a button if a task is manual. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    enableManualTriggers()\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "pipelineInstances",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "number",
                                    "type": "int"
                                }
                            ],
                            "html": "Sets the number of pipelines instances shown for each pipeline. Defaults to 3.",
                            "firstSentenceCommentText": "Sets the number of pipelines instances shown for each pipeline. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "pipelines",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pipelinesClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Defines pipelines by either specifying names and start jobs or by regular expressions. Both variants can be\n called multiple times to add different pipelines to the view.",
                            "firstSentenceCommentText": "Defines pipelines by either specifying names and start jobs or by regular expressions. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.DeliveryPipelinesContext"
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    pipelines {\n        component('Sub System A', 'compile-a')\n        component('Sub System B', 'compile-b')\n        regex(/compile-(.*)/)\n    }\n}\n"
                },
                {
                    "name": "showAggregatedPipeline",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Show a aggregated view where each stage shows the latest version being executed. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show a aggregated view where each stage shows the latest version being executed. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    showAggregatedPipeline()\n}\n"
                },
                {
                    "name": "showAvatars",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Show avatar pictures instead of user names. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show avatar pictures instead of user names. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    showAvatars()\n}\n"
                },
                {
                    "name": "showChangeLog",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Show SCM change log for the first job in the pipeline. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Show SCM change log for the first job in the pipeline. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    showChangeLog()\n}\n"
                },
                {
                    "name": "sorting",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sorting",
                                    "type": "javaposse.jobdsl.dsl.views.DeliveryPipelineView.Sorting",
                                    "enumConstants": [
                                        "NONE",
                                        "TITLE",
                                        "LAST_ACTIVITY"
                                    ]
                                }
                            ],
                            "html": "Specifies how to sort the pipeline in the view, only applicable for several pipelines. Defaults to\n <TT>Sorting.NONE</TT>.",
                            "firstSentenceCommentText": "Specifies how to sort the pipeline in the view, only applicable for several pipelines. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    sorting(Sorting.TITLE)\n}\n"
                },
                {
                    "name": "updateInterval",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int"
                                }
                            ],
                            "html": "Specifies how often the view will be updated. Defaults to 2.",
                            "firstSentenceCommentText": "Specifies how often the view will be updated. "
                        }
                    ],
                    "examples": "deliveryPipelineView('example') {\n    updateInterval(60)\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.AuthorizationContext": {
            "type": "javaposse.jobdsl.dsl.helpers.AuthorizationContext",
            "methods": [
                {
                    "name": "permission",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a specific permission.\n     ",
                            "firstSentenceCommentText": "Adds a specific permission."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "permission",
                                    "type": "String"
                                },
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds a specific permission, but breaks apart the permission from the user name.",
                            "firstSentenceCommentText": "Adds a specific permission, but breaks apart the permission from the user name."
                        }
                    ]
                },
                {
                    "name": "permissionAll",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "user",
                                    "type": "String"
                                }
                            ],
                            "html": "Adds all available permissions for the user.",
                            "firstSentenceCommentText": "Adds all available permissions for the user."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.Folder": {
            "type": "javaposse.jobdsl.dsl.Folder",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "Creates permission records.\n     ",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.AuthorizationContext"
                        }
                    ],
                    "examples": "// gives permission for the special authenticated group to create jobs in the folder\nfolder('example-1') {\n    authorization {\n        permission('hudson.model.Item.Create:authenticated')\n    }\n}\n\n// gives discover permission for the special anonymous user\nfolder('example-2') {\n    authorization {\n        permission('hudson.model.Item.Discover', 'anonymous')\n    }\n}\n\n// gives all permissions to the special anonymous user\nfolder('example-3') {\n    authorization {\n        permissionAll('anonymous')\n    }\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "folder('example-2') {\n    configure { folder ->\n        folder / icon(class: 'org.example.MyFolderIcon')\n    }\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the folder.",
                            "firstSentenceCommentText": "Sets a description for the folder."
                        }
                    ],
                    "examples": "folder('project-a') {\n    description('Folder for project A')\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name to display instead of the actual folder name.",
                            "firstSentenceCommentText": "Sets the name to display instead of the actual folder name."
                        }
                    ],
                    "examples": "folder('project-a') {\n    displayName('Project A')\n}\n"
                },
                {
                    "name": "primaryView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "primaryViewArg",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.36",
                            "html": "Changes the initial view to show when the folder contains multiple views. Defaults to the <TT>'All'</TT> view.\n     ",
                            "firstSentenceCommentText": "Changes the initial view to show when the folder contains multiple views. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.FreeStyleJob": {
            "type": "javaposse.jobdsl.dsl.jobs.FreeStyleJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        shell('echo START')\n        gradle('check')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.IvyBuilderContext": {
            "type": "javaposse.jobdsl.dsl.helpers.IvyBuilderContext",
            "methods": [
                {
                    "name": "ant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "ant",
                                "minimumVersion": "1.2"
                            },
                            "html": "Uses Ant for building the modules.",
                            "firstSentenceCommentText": "Uses Ant for building the modules.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivyBuilder {\n        ant {\n            target('clean')\n            targets(['test', 'publish'])\n            buildFile('build.xml')\n            antInstallation('Ant 1.9')\n            prop('key', 'value')\n            javaOpt('-Xmx=1G')\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.IvyJob": {
            "type": "javaposse.jobdsl.dsl.jobs.IvyJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "incrementalBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "incrementalBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Specifies if only modules with changes or those modules which failed or were\n unstable in the previous build should be triggered.\n     ",
                            "firstSentenceCommentText": "Specifies if only modules with changes or those modules which failed or were\n unstable in the previous build should be triggered."
                        }
                    ]
                },
                {
                    "name": "ivyBranch",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivyBranch",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the default Ivy branch name for this module/set of modules.\n     ",
                            "firstSentenceCommentText": "Specifies the default Ivy branch name for this module/set of modules."
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivyBranch('myproduct/1.2')\n}\n"
                },
                {
                    "name": "ivyBuilder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Sets the Ivy builder type to use for building the modules. Only one builder may be specified.",
                            "firstSentenceCommentText": "Sets the Ivy builder type to use for building the modules. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.IvyBuilderContext"
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivyBuilder {\n        ant {\n            target('clean')\n            targets(['test', 'publish'])\n            buildFile('build.xml')\n            antInstallation('Ant 1.9')\n            prop('key', 'value')\n            javaOpt('-Xmx=1G')\n        }\n    }\n}\n"
                },
                {
                    "name": "ivyFileExcludesPattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivyFileExcludesPattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies modules to be excluded from the build using Ant-include pattern syntax.\n     ",
                            "firstSentenceCommentText": "Specifies modules to be excluded from the build using Ant-include pattern syntax."
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivyFileExcludesPattern('moduleX/**,moduleZ/**')\n}\n"
                },
                {
                    "name": "ivyFilePattern",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivyFilePattern",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the pattern to use to search for ivy module descriptor files (usually\n named ivy.xml) in this project.\n     ",
                            "firstSentenceCommentText": "Specifies the pattern to use to search for ivy module descriptor files (usually\n named ivy.xml) in this project."
                        }
                    ]
                },
                {
                    "name": "ivySettingsFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivySettingsFile",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies a custom Ivy settings file to be used when parsing Ivy module descriptors.\n     ",
                            "firstSentenceCommentText": "Specifies a custom Ivy settings file to be used when parsing Ivy module descriptors."
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivySettingsFile('build/ivy/ivysettings.xml')\n}\n"
                },
                {
                    "name": "ivySettingsPropertyFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ivySettingsPropertyFiles",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies property files that need to be loaded before parsing the Ivy settings\n file and Ivy module descriptors.\n     ",
                            "firstSentenceCommentText": "Specifies property files that need to be loaded before parsing the Ivy settings\n file and Ivy module descriptors."
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivySettingsPropertyFiles('branch.properties,deps.properties')\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "perModuleBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "perModuleBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Specifies if each module should be built as a separate sub-project.\n     ",
                            "firstSentenceCommentText": "Specifies if each module should be built as a separate sub-project."
                        }
                    ]
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "relativePathToDescriptorFromModuleRoot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "relativePathToDescriptorFromModuleRoot",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the relative path to the module descriptor file from the root of\n each module.\n     ",
                            "firstSentenceCommentText": "Specifies the relative path to the module descriptor file from the root of\n each module."
                        }
                    ]
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.ListView": {
            "type": "javaposse.jobdsl.dsl.views.ListView",
            "methods": [
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.ColumnsContext"
                        }
                    ],
                    "examples": "listView('project-A') {\n    columns {\n        status()\n        weather()\n        name()\n        lastSuccess()\n        lastFailure()\n        lastDuration()\n        buildButton()\n    }\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "listView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "listView('project-a') {\n    description('View for project A')\n}\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "listView('example') {\n    filterBuildQueue()\n}\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ],
                    "examples": "listView('example') {\n    filterExecutors()\n}\n"
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ],
                    "examples": "listView('example') {\n    jobFilters {\n        regex {\n            matchType(MatchType.EXCLUDE_MATCHED)\n            matchValue(RegexMatchValue.DESCRIPTION)\n            regex('.*project-a.*')\n        }\n        status {\n            matchType(MatchType.INCLUDE_MATCHED)\n            status(Status.FAILED)\n        }\n    }\n}\n"
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds jobs to the view.",
                            "firstSentenceCommentText": "Adds jobs to the view.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ],
                    "examples": "listView('example') {\n    jobs {\n        name('build')\n        name('test')\n        names('compile', 'deploy')\n        regex('project-A-.+')\n    }\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "recurse",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldRecurse",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "If set to <TT>true</TT>, jobs from sub-folders will be shown.\n Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "If set to true, jobs from sub-folders will be shown.\n "
                        }
                    ],
                    "examples": "listView('project-A') {\n    recurse()\n}\n"
                },
                {
                    "name": "statusFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "javaposse.jobdsl.dsl.views.ListView.StatusFilter",
                                    "enumConstants": [
                                        "ALL",
                                        "ENABLED",
                                        "DISABLED"
                                    ]
                                }
                            ],
                            "html": "Filter the job list by enabled/disabled status. Defaults to <TT>StatusFilter.ALL</TT>.",
                            "firstSentenceCommentText": "Filter the job list by enabled/disabled status. "
                        }
                    ],
                    "examples": "listView('project-A') {\n    statusFilter(StatusFilter.ENABLED)\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.AxisContext": {
            "type": "javaposse.jobdsl.dsl.helpers.AxisContext",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML. The <TT>axes</TT> node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "html": "Adds a JDK axis.",
                            "firstSentenceCommentText": "Adds a JDK axis."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds a JDK axis.",
                            "firstSentenceCommentText": "Adds a JDK axis."
                        }
                    ]
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "html": "Adds an axis that allows to run the same build on multiple nodes.",
                            "firstSentenceCommentText": "Adds an axis that allows to run the same build on multiple nodes."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds an axis that allows to run the same build on multiple nodes.",
                            "firstSentenceCommentText": "Adds an axis that allows to run the same build on multiple nodes."
                        }
                    ]
                },
                {
                    "name": "labelExpression",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "html": "Adds an axis that allows to run the same build on multiple nodes by evaluating a boolean expression.",
                            "firstSentenceCommentText": "Adds an axis that allows to run the same build on multiple nodes by evaluating a boolean expression."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds an axis that allows to run the same build on multiple nodes by evaluating a boolean expression..",
                            "firstSentenceCommentText": "Adds an axis that allows to run the same build on multiple nodes by evaluating a boolean expression.."
                        }
                    ]
                },
                {
                    "name": "text",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "String..."
                                }
                            ],
                            "html": "Adds a user-defined axis. Can be called multiple times to add more axes.",
                            "firstSentenceCommentText": "Adds a user-defined axis. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "axisName",
                                    "type": "String"
                                },
                                {
                                    "name": "axisValues",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Adds a user-defined axis. Can be called multiple times to add more axes.",
                            "firstSentenceCommentText": "Adds a user-defined axis. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.MatrixJob": {
            "type": "javaposse.jobdsl.dsl.jobs.MatrixJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "axes",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Specifies the axes for the matrix job.",
                            "firstSentenceCommentText": "Specifies the axes for the matrix job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.AxisContext"
                        }
                    ],
                    "examples": "matrixJob('example') {\n    axes {\n        label('label', 'linux', 'windows')\n        jdk('jdk6', 'jdk7')\n        configure { axes ->\n            axes << 'org.acme.FooAxis'()\n        }\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "childCustomWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.36",
                            "html": "Specifies a custom workspace name for individual child workspaces created for individual axes.\n     ",
                            "firstSentenceCommentText": "Specifies a custom workspace name for individual child workspaces created for individual axes."
                        }
                    ],
                    "examples": "// Reuse the same custom workspace for every axis.\nmatrixJob('example') {\n    customWorkspace('example')\n    childCustomWorkspace('.')\n}\n"
                },
                {
                    "name": "combinationFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExpression",
                                    "type": "String"
                                }
                            ],
                            "html": "Set an expression to limit which combinations can be run.",
                            "firstSentenceCommentText": "Set an expression to limit which combinations can be run."
                        }
                    ],
                    "examples": "matrixJob('example') {\n    combinationFilter('jdk==\"jdk-6\" || label==\"linux\"')\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "runSequentially",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sequentially",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Runs each matrix combination in sequence. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Runs each matrix combination in sequence. "
                        }
                    ],
                    "examples": "matrixJob('example') {\n    runSequentially()\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        shell('echo START')\n        gradle('check')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "touchStoneFilter",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "String"
                                },
                                {
                                    "name": "continueOnUnstable",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "html": "Sets an expression of which combination to run first.",
                            "firstSentenceCommentText": "Sets an expression of which combination to run first."
                        }
                    ],
                    "examples": "matrixJob('example') {\n    touchStoneFilter('label==\"linux\"')\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.DeployArtifactsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.DeployArtifactsContext",
            "methods": [
                {
                    "name": "evenIfUnstable",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "evenIfUnstable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, deploys even if the build is unstable. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set, deploys even if the build is unstable. "
                        }
                    ]
                },
                {
                    "name": "uniqueVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "uniqueVersion",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set, assigns timestamp-based unique version number to the deployed artifacts, when their versions end with\n <TT>-SNAPSHOT</TT>. Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "If set, assigns timestamp-based unique version number to the deployed artifacts, when their versions end with\n -SNAPSHOT. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.publisher.MavenPublisherContext": {
            "type": "javaposse.jobdsl.dsl.helpers.publisher.MavenPublisherContext",
            "methods": [
                {
                    "name": "aggregateDownstreamTestResults",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobs",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "includeFailedBuilds",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Aggregates downstream test results.\n     ",
                            "firstSentenceCommentText": "Aggregates downstream test results."
                        }
                    ],
                    "examples": "// aggregates test results from project-A and project-B and includes failed builds in the results\njob('example-1') {\n    publishers {\n        aggregateDownstreamTestResults('project-A, project-B', true)\n    }\n}\n\n// aggregates test results from all downstream jobs and ignores failed builds\njob('example-2') {\n    publishers {\n        aggregateDownstreamTestResults()\n    }\n}\n"
                },
                {
                    "name": "allowBrokenBuildClaiming",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "claim"
                            },
                            "html": "Allows to claim unsuccessful builds.\n     ",
                            "firstSentenceCommentText": "Allows to claim unsuccessful builds."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        allowBrokenBuildClaiming()\n    }\n}\n"
                },
                {
                    "name": "analysisCollector",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "analysisCollectorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "analysis-collector"
                            },
                            "html": "Publishes combined analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes combined analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.AnalysisCollectorContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        analysisCollector {\n            checkstyle()\n            dry()\n            findbugs()\n            pmd()\n            tasks()\n            warnings()\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "androidLint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "android-lint"
                            },
                            "html": "Publishes Android Lint results.\n     ",
                            "firstSentenceCommentText": "Publishes Android Lint results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        androidLint('**/lint-results.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "artifactsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "html": "Archives artifacts with each build.\n     ",
                            "firstSentenceCommentText": "Archives artifacts with each build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveArtifactsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Archives artifacts with each build.",
                            "firstSentenceCommentText": "Archives artifacts with each build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "excludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "latestOnly",
                                    "type": "boolean"
                                }
                            ],
                            "deprecated": true,
                            "html": "Archives artifacts with each build.",
                            "firstSentenceCommentText": "Archives artifacts with each build."
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveArtifacts {\n            pattern('build/test-output/**/*.html')\n            pattern('build/test-output/**/*.xml')\n            onlyIfSuccessful()\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveJavadoc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "javadocClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "javadoc"
                            },
                            "html": "Archives Javadoc artifacts.\n     ",
                            "firstSentenceCommentText": "Archives Javadoc artifacts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JavadocContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveJavadoc {\n            javadocDir('target/javadoc')\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveJunit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "glob",
                                    "type": "String"
                                },
                                {
                                    "name": "junitClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "junit"
                            },
                            "html": "Publishes JUnit test result reports.\n     ",
                            "firstSentenceCommentText": "Publishes JUnit test result reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveJUnitContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveJunit('**/minitest-reports/*.xml') {\n            retainLongStdout()\n            testDataPublishers {\n                publishTestStabilityData()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "archiveXUnit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xUnitClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "xunit"
                            },
                            "html": "Publishes reports generated from results of various testing tools.\n     ",
                            "firstSentenceCommentText": "Publishes reports generated from results of various testing tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ArchiveXUnitContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        archiveXUnit {\n            jUnit {\n                pattern('my_file.xml')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        archiveXUnit {\n            aUnit {\n                pattern('my_file.xml')\n            }\n            jUnit {\n                pattern('my_other_file.xml')\n            }\n            failedThresholds {\n                unstable(10)\n                unstableNew(10)\n                failure(10)\n                failureNew(10)\n            }\n            skippedThresholds {\n                unstable(5)\n                unstableNew(5)\n                failure(5)\n                failureNew(5)\n            }\n            thresholdMode(ThresholdMode.PERCENT)\n            timeMargin(4000)\n        }\n    }\n}\n"
                },
                {
                    "name": "associatedFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "files",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "associated-files"
                            },
                            "html": "Marks files or directories outside of Jenkins as related to a build.\n     ",
                            "firstSentenceCommentText": "Marks files or directories outside of Jenkins as related to a build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        associatedFiles('/tmp/logs')\n    }\n}\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "regularExpressionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "descriptionForFailed",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "multiConfigurationBuild",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "description-setter"
                            },
                            "html": "Automatically sets a description for the build after it has completed.\n     ",
                            "firstSentenceCommentText": "Automatically sets a description for the build after it has completed."
                        }
                    ],
                    "examples": "// sets build description to the project version in case the output contains the line \"Building my.project.name 0.4.0\"\njob('example-1') {\n    publishers {\n        buildDescription(/.*Building [^\\s]* ([^\\s]*)/)\n    }\n}\n\n//sets the build description to a values defined by a build parameter or environment variable called BRANCH\njob('example-2') {\n    publishers {\n        buildDescription('', '${BRANCH}')\n    }\n}\n"
                },
                {
                    "name": "buildPipelineTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamProjectNames",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "build-pipeline-plugin"
                            },
                            "html": "Adds a manual triggers for jobs that require intervention prior to execution.\n     ",
                            "firstSentenceCommentText": "Adds a manual triggers for jobs that require intervention prior to execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.BuildPipelineContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        buildPipelineTrigger('deploy-cluster-1, deploy-cluster-2')\n    }\n}\n\njob('example-2') {\n    publishers {\n        buildPipelineTrigger('deploy-cluster-1, deploy-cluster-2') {\n            parameters {\n                predefinedProp('GIT_COMMIT', '$GIT_COMMIT')\n                predefinedProp('ARTIFACT_BUILD_NUMBER', '$BUILD_NUMBER')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "ccm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "ccm"
                            },
                            "html": "Publishes CCM analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes CCM analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        ccm('**/ccm.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "checkstyle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "checkstyle"
                            },
                            "html": "Publishes Checkstyle analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes Checkstyle analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        checkstyle('**/checkstyle-result.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "chucknorris",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "chucknorris"
                            },
                            "html": "Displays a picture of Chuck Norris (instead of Jenkins the butler) and a random Chuck Norris 'The Programmer'\n fact on each build page.",
                            "firstSentenceCommentText": "Displays a picture of Chuck Norris (instead of Jenkins the butler) and a random Chuck Norris 'The Programmer'\n fact on each build page."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        chucknorris()\n    }\n}\n"
                },
                {
                    "name": "cobertura",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "reportFile",
                                    "type": "String"
                                },
                                {
                                    "name": "coberturaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "cobertura"
                            },
                            "html": "Publishes a Cobertura coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes a Cobertura coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CoberturaContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        cobertura('**/target/site/cobertura/coverage.xml') {\n            failNoReports(true)\n            sourceEncoding('ASCII')\n\n            // the following targets are added by default to check the method, line and conditional level coverage\n            methodTarget(80, 0, 0)\n            lineTarget(80, 0, 0)\n            conditionalTarget(70, 0, 0)\n        }\n    }\n}\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repoId",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "debian-package-builder",
                                "minimumVersion": "1.6.7"
                            },
                            "html": "Uploads Debian packages.\n     ",
                            "firstSentenceCommentText": "Uploads Debian packages.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DebianPackagePublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        debianPackage('precise-default') {\n            commitMessage('automatic commit by Jenkins')\n        }\n    }\n}\n"
                },
                {
                    "name": "dependencyCheck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "dependency-check-jenkins-plugin"
                            },
                            "html": "Publishes OWASP dependency check results.\n     ",
                            "firstSentenceCommentText": "Publishes OWASP dependency check results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        dependencyCheck('**/DependencyCheck-Report.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "deployArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "Deploys artifacts to a Maven repository.\n     ",
                            "firstSentenceCommentText": "Deploys artifacts to a Maven repository.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DeployArtifactsContext"
                        }
                    ],
                    "examples": "mavenJob('example-1') {\n    publishers {\n        deployArtifacts()\n    }\n}\n\nmavenJob('example-2') {\n    publishers {\n        deployArtifacts {\n            evenIfUnstable()\n        }\n    }\n}\n"
                },
                {
                    "name": "downstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "thresholdName",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "html": "Triggers builds on other projects.\n\n The <TT>threshold</TT> must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.",
                            "firstSentenceCommentText": "Triggers builds on other projects."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        downstream('project-a', 'UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Triggers parameterized builds on other projects.",
                            "firstSentenceCommentText": "Triggers parameterized builds on other projects.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.DownstreamContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        downstreamParameterized {\n            trigger('Project1, Project2') {\n                condition('UNSTABLE_OR_BETTER')\n                parameters {\n                    currentBuild()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "dry",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "highThreshold",
                                    "type": "Object",
                                    "defaultValue": "50"
                                },
                                {
                                    "name": "normalThreshold",
                                    "type": "Object",
                                    "defaultValue": "25"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "dry"
                            },
                            "html": "Publishes duplicate code analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes duplicate code analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        dry('**/cpd.xml', 80, 20) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "emma",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "emmaClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "emma"
                            },
                            "html": "Publishes an Emma coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes an Emma coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmmaContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        emma('coverage-results/coverage.xml') {\n            minClass(20)\n            maxClass(80)\n            minMethod(20)\n            maxMethod(50)\n            minBlock(30)\n            maxBlock(70)\n            minLine(30)\n            maxLine(70)\n            minCondition(30)\n            maxCondition(90)\n        }\n    }\n}\n"
                },
                {
                    "name": "extendedEmail",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "subjectTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "contentTemplate",
                                    "type": "String"
                                },
                                {
                                    "name": "emailClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "email-ext"
                            },
                            "html": "Sends customizable email notifications.",
                            "firstSentenceCommentText": "Sends customizable email notifications.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.EmailContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        extendedEmail('me@halfempty.org', 'Oops', 'Something broken') {\n            trigger('PreBuild')\n            trigger(triggerName: 'StillUnstable', subject: 'Subject', body: 'Body', recipientList: 'RecipientList',\n                    sendToDevelopers: true, sendToRequester: true, includeCulprits: true, sendToRecipientList: false)\n            configure { node ->\n                node / contentType << 'html'\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "findbugs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "isRankActivated",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "findbugs"
                            },
                            "html": "Publishes FindBugs analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes FindBugs analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        findbugs('**/findbugsXml.xml', false) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "fingerprint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "recordBuildArtifacts",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Activates fingerprinting for the build.\n     ",
                            "firstSentenceCommentText": "Activates fingerprinting for the build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        fingerprint('**/*.jar')\n    }\n}\n"
                },
                {
                    "name": "flexiblePublish",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "flexiblePublishClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "flexible-publish"
                            },
                            "html": "Add conditional post-build actions.\n\n If the <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Any+Build+Step+Plugin\">Any Build Step Plugin</a> is\n installed, build steps can be used along with publishers. When using versions older then 0.13 of the Flexible\n Publish Plugin, only one build step or one publisher can be used.\n     ",
                            "firstSentenceCommentText": "Add conditional post-build actions.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlexiblePublisherContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        flexiblePublish {\n            condition {\n                status('ABORTED', 'FAILURE')\n            }\n            publisher {\n                wsCleanup()\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        flexiblePublish {\n            condition {\n                and {\n                    stringsMatch('foo', 'bar', false)\n                } {\n                    status('SUCCESS', 'SUCCESS')\n                }\n            }\n            step {\n                shell('echo hello!')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "flowdock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "token",
                                    "type": "String"
                                },
                                {
                                    "name": "flowdockPublisherClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "jenkins-flowdock-plugin"
                            },
                            "html": "Sends build notification to Flowdock.\n\n For security reasons, do not use a hard-coded token. See\n <a href=\"https://github.com/jenkinsci/job-dsl-plugin/wiki/Handling-Credentials\">Handling Credentials</a> for\n details about handling credentials in DSL scripts.\n     ",
                            "firstSentenceCommentText": "Sends build notification to Flowdock.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.FlowdockPublisherContext"
                        }
                    ],
                    "examples": "// notify using the plugin defaults\njob('example-1') {\n    publishers {\n        flowdock('a-flow-token')\n    }\n}\n\n// notify on all build statuses\njob('example-2') {\n    publishers {\n        flowdock('flow-token') {\n            unstable()\n            success()\n            aborted()\n            failure()\n            fixed()\n            notBuilt()\n        }\n    }\n}\n\n// notify multiple flows in their chat using the tags 'jenkins' and 'build'\njob('example-3') {\n    publishers {\n        flowdock('first-flow-token, second-flow-token') {\n            chat()\n            tags('jenkins', 'build')\n        }\n    }\n}\n"
                },
                {
                    "name": "git",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gitPublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "git"
                            },
                            "html": "Pushes tags or branches to a Git repository.\n     ",
                            "firstSentenceCommentText": "Pushes tags or branches to a Git repository.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GitPublisherContext"
                        }
                    ],
                    "examples": "// push a to branch if the job succeeded\njob('example-1') {\n    publishers {\n        git {\n            pushOnlyIfSuccess()\n            branch('origin', 'staging')\n        }\n    }\n}\n\n// create and push a tag if the job succeeded, the tag name and message are parametrized.\njob('example-2') {\n    publishers {\n        git {\n            pushOnlyIfSuccess()\n            tag('origin', 'foo-$PIPELINE_VERSION') {\n                message('Release $PIPELINE_VERSION')\n                create()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "githubCommitNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "github"
                            },
                            "html": "Create commit status notifications on the commits based on the outcome of the build.\n     ",
                            "firstSentenceCommentText": "Create commit status notifications on the commits based on the outcome of the build."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        githubCommitNotifier()\n    }\n}\n"
                },
                {
                    "name": "groovyPostBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                },
                                {
                                    "name": "behavior",
                                    "type": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext.Behavior",
                                    "enumConstants": [
                                        "DoNothing",
                                        "MarkUnstable",
                                        "MarkFailed"
                                    ],
                                    "defaultValue": "Behavior.DoNothing"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Executes Groovy scripts after a build.\n     ",
                            "firstSentenceCommentText": "Executes Groovy scripts after a build."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "groovyPostbuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.37",
                            "plugin": {
                                "id": "groovy-postbuild"
                            },
                            "html": "Executes Groovy scripts after a build.\n     ",
                            "firstSentenceCommentText": "Executes Groovy scripts after a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.GroovyPostbuildContext"
                        }
                    ],
                    "examples": "// run a groovy script and if that fails will mark the build as failed\njob('example') {\n    publishers {\n        groovyPostBuild('println \"hello, world\"', Behavior.MarkFailed)\n    }\n}\n"
                },
                {
                    "name": "hipChat",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "hipChatClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "hipchat",
                                "minimumVersion": "0.1.9"
                            },
                            "html": "Sends notifications to HipChat.\n     ",
                            "firstSentenceCommentText": "Sends notifications to HipChat.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HipChatPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        hipChat {\n            rooms('Dev Team A', 'QA')\n            notifyAborted()\n            notifyNotBuilt()\n            notifyUnstable()\n            notifyFailure()\n            notifyBackToNormal()\n        }\n    }\n}\n"
                },
                {
                    "name": "irc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "ircClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "ircbot"
                            },
                            "html": "Sends notifications to IRC.\n     ",
                            "firstSentenceCommentText": "Sends notifications to IRC.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.IrcContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        irc {\n            channel('#channel1', 'password1', true)\n            channel(name: '#channel2', password: 'password2', notificationOnly: false)\n            notifyScmCommitters()\n            notifyScmCulprits()\n            notifyUpstreamCommitters(false)\n            notifyScmFixers()\n            strategy('ALL')\n            notificationMessage('SummaryOnly')\n        }\n    }\n}\n"
                },
                {
                    "name": "jacocoCodeCoverage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jacocoClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "jacoco"
                            },
                            "html": "Publishes a JaCoCo coverage report.\n     ",
                            "firstSentenceCommentText": "Publishes a JaCoCo coverage report.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JacocoContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        jacocoCodeCoverage {\n            minimumInstructionCoverage('20')\n            minimumBranchCoverage('20')\n            minimumComplexityCoverage('20')\n            minimumLineCoverage('20')\n            minimumMethodCoverage('20')\n            minimumClassCoverage('20')\n            maximumInstructionCoverage('80')\n            maximumBranchCoverage('80')\n            maximumComplexityCoverage('80')\n            maximumLineCoverage('80')\n            maximumMethodCoverage('80')\n            maximumClassCoverage('80')\n        }\n    }\n}\n"
                },
                {
                    "name": "joinTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "joinTriggerClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "join",
                                "minimumVersion": "1.15"
                            },
                            "html": "Runs a job after all immediate downstream jobs have completed.\n     ",
                            "firstSentenceCommentText": "Runs a job after all immediate downstream jobs have completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JoinTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        joinTrigger {\n            projects('upload-to-staging')\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        joinTrigger {\n            publishers {\n                downstreamParameterized {\n                    trigger('upload-to-staging') {\n                        currentBuild()\n                    }\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "jshint",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "jshint-checkstyle"
                            },
                            "html": "Publishes JSHint analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes JSHint analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        jshint('**/jshint-result.xml') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "mailer",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "recipients",
                                    "type": "String"
                                },
                                {
                                    "name": "dontNotifyEveryUnstableBuild",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "sendToIndividuals",
                                    "type": "Boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "mailer"
                            },
                            "html": "Sends email notifications.\n     ",
                            "firstSentenceCommentText": "Sends email notifications."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mailer('me@example.com', true, true)\n    }\n}\n"
                },
                {
                    "name": "mavenDeploymentLinker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "maven-deployment-linker"
                            },
                            "html": "Add a summary to the build of the artifacts uploaded to a Maven repository.\n     ",
                            "firstSentenceCommentText": "Add a summary to the build of the artifacts uploaded to a Maven repository."
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mavenDeploymentLinker('.*.tar.gz')\n    }\n}\n"
                },
                {
                    "name": "mergePullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "ghprb",
                                "minimumVersion": "1.17"
                            },
                            "html": "Allows to merge the pull request if the build was successful.\n     ",
                            "firstSentenceCommentText": "Allows to merge the pull request if the build was successful.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PullRequestPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        mergePullRequest {\n            mergeComment('merged by Jenkins')\n            disallowOwnCode()\n        }\n    }\n}\n"
                },
                {
                    "name": "plotBuildData",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "plotsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "plot",
                                "minimumVersion": "1.9"
                            },
                            "html": "Plots data across builds.\n     ",
                            "firstSentenceCommentText": "Plots data across builds.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PlotsContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        plotBuildData {\n            plot('Important Plot', 'my_data_store.csv') {\n                propertiesFile('my_data.properties')\n            }\n        }\n    }\n}\n\njob('example-2') {\n    publishers {\n        plotBuildData {\n            plot('Bar Charts', 'bar_chart_data_store.csv') {\n                style('bar')\n                propertiesFile('my_data.properties') {\n                    label('My Label')\n                }\n            }\n        }\n    }\n}\n\njob('example-3') {\n    publishers {\n        plotBuildData {\n            plot('Exciting plots', 'excitment.csv') {\n                title('X vs Y')\n                yAxis('Y')\n                numberOfBuilds(42)\n                useDescriptions()\n                keepRecords()\n                excludeZero()\n                logarithmic()\n                propertiesFile('my_data.properties') {\n                    label('Builds')\n                }\n            }\n        }\n    }\n}\n\njob('example-4') {\n    publishers {\n        plotBuildData {\n            plot('Other charts', '123012992213.csv') {\n                style('line3d')\n                csvFile('my_data.properties') {\n                    includeColumns(1, 8, 14)\n                    showTable()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "pmd",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "pmd"
                            },
                            "html": "Publishes PMD analysis results.\n     ",
                            "firstSentenceCommentText": "Publishes PMD analysis results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        pmd('**/*.pmd') {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "postBuildScripts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "postbuildscript"
                            },
                            "html": "Execute a set of scripts at the end of the build.\n     ",
                            "firstSentenceCommentText": "Execute a set of scripts at the end of the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildScriptsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        postBuildScripts {\n            steps {\n                shell('echo Hello World')\n            }\n            onlyIfBuildSucceeds(false)\n        }\n    }\n}\n"
                },
                {
                    "name": "postBuildTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "postbuild-task"
                            },
                            "html": "Searches for a regular expression in the console log and, if matched, executes a script.\n     ",
                            "firstSentenceCommentText": "Searches for a regular expression in the console log and, if matched, executes a script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildTaskContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        postBuildTask {\n            task('BUILD SUCCESSFUL', 'git clean -fdx')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "build-publisher",
                                "minimumVersion": "1.20"
                            },
                            "html": "Publishes builds to another Jenkins instance.\n     ",
                            "firstSentenceCommentText": "Publishes builds to another Jenkins instance.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublishBuildContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishBuild {\n            discardOldBuilds(7, 10)\n        }\n    }\n}\n"
                },
                {
                    "name": "publishCloneWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "workspaceGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "workspaceExcludeGlob",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "criteria",
                                    "type": "String",
                                    "defaultValue": "'Any'"
                                },
                                {
                                    "name": "archiveMethod",
                                    "type": "String",
                                    "defaultValue": "'TAR'"
                                },
                                {
                                    "name": "overrideDefaultExcludes",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "cloneWorkspaceClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "clone-workspace-scm"
                            },
                            "html": "Archives files for Clone Workspace SCM source.",
                            "firstSentenceCommentText": "Archives files for Clone Workspace SCM source.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.CloneWorkspaceContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishCloneWorkspace('build/libs/**')\n    }\n}\n"
                },
                {
                    "name": "publishHtml",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "htmlReportContext",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "htmlpublisher"
                            },
                            "html": "Publishes HTML reports.",
                            "firstSentenceCommentText": "Publishes HTML reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.HtmlReportContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishHtml {\n            report('build/test-output') {\n                reportName('Test Output')\n            }\n            report('test') {\n                reportName('Gradle Tests')\n                keepAll()\n                allowMissing()\n                alwaysLinkToLastBuild()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "publishJabber",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "jabberClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "jabber"
                            },
                            "html": "Sends notifications to Jabber.",
                            "firstSentenceCommentText": "Sends notifications to Jabber.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.JabberContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishJabber('*room@example.org') {\n            strategyName('STATECHANGE_ONLY')\n            notifySuspects()\n            channelNotificationName('BuildParameters')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.34",
                            "plugin": {
                                "id": "publish-over-ssh",
                                "minimumVersion": "1.12"
                            },
                            "html": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.\n     ",
                            "firstSentenceCommentText": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishOverSsh {\n            server('my-server-01') {\n                credentials('user01') {\n                    pathToKey('path01')\n                }\n                label('server-01')\n                transferSet {\n                    sourceFiles('files')\n                    execCommand('command')\n                }\n            }\n            server('my-server-02') {\n                credentials('user2') {\n                    key('key')\n                }\n                label('server-02')\n                transferSet {\n                    sourceFiles('files2')\n                    execCommand('command2')\n                }\n            }\n            parameterizedPublishing('PARAMETER')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishRobotFrameworkReports",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "robotClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "robot"
                            },
                            "html": "Publishes Robot Framework test reports.\n     ",
                            "firstSentenceCommentText": "Publishes Robot Framework test reports.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RobotFrameworkContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishRobotFrameworkReports {\n            passThreshold(80.0)\n            unstableThreshold(20.0)\n            onlyCritical()\n        }\n    }\n}\n"
                },
                {
                    "name": "publishScp",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "site",
                                    "type": "String"
                                },
                                {
                                    "name": "scpClosure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "scp"
                            },
                            "html": "Uploads artifacts to the remote sites using the SFTP (SSH) protocol. The site is specified in the global Jenkins\n configuration.",
                            "firstSentenceCommentText": "Uploads artifacts to the remote sites using the SFTP (SSH) protocol. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ScpContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        publishScp('docs.acme.org') {\n            entry('build/docs/**', 'project-a', true)\n        }\n    }\n}\n"
                },
                {
                    "name": "retryBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "naginatorClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "naginator",
                                "minimumVersion": "1.15"
                            },
                            "html": "Allows to automatically reschedule a build after a failure. By default a progressive\n delay with an increment of 5 minutes and a maximum of 3 hours is used.\n     ",
                            "firstSentenceCommentText": "Allows to automatically reschedule a build after a failure. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.NaginatorContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        retryBuild {\n            rerunIfUnstable()\n            retryLimit(3)\n            progressiveDelay(60, 600)\n        }\n    }\n}\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobIdentifier",
                                    "type": "String"
                                },
                                {
                                    "name": "rundeckClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "rundeck"
                            },
                            "html": "Triggers a Rundeck job.\n     ",
                            "firstSentenceCommentText": "Triggers a Rundeck job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.RundeckContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    publishers {\n        rundeck('13eba461-179d-40a1-8a08-bafee33fdc12')\n    }\n}\n\njob('example-2') {\n    publishers {\n        rundeck('13eba461-179d-40a1-8a08-bafee33fdc12') {\n            options(artifact: 'app', env: 'dev')\n            option('version', '1.1')\n            tag('deploy app to dev')\n            nodeFilters(hostname: 'dev(\\\\d+).company.net')\n            nodeFilter('tags', 'www+dev')\n            shouldWaitForRundeckJob()\n            shouldFailTheBuild()\n        }\n    }\n}\n"
                },
                {
                    "name": "s3",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "profile",
                                    "type": "String"
                                },
                                {
                                    "name": "s3PublisherClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "s3"
                            },
                            "html": "Uploads build artifacts to Amazon S3.\n     ",
                            "firstSentenceCommentText": "Uploads build artifacts to Amazon S3.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.S3BucketPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        s3('myProfile') {\n            entry('foo', 'bar', 'eu-west-1') {\n                storageClass('REDUCED_REDUNDANCY')\n                noUploadOnFailure()\n                uploadFromSlave()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "slackNotifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "slackNotificationsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "slack",
                                "minimumVersion": "1.8"
                            },
                            "html": "Sends notifications to Slack.\n     ",
                            "firstSentenceCommentText": "Sends notifications to Slack.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SlackNotificationsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        slackNotifications {\n            projectChannel('Dev Team A')\n            notifyAborted()\n            notifyFailure()\n            notifyNotBuilt()\n            notifyUnstable()\n            notifyBackToNormal()\n        }\n    }\n}\n"
                },
                {
                    "name": "sonar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sonarClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "sonar"
                            },
                            "html": "Triggers SonarQube analysis.\n     ",
                            "firstSentenceCommentText": "Triggers SonarQube analysis.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.SonarContext"
                        }
                    ],
                    "examples": "// run Sonar analysis for feature-xy branch,\n// but skip if SKIP_SONAR environment variable is set to true\njob('example') {\n    publishers {\n        sonar {\n            branch('feature-xy')\n            overrideTriggers {\n                skipIfEnvironmentVariable('SKIP_SONAR')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "stashNotifier",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stashNotifierClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "stashNotifier"
                            },
                            "html": "Notifies an Atlassian Stash instance of Jenkins builds in progress and of their results.\n     ",
                            "firstSentenceCommentText": "Notifies an Atlassian Stash instance of Jenkins builds in progress and of their results.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StashNotifierContext"
                        }
                    ],
                    "examples": "// notify Stash using the global Jenkins settings\njob('example-1') {\n    publishers {\n        stashNotifier()\n    }\n}\n\n// notify Stash using the global Jenkins settings and sets keepRepeatedBuilds to true\njob('example-2') {\n    publishers {\n        stashNotifier {\n            keepRepeatedBuilds()\n        }\n    }\n}\n"
                },
                {
                    "name": "tasks",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "pattern",
                                    "type": "String"
                                },
                                {
                                    "name": "excludePattern",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "high",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "normal",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "low",
                                    "type": "Object",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "ignoreCase",
                                    "type": "Object",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "staticAnalysisClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "tasks"
                            },
                            "html": "Scans the workspace for open tasks.\n     ",
                            "firstSentenceCommentText": "Scans the workspace for open tasks.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.StaticAnalysisContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        tasks('**/cpd.xml', '**/*.xml', 'FIXME', 'TODO', 'LOW', true) {\n            healthLimits(3, 20)\n            thresholdLimit('high')\n            defaultEncoding('UTF-8')\n            canRunOnFailed(true)\n            useStableBuildAsReference(true)\n            useDeltaValues(true)\n            computeNew(true)\n            shouldDetectModules(true)\n            thresholds(\n                    unstableTotal: [all: 1, high: 2, normal: 3, low: 4],\n                    failedTotal: [all: 5, high: 6, normal: 7, low: 8],\n                    unstableNew: [all: 9, high: 10, normal: 11, low: 12],\n                    failedNew: [all: 13, high: 14, normal: 15, low: 16]\n            )\n        }\n    }\n}\n"
                },
                {
                    "name": "textFinder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regularExpression",
                                    "type": "String"
                                },
                                {
                                    "name": "fileSet",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "alsoCheckConsoleOutput",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "succeedIfFound",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "unstableIfFound",
                                    "type": "Object",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "text-finder"
                            },
                            "html": "Searches for keywords in files or the console log and uses that to downgrade a build to be unstable or a failure.\n     ",
                            "firstSentenceCommentText": "Searches for keywords in files or the console log and uses that to downgrade a build to be unstable or a failure."
                        }
                    ],
                    "examples": "// marks a build as unstable if \"[ERROR]\" has been in found in any log file\njob('example') {\n    publishers {\n        textFinder(/[ERROR]/, '**/*.log', false, false, true)\n    }\n}\n"
                },
                {
                    "name": "violations",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Generates reports from static code violations detectors.",
                            "firstSentenceCommentText": "Generates reports from static code violations detectors.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "perFileDisplayLimit",
                                    "type": "int"
                                },
                                {
                                    "name": "violationsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "violations"
                            },
                            "html": "Generates reports from static code violations detectors.",
                            "firstSentenceCommentText": "Generates reports from static code violations detectors.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.ViolationsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        violations(50) {\n            sourcePathPattern('source pattern')\n            fauxProjectPath('faux path')\n            perFileDisplayLimit(51)\n            checkstyle(10, 11, 10, 'test-report/*.xml')\n            findbugs(12, 13, 12)\n            jshint(10, 11, 10, 'test-report/*.xml')\n        }\n    }\n}\n"
                },
                {
                    "name": "warnings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "consoleParsers",
                                    "type": "List"
                                },
                                {
                                    "name": "parserConfigurations",
                                    "type": "Map",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "warningsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.17",
                            "plugin": {
                                "id": "warnings",
                                "minimumVersion": "4.0"
                            },
                            "html": "Scans for compiler warnings.\n\n The first argument specifies the name of the console parsers to use. The second argument specifies a map of log\n file parsers, the key is the name of the parser and the value defines the files to scan. The parser are either\n built-in ones or custom parsers defined in the global Jenkins configuration.\n     ",
                            "firstSentenceCommentText": "Scans for compiler warnings.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.WarningsContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        warnings(['Java Compiler (javac)'], ['Java Compiler (javac)': '**/*.log']) {\n            excludePattern('**/test**')\n            resolveRelativePaths()\n        }\n    }\n}\n"
                },
                {
                    "name": "wsCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "ws-cleanup"
                            },
                            "html": "Deletes files from the workspace after the build completed.\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace after the build completed.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PostBuildCleanupContext"
                        }
                    ],
                    "examples": "// delete all files after a build\njob('example-1') {\n    publishers {\n        wsCleanup()\n    }\n}\n\n// delete all 'src' directories in the directory tree\njob('example-2') {\n    publishers {\n        wsCleanup {\n            includePattern('**/src/**')\n            deleteDirectories(true)\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.triggers.MavenTriggerContext": {
            "type": "javaposse.jobdsl.dsl.helpers.triggers.MavenTriggerContext",
            "methods": [
                {
                    "name": "cron",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                }
                            ],
                            "html": "Triggers the job based on regular intervals.",
                            "firstSentenceCommentText": "Triggers the job based on regular intervals."
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        cron('@daily')\n    }\n}\n"
                },
                {
                    "name": "gerrit",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "gerrit-trigger"
                            },
                            "html": "Polls Gerrit for changes.",
                            "firstSentenceCommentText": "Polls Gerrit for changes.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.GerritContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        gerrit {\n            events {\n                changeMerged()\n                draftPublished()\n            }\n            project('reg_exp:myProject', ['ant:feature-branch', 'plain:origin/refs/mybranch'])\n            project('test-project', '**')\n            buildSuccessful(10, null)\n        }\n    }\n}\n"
                },
                {
                    "name": "githubPush",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "github"
                            },
                            "html": "Trigger that runs jobs on push notifications from GitHub.\n     ",
                            "firstSentenceCommentText": "Trigger that runs jobs on push notifications from GitHub."
                        }
                    ],
                    "examples": "job('example-1') {\n    triggers {\n        githubPush()\n    }\n}\n"
                },
                {
                    "name": "pullRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "ghprb"
                            },
                            "html": "Builds pull requests from GitHub and will report the results back to the pull request.\n\n The pull request builder plugin requires a special Git SCM configuration, see the plugin documentation for\n details.\n     ",
                            "firstSentenceCommentText": "Builds pull requests from GitHub and will report the results back to the pull request.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.PullRequestBuilderContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        git {\n            remote {\n                github('test-owner/test-project')\n                refspec('+refs/pull/*:refs/remotes/origin/pr/*')\n            }\n            branch('${sha1}')\n        }\n    }\n    triggers {\n        pullRequest {\n            admin('USER_ID')\n            userWhitelist('you@you.com')\n            orgWhitelist(['your_github_org', 'another_org'])\n            cron('H/5 * * * *')\n            triggerPhrase('Ok to test')\n            onlyTriggerPhrase()\n            useGitHubHooks()\n            permitAll()\n            autoCloseFailedPullRequests()\n            allowMembersOfWhitelistedOrgsAsAdmin()\n            extensions {\n                commitStatus {\n                    context('deploy to staging site')\n                    startedStatus('deploying to staging site...')\n                    completedStatus('SUCCESS', 'All is well')\n                    completedStatus('FAILURE', 'Something went wrong. Investigate!')\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "rundeck",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "rundeck",
                                "minimumVersion": "3.4"
                            },
                            "html": "Allows to schedule a build on Jenkins after a job execution on RunDeck.\n     ",
                            "firstSentenceCommentText": "Allows to schedule a build on Jenkins after a job execution on RunDeck.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.RundeckTriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        rundeck {\n            jobIdentifiers('2027ce89-7924-4ecf-a963-30090ada834f',\n                    'my-project-name:main-group/sub-group/my-job')\n            executionStatuses('FAILED', 'ABORTED')\n        }\n    }\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cronString",
                                    "type": "String"
                                },
                                {
                                    "name": "scmTriggerClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Polls source control for changes at regular intervals.",
                            "firstSentenceCommentText": "Polls source control for changes at regular intervals.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.ScmTriggerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    triggers {\n        scm('@daily')\n    }\n}\n\njob('example-2') {\n    triggers {\n        scm('@midnight') {\n            ignorePostCommitHooks()\n        }\n    }\n}\n"
                },
                {
                    "name": "snapshotDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "checkSnapshotDependencies",
                                    "type": "boolean"
                                }
                            ],
                            "html": "If set to <code>true</code>, Jenkins will parse the POMs of this project, and see if any of its snapshot\n dependencies are built on this Jenkins as well. If so, Jenkins will set up build dependency relationship so that\n whenever the dependency job is built and a new SNAPSHOT jar is created, Jenkins will schedule a build of this\n project. Defaults to <code>false</code>.\n     ",
                            "firstSentenceCommentText": "If set to true, Jenkins will parse the POMs of this project, and see if any of its snapshot\n dependencies are built on this Jenkins as well. "
                        }
                    ],
                    "examples": "mavenJob('example') {\n    triggers {\n        snapshotDependencies(true)\n    }\n}\n"
                },
                {
                    "name": "upstream",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projects",
                                    "type": "String"
                                },
                                {
                                    "name": "threshold",
                                    "type": "String",
                                    "defaultValue": "'SUCCESS'"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger.\n\n Possible thresholds are <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.\n     ",
                            "firstSentenceCommentText": "Starts a build on completion of an upstream job, i.e. adds the \"Build after other projects are built\" trigger."
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        upstream('other', 'UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "urlTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "crontab",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "contextClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "urltrigger"
                            },
                            "html": "Adds DSL for adding and configuring the URL trigger plugin to a job.\n     ",
                            "firstSentenceCommentText": "Adds DSL for adding and configuring the URL trigger plugin to a job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.UrlTriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        urlTrigger {\n            cron('* 0 * 0 *')\n            restrictToLabel('foo')\n\n            // simple configuration\n            url('http://www.example.com/foo/') {\n                proxy(true)\n                status(404)\n                timeout(4000)\n                check('status')\n                check('etag')\n                check('lastModified')\n            }\n\n            // Content inspection (MD5 hash)\n            url('http://www.example.com/bar/') {\n                inspection('change')\n            }\n\n            // content inspection for JSON content with detailed checking using JSONPath\n            url('http://www.example.com/baz/') {\n                inspection('json') {\n                    path('$.store.book[0].title')\n                }\n            }\n\n            // content inspection for text content with detailed checking using regular expressions\n            url('http://www.example.com/fubar/') {\n                inspection('text') {\n                    regexp(/_(foo|bar).+/)\n                }\n            }\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.MavenReleaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.MavenReleaseContext",
            "methods": [
                {
                    "name": "dryRunGoals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "dryRunGoals",
                                    "type": "String"
                                }
                            ],
                            "html": "Enter the goals you wish to use as part of the dry run to simulate the release build. Defaults to\n <TT>-Dresume=false -DdryRun=true release:prepare</TT>.",
                            "firstSentenceCommentText": "Enter the goals you wish to use as part of the dry run to simulate the release build. "
                        }
                    ]
                },
                {
                    "name": "numberOfReleaseBuildsToKeep",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "numberOfReleaseBuildsToKeep",
                                    "type": "int"
                                }
                            ],
                            "html": "Specify the number of successful release builds to keep forever. A value of -1 will lock all successful\n release builds, 0 will not lock any builds. Defaults to 1.",
                            "firstSentenceCommentText": "Specify the number of successful release builds to keep forever. "
                        }
                    ]
                },
                {
                    "name": "releaseEnvVar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseEnvVar",
                                    "type": "String"
                                }
                            ],
                            "html": "An environment variable with this name indicates whether the current build is a release build or not.\n This can be used e.g. within a shell or the conditional buildstep to do pre and post release processing.\n The value will be boolean (true if it is a release build, false if its not a release build). Defaults to\n <TT>'IS_M2RELEASEBUILD'</TT>.",
                            "firstSentenceCommentText": "An environment variable with this name indicates whether the current build is a release build or not.\n "
                        }
                    ]
                },
                {
                    "name": "releaseGoals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseGoals",
                                    "type": "String"
                                }
                            ],
                            "html": "Enter the goals you wish to use as part of the release process. Defaults to\n <TT>'-Dresume=false release:prepare release:perform'</TT>.",
                            "firstSentenceCommentText": "Enter the goals you wish to use as part of the release process. "
                        }
                    ]
                },
                {
                    "name": "scmPasswordEnvVar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scmPasswordEnvVar",
                                    "type": "String"
                                }
                            ],
                            "html": "If defined, an environment variable with this name will hold the scm password when triggering a\n release build (this is the password the user enters when triggering a release build, not the password\n given to Jenkins' SCM configuration of the job). Empty by default.\n\n As the passed passwords would potentially get written to the logs and therefore visible to users,\n it is recommended to install the\n <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/Mask+Passwords+Plugin\">Mask Password Plugin</a>.",
                            "firstSentenceCommentText": "If defined, an environment variable with this name will hold the scm password when triggering a\n release build (this is the password the user enters when triggering a release build, not the password\n given to Jenkins' SCM configuration of the job). "
                        }
                    ]
                },
                {
                    "name": "scmUserEnvVar",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "scmUserEnvVar",
                                    "type": "String"
                                }
                            ],
                            "html": "If defined, an environment variable with this name will hold the scm username when triggering a\n release build (this is the username the user enters when triggering a release build, not the username\n given to Jenkins' SCM configuration of the job). Empty by default.",
                            "firstSentenceCommentText": "If defined, an environment variable with this name will hold the scm username when triggering a\n release build (this is the username the user enters when triggering a release build, not the username\n given to Jenkins' SCM configuration of the job). "
                        }
                    ]
                },
                {
                    "name": "selectAppendJenkinsUsername",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectAppendJenkinsUsername",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Enable this to have the \"Append Jenkins Username\" option (part of the \"Specify custom SCM comment prefix\"\n configuration) selected by default in the \"Perform Maven Release\" view. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Enable this to have the \"Append Jenkins Username\" option (part of the \"Specify custom SCM comment prefix\"\n configuration) selected by default in the \"Perform Maven Release\" view. "
                        }
                    ]
                },
                {
                    "name": "selectCustomScmCommentPrefix",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectCustomScmCommentPrefix",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Enable this to have the \"Select custom SCM comment prefix\" option selected by default\n in the \"Perform Maven Release\" view. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Enable this to have the \"Select custom SCM comment prefix\" option selected by default\n in the \"Perform Maven Release\" view. "
                        }
                    ]
                },
                {
                    "name": "selectScmCredentials",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "selectScmCredentials",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Enable this to have the \"specify SCM login/password\" option selected by default in the\n \"Perform Maven Release\" view. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "Enable this to have the \"specify SCM login/password\" option selected by default in the\n \"Perform Maven Release\" view. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.wrapper.MavenWrapperContext": {
            "type": "javaposse.jobdsl.dsl.helpers.wrapper.MavenWrapperContext",
            "methods": [
                {
                    "name": "allocatePorts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "portsArg",
                                    "type": "String[]"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "port-allocator"
                            },
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "cl",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "firstSentenceCommentText": "Allocate ports for build executions to prevent conflicts between build jobs competing for a single port number.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PortsContext"
                        }
                    ],
                    "examples": "// allocates two ports: one randomly assigned and accessible by env var $HTTP\n// the second is fixed and the port allocator controls concurrent usage\njob('example-1') {\n    wrappers {\n        allocatePorts('HTTP', '8080')\n    }\n}\n\n// allocates a GlassFish and a Tomcat port\njob('example-2') {\n    wrappers {\n        allocatePorts {\n            glassfish('1234', 'user', 'password')\n            tomcat('1234', 'password')\n        }\n    }\n}\n"
                },
                {
                    "name": "buildName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nameTemplate",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "build-name-setter"
                            },
                            "html": "Sets the display name of a build.\n     ",
                            "firstSentenceCommentText": "Sets the display name of a build."
                        }
                    ],
                    "examples": "// define the build name based on the build number and an environment variable\njob('example') {\n    wrappers {\n        buildName('#${BUILD_NUMBER} on ${ENV,var=\"BRANCH\"}')\n    }\n}\n"
                },
                {
                    "name": "buildUserVars",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "build-user-vars-plugin"
                            },
                            "html": "Adds a number of environment variables with information about the current user.\n     ",
                            "firstSentenceCommentText": "Adds a number of environment variables with information about the current user."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        buildUserVars()\n    }\n}\n"
                },
                {
                    "name": "colorizeOutput",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "colorMap",
                                    "type": "String",
                                    "defaultValue": "'xterm'"
                                }
                            ],
                            "plugin": {
                                "id": "ansicolor"
                            },
                            "html": "Renders ANSI escape sequences, including color, to console output.\n     ",
                            "firstSentenceCommentText": "Renders ANSI escape sequences, including color, to console output."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n    }\n}\n"
                },
                {
                    "name": "configFiles",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configFilesClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Make globally configured files available to the build.\n     ",
                            "firstSentenceCommentText": "Make globally configured files available to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ConfigFilesContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        configFiles {\n            file('myCustomConfigFile') {\n                variable('CONFIG_FILE')\n            }\n            mavenSettings('myJenkinsSettingsFile') {\n                targetLocation('settings.xml')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "credentialsBinding",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "credentials-binding"
                            },
                            "html": "Binds environment variables to credentials.\n     ",
                            "firstSentenceCommentText": "Binds environment variables to credentials.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CredentialsBindingContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        credentialsBinding {\n            file('KEYSTORE', 'keystore.jks')\n            usernamePassword('PASSWORD', 'keystore password')\n        }\n    }\n}\n"
                },
                {
                    "name": "customTools",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.30",
                            "plugin": {
                                "id": "custom-tools-plugin"
                            },
                            "html": "Installs custom tools.\n     ",
                            "firstSentenceCommentText": "Installs custom tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.CustomToolsContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        customTools(['NodeJS', 'figlet']) {\n            skipMasterInstallation()\n        }\n    }\n}\n"
                },
                {
                    "name": "deliveryPipelineVersion",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "template",
                                    "type": "String"
                                },
                                {
                                    "name": "setDisplayName",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Creates a pipeline version based on the template and optionally sets that version as display name for the build.\n     ",
                            "firstSentenceCommentText": "Creates a pipeline version based on the template and optionally sets that version as display name for the build."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        deliveryPipelineVersion('1.0.${BUILD_NUMBER}', true)\n    }\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Injects environment variables into the build.\n     ",
                            "firstSentenceCommentText": "Injects environment variables into the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperEnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        environmentVariables {\n            env('ONE', '1')\n            envs(FOO: 'bar', TEST: '123')\n            propertiesFile('env.properties')\n        }\n    }\n}\n"
                },
                {
                    "name": "exclusionResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "String..."
                                }
                            ],
                            "availableSince": "1.24",
                            "html": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "resourceNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "Exclusion"
                            },
                            "html": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step.\n     ",
                            "firstSentenceCommentText": "Configures exclusion plugin resources that are required for the\n javaposse.jobdsl.dsl.helpers.step.StepContext#criticalBlock(groovy.lang.Closure) step."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        exclusionResources('first', 'second')\n    }\n    steps {\n        criticalBlock {\n            shell('echo Hello World!')\n        }\n    }\n}\n"
                },
                {
                    "name": "golang",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "version",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "golang"
                            },
                            "html": "Sets up a Go environment.\n     ",
                            "firstSentenceCommentText": "Sets up a Go environment."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        golang('Go 1.3.3')\n    }\n}\n"
                },
                {
                    "name": "injectPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Injects globally defined passwords as environment variables into the job.\n     ",
                            "firstSentenceCommentText": "Injects globally defined passwords as environment variables into the job."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        injectPasswords()\n    }\n}\n"
                },
                {
                    "name": "keychains",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keychainsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "kpp-management-plugin"
                            },
                            "html": "Configures keychains for the build.\n     ",
                            "firstSentenceCommentText": "Configures keychains for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.KeychainsContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        keychains {\n            keychain('test1', 'test2')\n            delete()\n            overwrite()\n        }\n    }\n}\n"
                },
                {
                    "name": "logSizeChecker",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.23",
                            "plugin": {
                                "id": "logfilesizechecker"
                            },
                            "html": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.\n     ",
                            "firstSentenceCommentText": "Monitors the size of the output file of a build and aborts the build if the log file gets too big.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.LogFileSizeCheckerContext"
                        }
                    ],
                    "examples": "// default configuration using the system wide definition\njob('example-1') {\n    wrappers {\n        logSizeChecker()\n    }\n}\n\n// using job specific configuration, setting the max log size to 10 MB and fail the build of the log file is larger.\njob('example-2') {\n    wrappers {\n        logSizeChecker {\n            maxSize(10)\n            failBuild()\n        }\n    }\n}\n"
                },
                {
                    "name": "maskPasswords",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "mask-passwords"
                            },
                            "html": "Masks the passwords that occur in the console output.\n     ",
                            "firstSentenceCommentText": "Masks the passwords that occur in the console output."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        maskPasswords()\n    }\n}\n"
                },
                {
                    "name": "mavenRelease",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "Allows to perform a release build using the\n <a href=\"http://maven.apache.org/maven-release/maven-release-plugin/\">maven-release-plugin</a>.\n     ",
                            "firstSentenceCommentText": "Allows to perform a release build using the\n maven-release-plugin.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.MavenReleaseContext"
                        }
                    ],
                    "examples": "mavenJob('example') {\n    wrappers {\n        mavenRelease {\n            scmUserEnvVar('MY_USER_ENV')\n            scmPasswordEnvVar('MY_PASSWORD_ENV')\n            releaseEnvVar('RELEASE_ENV')\n            releaseGoals('release:prepare release:perform')\n            dryRunGoals('-DdryRun=true release:prepare')\n            selectCustomScmCommentPrefix()\n            selectAppendJenkinsUsername()\n            selectScmCredentials()\n            numberOfReleaseBuildsToKeep(10)\n        }\n    }\n}\n"
                },
                {
                    "name": "nodejs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "nodejs"
                            },
                            "html": "Sets up a NodeJS environment.\n     ",
                            "firstSentenceCommentText": "Sets up a NodeJS environment."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        nodejs('NodeJS 0.10.26')\n    }\n}\n"
                },
                {
                    "name": "preBuildCleanup",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "ws-cleanup"
                            },
                            "html": "Deletes files from the workspace before the build starts.\n     ",
                            "firstSentenceCommentText": "Deletes files from the workspace before the build starts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreBuildCleanupContext"
                        }
                    ],
                    "examples": "// cleanup all files\njob('example-1') {\n    wrappers {\n        preBuildCleanup()\n    }\n}\n\n// cleanup all files and directories in target directories, but only if the CLEANUP build parameter is set to 'true'\njob('example-2') {\n    wrappers {\n        preBuildCleanup {\n            includePattern('**/target/**')\n            deleteDirectories()\n            cleanupParameter('CLEANUP')\n        }\n    }\n}\n"
                },
                {
                    "name": "preScmSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "preSCMbuildstep"
                            },
                            "html": "Allows to run build steps before SCM checkout.\n     ",
                            "firstSentenceCommentText": "Allows to run build steps before SCM checkout.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.PreScmStepsContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        preScmSteps {\n            steps {\n                shell('echo Hello World')\n            }\n            failOnError()\n        }\n    }\n}\n"
                },
                {
                    "name": "rbenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubyVersion",
                                    "type": "String"
                                },
                                {
                                    "name": "rbenvClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "rbenv"
                            },
                            "html": "Specifies the rbenv wrapper to be used during job execution.\n     ",
                            "firstSentenceCommentText": "Specifies the rbenv wrapper to be used during job execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.RbenvContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        rbenv('2.1.2') {\n            ignoreLocalVersion()\n            gems('bundler', 'rake')\n        }\n    }\n}\n"
                },
                {
                    "name": "release",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "releaseClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "release"
                            },
                            "html": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.\n     ",
                            "firstSentenceCommentText": "Wrap the job with pre- and post-build steps which are only executed when a manual release build is triggered.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.ReleaseContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        release {\n            doNotKeepLog()\n            overrideBuildParameters()\n            parameters {\n                booleanParam('param', false, 'some boolean build parameter')\n            }\n            preBuildSteps {\n                shell(\"echo 'hello'\")\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "runOnSameNodeAs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "useSameWorkspace",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "plugin": {
                                "id": "job-node-stalker"
                            },
                            "html": "Build the job on the same node as another job and optionally use the same workspace as the other job.\n     ",
                            "firstSentenceCommentText": "Build the job on the same node as another job and optionally use the same workspace as the other job."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        runOnSameNodeAs('project-a', true)\n    }\n}\n"
                },
                {
                    "name": "rvm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rubySpecification",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "rvm"
                            },
                            "html": "Configures the job to prepare a Ruby environment controlled by RVM for the build.\n     ",
                            "firstSentenceCommentText": "Configures the job to prepare a Ruby environment controlled by RVM for the build."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        rvm('ruby-1.9.3')\n    }\n}\n"
                },
                {
                    "name": "sshAgent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "credentials",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "ssh-agent"
                            },
                            "html": "Provide SSH credentials to builds via a ssh-agent in Jenkins.\n     ",
                            "firstSentenceCommentText": "Provide SSH credentials to builds via a ssh-agent in Jenkins."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        sshAgent('deployment-key')\n    }\n}\n"
                },
                {
                    "name": "timeout",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "timeoutClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "build-timeout",
                                "minimumVersion": "1.12"
                            },
                            "html": "Add a timeout to the build job.\n\n Defaults to a absolute timeout with a maximum build time of 3 minutes.\n     ",
                            "firstSentenceCommentText": "Add a timeout to the build job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.TimeoutContext"
                        }
                    ],
                    "examples": "// defines an absolute timeout with a maximum build time of 3 minutes\njob('example-1') {\n    wrappers {\n        timeout()\n    }\n}\n\n// defines an absolute timeout with a maximum build time of one hour\njob('example-2') {\n    wrappers {\n        timeout {\n            absolute(60)\n        }\n    }\n}\n\n// the build will timeout when it take 3 times longer than the reference build duration of the last 3 builds\n// use a 30 minutes timeout when no successful builds available as reference\njob('example-3') {\n    wrappers {\n        timeout {\n            elastic(300, 3, 30)\n        }\n    }\n}\n\n// abort when the build is likely to be stuck\njob('example-4') {\n    wrappers {\n        timeout {\n            likelyStuck()\n        }\n    }\n}\n\n// timeout if there has been no activity for 180 seconds\n// then fail the build and set a build description\njob('example-5') {\n    wrappers {\n        timeout {\n            noActivity(180)\n            failBuild()\n            writeDescription('Build failed due to timeout after {0} minutes')\n        }\n    }\n}\n"
                },
                {
                    "name": "timestamps",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "plugin": {
                                "id": "timestamper"
                            },
                            "html": "Adds timestamps to the console log.",
                            "firstSentenceCommentText": "Adds timestamps to the console log."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        timestamps()\n    }\n}\n"
                },
                {
                    "name": "toolenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "tools",
                                    "type": "String..."
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "toolenv"
                            },
                            "html": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment.\n     ",
                            "firstSentenceCommentText": "Downloads the specified tools, if needed, and puts the path to each of them in the build's environment."
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        toolenv('Ant 1.8.2', 'Maven 3.1')\n    }\n}\n"
                },
                {
                    "name": "xvfb",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "installation",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "xvfb"
                            },
                            "html": "Controls the Xvfb virtual frame buffer X11 server.\n     ",
                            "firstSentenceCommentText": "Controls the Xvfb virtual frame buffer X11 server.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvfbContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        xvfb('default') {\n            screen('1920x1080x24')\n        }\n    }\n}\n"
                },
                {
                    "name": "xvnc",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "xvncClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "xvnc"
                            },
                            "html": "Run a Xvnc session during a build.\n     ",
                            "firstSentenceCommentText": "Run a Xvnc session during a build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.XvncContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        xvnc {\n            takeScreenshot()\n            useXauthority(false)\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.MavenJob": {
            "type": "javaposse.jobdsl.dsl.jobs.MavenJob",
            "methods": [
                {
                    "name": "archivingDisabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "archivingDisabled",
                                    "type": "boolean"
                                }
                            ],
                            "html": "If set, Jenkins  will not automatically archive all artifacts generated by this project, defaults to\n <code>false</code>.\n     ",
                            "firstSentenceCommentText": "If set, Jenkins  will not automatically archive all artifacts generated by this project, defaults to\n false."
                        }
                    ],
                    "examples": "mavenJob('example') {\n    archivingDisabled(true)\n}\n"
                },
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disableDownstreamTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableDownstreamTrigger",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "If set, Jenkins will not automatically trigger downstream builds, defaults to <code>false</code>.\n     ",
                            "firstSentenceCommentText": "If set, Jenkins will not automatically trigger downstream builds, defaults to false."
                        }
                    ],
                    "examples": "mavenJob('example') {\n    disableDownstreamTrigger()\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "goals",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "goals",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the goals to execute including other command line options.\n When specified multiple times, the goals and options will be concatenated.\n     ",
                            "firstSentenceCommentText": "Specifies the goals to execute including other command line options.\n "
                        }
                    ],
                    "examples": "mavenJob('example-1') {\n    goals('clean install -DskipTests')\n}\n\nmavenJob('example-2') {\n    goals('clean')\n    goals('install')\n    goals('-DskipTests')\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "localRepository",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.common.MavenContext.LocalRepositoryLocation",
                                    "enumConstants": [
                                        "LocalToExecutor",
                                        "LocalToWorkspace"
                                    ]
                                }
                            ],
                            "deprecated": true,
                            "availableSince": "1.17",
                            "html": "Set to use isolated local Maven repositories. Defaults to <TT>LocalRepositoryLocation.LocalToExecutor</TT>.\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "location",
                                    "type": "javaposse.jobdsl.dsl.helpers.LocalRepositoryLocation",
                                    "enumConstants": [
                                        "LOCAL_TO_EXECUTOR",
                                        "LOCAL_TO_WORKSPACE"
                                    ]
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "Set to use isolated local Maven repositories. Defaults to <TT>LocalRepositoryLocation.LOCAL_TO_EXECUTOR</TT>.\n     ",
                            "firstSentenceCommentText": "Set to use isolated local Maven repositories. "
                        }
                    ],
                    "examples": "mavenJob('example') {\n    localRepository(LocalRepositoryLocation.LOCAL_TO_WORKSPACE)\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "mavenInstallation",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.20",
                            "html": "Selects which installation of Maven to use.\n     ",
                            "firstSentenceCommentText": "Selects which installation of Maven to use."
                        }
                    ],
                    "examples": "mavenJob('example-1') {\n    mavenInstallation('Maven 3.2.5')\n}\n"
                },
                {
                    "name": "mavenOpts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "mavenOpts",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the JVM options needed when launching Maven as an external process.\n\n When specified multiple times, the options will be concatenated.\n     ",
                            "firstSentenceCommentText": "Specifies the JVM options needed when launching Maven as an external process."
                        }
                    ],
                    "examples": "mavenJob('example-1') {\n    mavenOpts('-Xmx1536m -XX:MaxPermSize=384m -XX:ReservedCodeCacheSize=64m')\n}\n\nmavenJob('example-2') {\n    mavenOpts('-Xmx1536m')\n    mavenOpts('-XX:MaxPermSize=384m')\n    mavenOpts('-XX:ReservedCodeCacheSize=64m')\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "postBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "html": "Adds build steps to run after the Maven execution.\n     ",
                            "firstSentenceCommentText": "Adds build steps to run after the Maven execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "thresholdName",
                                    "type": "String"
                                },
                                {
                                    "name": "postBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Adds build steps to run after the Maven execution. The steps will only run of the build result is equal or\n better than the threshold.\n\n The threshold can be one of three values: <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT> or <TT>'FAILURE'</TT>.\n     ",
                            "firstSentenceCommentText": "Adds build steps to run after the Maven execution. ",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "mavenJob('example-1') {\n    postBuildSteps {\n        shell(\"echo 'run after Maven'\")\n    }\n}\n\n// run post build steps only when the build succeeds\nmavenJob('example-2') {\n    postBuildSteps('SUCCESS') {\n        shell(\"echo 'run after Maven'\")\n    }\n}\n"
                },
                {
                    "name": "preBuildSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "preBuildClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "html": "Adds build steps to run before the Maven execution.\n     ",
                            "firstSentenceCommentText": "Adds build steps to run before the Maven execution.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "mavenJob('example') {\n    preBuildSteps {\n        shell(\"echo 'run before Maven'\")\n    }\n}\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "providedSettings",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "settingsName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Use managed Maven settings.\n     ",
                            "firstSentenceCommentText": "Use managed Maven settings."
                        }
                    ],
                    "examples": "mavenJob('example') {\n    providedSettings('central-mirror')\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.MavenPublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "rootPOM",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rootPOM",
                                    "type": "String"
                                }
                            ],
                            "html": "Specifies the path to the root POM.\n     ",
                            "firstSentenceCommentText": "Specifies the path to the root POM."
                        }
                    ],
                    "examples": "mavenJob('example-1') {\n    rootPOM('sub-project/pom.xml')\n}\n"
                },
                {
                    "name": "runHeadless",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "runHeadless",
                                    "type": "boolean"
                                }
                            ],
                            "html": "Set to allow Jenkins to configure the build process in headless mode, defaults to <code>false</code>.\n     ",
                            "firstSentenceCommentText": "Set to allow Jenkins to configure the build process in headless mode, defaults to false."
                        }
                    ],
                    "examples": "mavenJob('example') {\n    runHeadless(true)\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.MavenTriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.MavenWrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext",
            "methods": [
                {
                    "name": "abortAllJobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "abortAllJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.37",
                            "plugin": {
                                "id": "jenkins-multijob-plugin",
                                "minimumVersion": "1.14"
                            },
                            "html": "Kills all sub jobs and the phase job if this sub job is killed. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Kills all sub jobs and the phase job if this sub job is killed. "
                        }
                    ]
                },
                {
                    "name": "boolParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "defaultValue",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a boolean parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a boolean parameter. "
                        }
                    ]
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "configureClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "html": "Allows direct manipulation of the generated XML. The <TT>com.tikal.jenkins.plugins.multijob.PhaseJobsConfig</TT>\n node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML. "
                        }
                    ]
                },
                {
                    "name": "currentJobParameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "currentJobParameters",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Copies parameters from the current build, except for file parameters.",
                            "firstSentenceCommentText": "Copies parameters from the current build, except for file parameters."
                        }
                    ]
                },
                {
                    "name": "disableJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "disableJob",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "jenkins-multijob-plugin",
                                "minimumVersion": "1.11"
                            },
                            "html": "Disables the job. Defaults to <TT>false</TT>.\n     ",
                            "firstSentenceCommentText": "Disables the job. "
                        }
                    ]
                },
                {
                    "name": "exposedScm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "exposedScm",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Defaults to <TT>true</TT>.",
                            "firstSentenceCommentText": "Defaults to true."
                        }
                    ]
                },
                {
                    "name": "fileParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "propertyFile",
                                    "type": "String"
                                },
                                {
                                    "name": "failTriggerOnMissing",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Reads parameters from a properties file.",
                            "firstSentenceCommentText": "Reads parameters from a properties file."
                        }
                    ]
                },
                {
                    "name": "gitRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "combineQueuedCommits",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Passes the Git commit that was used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Git commit that was used in this build to the downstream builds."
                        }
                    ]
                },
                {
                    "name": "jobName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines the name of the job.",
                            "firstSentenceCommentText": "Defines the name of the job."
                        }
                    ]
                },
                {
                    "name": "killPhaseCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "killPhaseCondition",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "jenkins-multijob-plugin",
                                "minimumVersion": "1.11"
                            },
                            "html": "Kills the phase when a condition is met.\n\n Must be one of <TT>'FAILURE'</TT> (default), <TT>'NEVER'</TT> or [",
                            "firstSentenceCommentText": "Kills the phase when a condition is met."
                        }
                    ]
                },
                {
                    "name": "matrixParam",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filter",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "html": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run.",
                            "firstSentenceCommentText": "Specifies a Groovy filter expression that restricts the subset of combinations that the downstream project will\n run."
                        }
                    ]
                },
                {
                    "name": "nodeLabel",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "paramName",
                                    "type": "String"
                                },
                                {
                                    "name": "nodeLabel",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true,
                            "availableSince": "1.26",
                            "html": "Defines where the target job should be executed, the value must match either a label or a node name.\n     ",
                            "firstSentenceCommentText": "Defines where the target job should be executed, the value must match either a label or a node name."
                        }
                    ]
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Adds parameter values for the job.",
                            "firstSentenceCommentText": "Adds parameter values for the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.DownstreamTriggerParameterContext"
                        }
                    ]
                },
                {
                    "name": "prop",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "key",
                                    "type": "Object"
                                },
                                {
                                    "name": "value",
                                    "type": "Object"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds a parameter. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds a parameter. "
                        }
                    ]
                },
                {
                    "name": "props",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "map",
                                    "type": "Map<String, String>"
                                }
                            ],
                            "deprecated": true,
                            "html": "Adds parameters. Can be called multiple times to add more parameters.",
                            "firstSentenceCommentText": "Adds parameters. "
                        }
                    ]
                },
                {
                    "name": "sameNode",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "nodeParam",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "deprecated": true,
                            "html": "Uses the same node for the triggered builds that was used for this build.",
                            "firstSentenceCommentText": "Uses the same node for the triggered builds that was used for this build."
                        }
                    ]
                },
                {
                    "name": "subversionRevision",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "includeUpstreamParameters",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "deprecated": true,
                            "html": "Passes the Subversion revisions that were used in this build to the downstream builds.",
                            "firstSentenceCommentText": "Passes the Subversion revisions that were used in this build to the downstream builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.PhaseContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.PhaseContext",
            "methods": [
                {
                    "name": "continuationCondition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "continuationCondition",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines how to decide the status of the whole MultiJob phase.",
                            "firstSentenceCommentText": "Defines how to decide the status of the whole MultiJob phase."
                        }
                    ]
                },
                {
                    "name": "job",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "phaseJobClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a job to the phase.",
                            "firstSentenceCommentText": "Adds a job to the phase.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "currentJobParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "phaseJobClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a job to the phase.",
                            "firstSentenceCommentText": "Adds a job to the phase.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "currentJobParameters",
                                    "type": "boolean"
                                },
                                {
                                    "name": "exposedScm",
                                    "type": "boolean"
                                },
                                {
                                    "name": "phaseJobClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a job to the phase.",
                            "firstSentenceCommentText": "Adds a job to the phase.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseJobContext"
                        }
                    ]
                },
                {
                    "name": "phaseName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "phaseName",
                                    "type": "String"
                                }
                            ],
                            "html": "Defines the name of the MultiJob phase.",
                            "firstSentenceCommentText": "Defines the name of the MultiJob phase."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.step.MultiJobStepContext": {
            "type": "javaposse.jobdsl.dsl.helpers.step.MultiJobStepContext",
            "methods": [
                {
                    "name": "ant",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "buildFile",
                                    "type": "String"
                                },
                                {
                                    "name": "antInstallation",
                                    "type": "String"
                                },
                                {
                                    "name": "antClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "ant"
                            },
                            "html": "Invokes an Ant build script.",
                            "firstSentenceCommentText": "Invokes an Ant build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.AntContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        ant {\n            target('test')\n            targets(['publish', 'deploy'])\n            prop('logging', 'info')\n            props('test.threads': 10, 'input.status': 'release')\n            buildFile('dir1/build.xml')\n            javaOpt('-Xmx1g')\n            javaOpts(['-Dprop2=value2', '-Dprop3=value3'])\n            antInstallation('Ant 1.8')\n        }\n    }\n}\n"
                },
                {
                    "name": "batchFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "html": "Runs a Windows batch script.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.",
                            "firstSentenceCommentText": "Runs a Windows batch script."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        batchFile('echo Hello World!')\n        batchFile(readFileFromWorkspace('build.bat'))\n    }\n}\n"
                },
                {
                    "name": "buildDescription",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regexp",
                                    "type": "String"
                                },
                                {
                                    "name": "description",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "description-setter",
                                "minimumVersion": "1.9"
                            },
                            "html": "Set a build description based upon a regular expression test of the log file.\n     ",
                            "firstSentenceCommentText": "Set a build description based upon a regular expression test of the log file."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        buildDescription(/.*\\[INFO\\] Uploading project information for [^\\s]* ([^\\s]*)/)\n    }\n}\n"
                },
                {
                    "name": "clangScanBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.37",
                            "plugin": {
                                "id": "clang-scanbuild-plugin",
                                "minimumVersion": "1.6"
                            },
                            "html": "Executes Clang scan-build against Mac or iPhone XCode projects or other scan-build compatible build tools.\n\n The <a href='../../../../../ClangScanBuildContext.html#workspace(java.lang.String)' title='workspace'>workspace</a>,\n <a href='../../../../../ClangScanBuildContext.html#scheme(java.lang.String)' title='scheme'>scheme</a> and\n <a href='../../../../../ClangScanBuildContext.html#clangInstallationName(java.lang.String)' title='clangInstallationName'>clangInstallationName</a> options are\n mandatory.\n     ",
                            "firstSentenceCommentText": "Executes Clang scan-build against Mac or iPhone XCode projects or other scan-build compatible build tools.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ClangScanBuildContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        clangScanBuild {\n            workspace('Mobile.xcworkspace')\n            scheme('mobile.de')\n            clangInstallationName('Clang Static Code Analyzer')\n            targetSdk('iphonesimulator')\n            configuration('Debug')\n            scanBuildArgs('--use-analyzer Xcode')\n            xcodeBuildArgs('-derivedDataPath $WORKSPACE/build')\n        }\n    }\n}\n"
                },
                {
                    "name": "conditionalSteps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "conditionalStepsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "conditional-buildstep"
                            },
                            "html": "Wraps any number of other build steps, controlling their execution based on a defined condition.\n     ",
                            "firstSentenceCommentText": "Wraps any number of other build steps, controlling their execution based on a defined condition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ConditionalStepsContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    steps {\n        conditionalSteps {\n            condition {\n                stringsMatch('${SOME_PARAMETER}', 'pants', false)\n            }\n            runner('Fail')\n            steps {\n                shell(\"echo 'just one step'\")\n            }\n        }\n    }\n}\n\njob('example-2') {\n    steps {\n        conditionalSteps {\n            condition {\n                time(9, 0, 13, 0, false)\n            }\n            runner('Unstable')\n            steps {\n                shell(\"echo 'a first step'\")\n                ant('build') {\n                    target('test')\n                }\n            }\n        }\n    }\n}\n\njob('example-3') {\n    steps {\n        conditionalSteps {\n            condition {\n                and {\n                    status('ABORTED', 'FAILURE')\n                } {\n                    not {\n                        fileExists('script.sh', BaseDir.WORKSPACE)\n                    }\n                }\n            }\n            runner('Unstable')\n            steps {\n                shell(\"echo 'a first step'\")\n                ant('build') {\n                    target('test')\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "copyArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "includeGlob",
                                    "type": "String"
                                },
                                {
                                    "name": "targetPath",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "flattenFiles",
                                    "type": "boolean"
                                },
                                {
                                    "name": "optionalAllowed",
                                    "type": "boolean"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "html": "Copies artifacts from another project.",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactSelectorContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "copyArtifactClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.33",
                            "plugin": {
                                "id": "copyartifact",
                                "minimumVersion": "1.26"
                            },
                            "html": "Copies artifacts from another project.\n     ",
                            "firstSentenceCommentText": "Copies artifacts from another project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.CopyArtifactContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        copyArtifacts('upstream') {\n            includePatterns('*.xml', '*.properties')\n            excludePatterns('test.xml', 'test.properties')\n            targetDirectory('files')\n            flatten()\n            optional()\n            buildSelector {\n                latestSuccessful(true)\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "criticalBlock",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "Exclusion"
                            },
                            "html": "Contains the build steps of the critical zone defined by the\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.\n     ",
                            "firstSentenceCommentText": "Contains the build steps of the critical zone defined by the\n javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext#exclusionResources(java.lang.Iterable) wrapper.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        exclusionResources('first', 'second')\n    }\n    steps {\n        criticalBlock {\n            shell('echo Hello World!')\n        }\n    }\n}\n"
                },
                {
                    "name": "debianPackage",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "debian-package-builder",
                                "minimumVersion": "1.6.6"
                            },
                            "html": "Builds Debian (.deb) packages.\n     ",
                            "firstSentenceCommentText": "Builds Debian (.deb) packages.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DebianContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        debianPackage('module') {\n            generateChangelog()\n        }\n    }\n}\n"
                },
                {
                    "name": "downstreamParameterized",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "downstreamClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "parameterized-trigger"
                            },
                            "html": "Triggers new parametrized builds.\n     ",
                            "firstSentenceCommentText": "Triggers new parametrized builds.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DownstreamContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        downstreamParameterized {\n            trigger('Project1, Project2') {\n                block {\n                    buildStepFailure('FAILURE')\n                    failure ('FAILURE')\n                    unstable('UNSTABLE')\n                }\n                parameters {\n                    predefinedProp('key1', 'value1')\n                    predefinedProps([key2: 'value2', key3: 'value3'])\n                }\n            }\n            trigger('Project2') {\n                parameters {\n                    currentBuild()\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "dsl",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "dslClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Processes Job DSL scripts.\n     ",
                            "firstSentenceCommentText": "Processes Job DSL scripts.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.DslContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "scriptText",
                                    "type": "String"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Processes Job DSL scripts.\n     ",
                            "firstSentenceCommentText": "Processes Job DSL scripts."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "externalScripts",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "removedJobAction",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "ignoreExisting",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Processes Job DSL scripts.\n     ",
                            "firstSentenceCommentText": "Processes Job DSL scripts."
                        }
                    ],
                    "examples": "job('example-1') {\n    steps {\n        dsl {\n            external('projectA.groovy', 'projectB.groovy')\n            external('projectC.groovy')\n            removeAction('DISABLE')\n            ignoreExisting()\n            additionalClasspath('lib')\n        }\n    }\n}\n\njob('example-2') {\n    steps {\n        dsl(['projectA.groovy', 'projectB.groovy'], 'DELETE')\n    }\n}\n\njob('example-3') {\n    steps {\n        dsl {\n            text(readFileFromWorkspace('more-jobs.groovy'))\n            removeAction('DELETE')\n        }\n    }\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.21",
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Injects environment variables into the build.\n     ",
                            "firstSentenceCommentText": "Injects environment variables into the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepEnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        environmentVariables {\n            env('ONE', '1')\n            envs(FOO: 'bar', TEST: '123')\n            propertiesFile('env.properties')\n        }\n    }\n}\n"
                },
                {
                    "name": "gradle",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "gradleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.27",
                            "plugin": {
                                "id": "gradle"
                            },
                            "html": "Invokes a Gradle build script.\n     ",
                            "firstSentenceCommentText": "Invokes a Gradle build script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GradleContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "switches",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapper",
                                    "type": "Boolean",
                                    "defaultValue": "true"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes a Gradle build script.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\n <TT>hudson.plugins.gradle.Gradle</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Gradle build script."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        gradle('check')\n        gradle {\n            tasks('clean')\n            tasks('check')\n            switches('--info')\n        }\n    }\n}\n"
                },
                {
                    "name": "grails",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Builds a Grails project.",
                            "firstSentenceCommentText": "Builds a Grails project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Builds a Grails project.",
                            "firstSentenceCommentText": "Builds a Grails project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "useWrapper",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                },
                                {
                                    "name": "grailsClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "grails"
                            },
                            "html": "Builds a Grails project.",
                            "firstSentenceCommentText": "Builds a Grails project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GrailsContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        grails {\n            target('clean build')\n            useWrapper(true)\n        }\n    }\n}\n"
                },
                {
                    "name": "groovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        groovyCommand(readFileFromWorkspace('generateReports.groovy')) {\n            groovyInstallation('groovy-2.4.2')\n            scriptParam('target/reports')\n        }\n    }\n}\n"
                },
                {
                    "name": "groovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyName",
                                    "type": "String"
                                },
                                {
                                    "name": "groovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a Groovy script.",
                            "firstSentenceCommentText": "Executes a Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.GroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        groovyScriptFile('generateReports.groovy') {\n            groovyInstallation('groovy-2.4.2')\n            scriptParam('target/reports')\n        }\n    }\n}\n"
                },
                {
                    "name": "httpRequest",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "requestUrl",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "http_request"
                            },
                            "html": "Adds a step which performs a HTTP request.\n     ",
                            "firstSentenceCommentText": "Adds a step which performs a HTTP request.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.HttpRequestContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        httpRequest('http://www.example.com') {\n            httpMode('POST')\n            authentication('Credentials')\n            returnCodeBuildRelevant()\n            logResponseBody()\n        }\n    }\n}\n"
                },
                {
                    "name": "maven",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "maven-plugin"
                            },
                            "html": "Invokes a Maven build.\n     ",
                            "firstSentenceCommentText": "Invokes a Maven build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.MavenContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "targets",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "pom",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Invokes a Maven build.\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\n <TT>hudson.tasks.Maven</TT> node is passed into the configure block.",
                            "firstSentenceCommentText": "Invokes a Maven build."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        maven('verify')\n        maven('clean verify', 'module-a/pom.xml')\n        maven {\n            goals('clean')\n            goals('verify')\n            mavenOpts('-Xms256m')\n            mavenOpts('-Xmx512m')\n            localRepository(LocalRepositoryLocation.LOCAL_TO_WORKSPACE)\n            properties(skipTests: true)\n            mavenInstallation('Maven 3.1.1')\n            providedSettings('central-mirror')\n        }\n    }\n}\n"
                },
                {
                    "name": "nodejsCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "commandScript",
                                    "type": "String"
                                },
                                {
                                    "name": "installation",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "nodejs"
                            },
                            "html": "Executes a NodeJS script. Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read scripts from a file.\n     ",
                            "firstSentenceCommentText": "Executes a NodeJS script. "
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        nodejsCommand('console.log(\"Hello World!\")', 'Node 0.12.0')\n    }\n}\n"
                },
                {
                    "name": "phase",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "phaseContext",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a MultiJob phase.",
                            "firstSentenceCommentText": "Adds a MultiJob phase.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "phaseName",
                                    "type": "String"
                                },
                                {
                                    "name": "phaseContext",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Adds a MultiJob phase.",
                            "firstSentenceCommentText": "Adds a MultiJob phase.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "continuationCondition",
                                    "type": "String"
                                },
                                {
                                    "name": "phaseClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a MultiJob phase.",
                            "firstSentenceCommentText": "Adds a MultiJob phase.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PhaseContext"
                        }
                    ],
                    "examples": "multiJob('example') {\n    steps {\n        phase {\n            phaseName 'Second'\n            job('JobZ') {\n                parameters {\n                    propertiesFile('my1.properties')\n                }\n            }\n        }\n        phase('Third') {\n            job('JobA')\n            job('JobB')\n            job('JobC')\n        }\n        phase('Fourth') {\n            job('JobD', false, true) {\n                parameters {\n                    booleanParam('cParam', true)\n                    propertiesFile('my.properties')\n                    sameNode()\n                    matrixSubset('it.name==\"hello\"')\n                    subversionRevision()\n                    gitRevision()\n                    predefinedProp('prop1', 'value1')\n                    nodeLabel('lParam', 'my_nodes')\n                }\n                configure { phaseJobConfig ->\n                    phaseJobConfig / enableCondition << 'true'\n                    phaseJobConfig / condition << '${RUN_JOB} == \"true\"'\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "powerShell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.32",
                            "plugin": {
                                "id": "powershell",
                                "minimumVersion": "1.2"
                            },
                            "html": "Runs a Windows PowerShell script.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.\n     ",
                            "firstSentenceCommentText": "Runs a Windows PowerShell script."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        powerShell('Write-Output \"Hello World!\"')\n        powerShell(readFileFromWorkspace('build.ps1'))\n    }\n}\n"
                },
                {
                    "name": "prerequisite",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectList",
                                    "type": "String",
                                    "defaultValue": "''"
                                },
                                {
                                    "name": "warningOnly",
                                    "type": "boolean",
                                    "defaultValue": "false"
                                }
                            ],
                            "availableSince": "1.19",
                            "plugin": {
                                "id": "prereq-buildstep"
                            },
                            "html": "Verify the state of other jobs and fails the build if needed.\n     ",
                            "firstSentenceCommentText": "Verify the state of other jobs and fails the build if needed."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        prerequisite('project-a, project-b')\n    }\n}\n"
                },
                {
                    "name": "publishOverSsh",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "publishOverSshClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.28",
                            "plugin": {
                                "id": "publish-over-ssh"
                            },
                            "html": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.\n     ",
                            "firstSentenceCommentText": "Send artifacts to an SSH server (using SFTP) and/or execute commands over SSH.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.common.PublishOverSshContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        publishOverSsh {\n            server('server-name') {\n                transferSet {\n                    sourceFiles('file')\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "python",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "shiningpanda",
                                "minimumVersion": "0.21"
                            },
                            "html": "Builds the project with a declared Python installation.\n     ",
                            "firstSentenceCommentText": "Builds the project with a declared Python installation.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.PythonContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        python {\n            command('python setup.py')\n        }\n    }\n}\n"
                },
                {
                    "name": "rake",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "Invokes Rake.\n     ",
                            "firstSentenceCommentText": "Invokes Rake.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "tasks",
                                    "type": "String"
                                },
                                {
                                    "name": "rakeClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "rake"
                            },
                            "html": "Invokes Rake.\n     ",
                            "firstSentenceCommentText": "Invokes Rake.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RakeContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        rake('task')\n        rake('first') {\n            task('second')\n            tasks(['third', 'fourth'])\n            file('/opt/app/Rakefile')\n            installation('ruby-2.0.0-p481')\n            libDir('./rakelib')\n            workingDir('/opt/app')\n            bundleExec()\n            silent()\n        }\n    }\n}\n"
                },
                {
                    "name": "remoteTrigger",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "remoteJenkins",
                                    "type": "String"
                                },
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.22",
                            "plugin": {
                                "id": "Parameterized-Remote-Trigger"
                            },
                            "html": "Triggers a job on another Jenkins instance.\n     ",
                            "firstSentenceCommentText": "Triggers a job on another Jenkins instance.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.ParameterizedRemoteTriggerContext"
                        }
                    ],
                    "examples": "// start the job 'test-flow' on the Jenkins instance named 'test-ci' without parameters\njob('example-1') {\n    steps {\n        remoteTrigger('test-ci', 'test-flow')\n    }\n}\n\n// start the job 'test-flow' on the Jenkins instance named 'test-ci' with three parameters\n// and block until the build completes\njob('example-2') {\n    steps {\n        remoteTrigger('test-ci', 'test-flow') {\n            parameter('VERSION', '$PIPELINE_VERSION')\n            parameters(BRANCH: 'feature-A', STAGING_REPO_ID: '41234232')\n            blockBuildUntilComplete()\n        }\n    }\n}\n"
                },
                {
                    "name": "resolveArtifacts",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "repositoryConnectorClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.29",
                            "plugin": {
                                "id": "repository-connector"
                            },
                            "html": "Resolves artifacts from a Maven repository.\n     ",
                            "firstSentenceCommentText": "Resolves artifacts from a Maven repository.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.RepositoryConnectorContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        resolveArtifacts {\n            failOnError()\n            snapshotUpdatePolicy('always')\n            targetDirectory('lib')\n            artifact {\n                groupId('org.slf4j')\n                artifactId('slf4j-api')\n                version('[1.7.5,1.7.6]')\n            }\n            artifact {\n                groupId('ch.qos.logback')\n                artifactId('logback-classic')\n                version('1.1.1')\n                classifier('sources')\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "sbt",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sbtName",
                                    "type": "String"
                                },
                                {
                                    "name": "actions",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "sbtFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "jvmFlags",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "subdirPath",
                                    "type": "String",
                                    "defaultValue": "null"
                                },
                                {
                                    "name": "configure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.16",
                            "plugin": {
                                "id": "sbt"
                            },
                            "html": "Invokes the Scala Build Tool (SBT).\n\n The closure parameter expects a configure block for direct manipulation of the generated XML. The\n <TT>org.jvnet.hudson.plugins.SbtPluginBuilder</TT> node is passed into the configure block.\n     ",
                            "firstSentenceCommentText": "Invokes the Scala Build Tool (SBT)."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        sbt('SBT 0.12.3', 'test', '-Dsbt.log.noformat=true', '-Xmx2G -Xms512M', 'subproject')\n    }\n}\n"
                },
                {
                    "name": "setBuildResult",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "result",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.35",
                            "plugin": {
                                "id": "fail-the-build-plugin",
                                "minimumVersion": "1.0"
                            },
                            "html": "Set the build status.\n\n Must be one of <TT>'SUCCESS'</TT>, <TT>'UNSTABLE'</TT>, <TT>'FAILURE'</TT>, <TT>'ABORTED'</TT> or <TT>'CYCLE'</TT>.\n     ",
                            "firstSentenceCommentText": "Set the build status."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        setBuildResult('UNSTABLE')\n    }\n}\n"
                },
                {
                    "name": "shell",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                }
                            ],
                            "html": "Runs a shell script.\n\n Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String) to read\n the script from a file.",
                            "firstSentenceCommentText": "Runs a shell script."
                        }
                    ],
                    "examples": "job('example') {\n  steps {\n      shell('echo Hello World!')\n      shell(readFileFromWorkspace('build.sh'))\n  }\n}\n"
                },
                {
                    "name": "systemGroovyCommand",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "command",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a system Groovy script.",
                            "firstSentenceCommentText": "Executes a system Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        systemGroovyCommand(readFileFromWorkspace('disconnect-slave.groovy')) {\n            binding('computerName', 'ubuntu-04')\n        }\n    }\n}\n"
                },
                {
                    "name": "systemGroovyScriptFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "fileName",
                                    "type": "String"
                                },
                                {
                                    "name": "systemGroovyClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Executes a system Groovy script.",
                            "firstSentenceCommentText": "Executes a system Groovy script.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.SystemGroovyContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        systemGroovyCommand('disconnect-slave.groovy') {\n            binding('computerName', 'ubuntu-04')\n        }\n    }\n}\n"
                },
                {
                    "name": "vSpherePowerOff",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "This build step will power off the specified VM.\n     ",
                            "firstSentenceCommentText": "This build step will power off the specified VM."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        vSpherePowerOff('vsphere.acme.org', 'foo')\n    }\n}\n"
                },
                {
                    "name": "vSpherePowerOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "This build step will power on the specified VM.\n     ",
                            "firstSentenceCommentText": "This build step will power on the specified VM."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        vSpherePowerOn('vsphere.acme.org', 'foo')\n    }\n}\n"
                },
                {
                    "name": "vSphereRevertToSnapshot",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "server",
                                    "type": "String"
                                },
                                {
                                    "name": "vm",
                                    "type": "String"
                                },
                                {
                                    "name": "snapshot",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.25",
                            "html": "This build step will revert the specified VM to the specified snapshot.\n     ",
                            "firstSentenceCommentText": "This build step will revert the specified VM to the specified snapshot."
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        vSphereRevertToSnapshot('vsphere.acme.org', 'foo', 'clean')\n    }\n}\n"
                },
                {
                    "name": "virtualenv",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "shiningpanda",
                                "minimumVersion": "0.21"
                            },
                            "html": "Creates a virtualenv to build the project.",
                            "firstSentenceCommentText": "Creates a virtualenv to build the project.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.VirtualenvContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        virtualenv {\n            name('venv')\n            command('pip install tox')\n            clear()\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.MultiJob": {
            "type": "javaposse.jobdsl.dsl.jobs.MultiJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.MultiJobStepContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        shell('echo START')\n        gradle('check')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.NestedViewColumnsContext": {
            "type": "javaposse.jobdsl.dsl.views.NestedViewColumnsContext",
            "methods": [
                {
                    "name": "status",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a column showing the status of the last build.",
                            "firstSentenceCommentText": "Adds a column showing the status of the last build."
                        }
                    ]
                },
                {
                    "name": "weather",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "html": "Adds a weather report showing the aggregated status of recent builds.",
                            "firstSentenceCommentText": "Adds a weather report showing the aggregated status of recent builds."
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.ListViewSectionContext": {
            "type": "javaposse.jobdsl.dsl.views.ListViewSectionContext",
            "methods": [
                {
                    "name": "alignment",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "alignment",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the alignment of the section. Either <TT>'CENTER'</TT>, <TT>'LEFT'</TT> or <TT>'RIGHT'</TT>.",
                            "firstSentenceCommentText": "Sets the alignment of the section. "
                        }
                    ]
                },
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.ColumnsContext"
                        }
                    ]
                },
                {
                    "name": "jobFilters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobFiltersClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Adds or removes jobs from the view by specifying filters.\n     ",
                            "firstSentenceCommentText": "Adds or removes jobs from the view by specifying filters.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobFiltersContext"
                        }
                    ]
                },
                {
                    "name": "jobs",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds jobs to the section.",
                            "firstSentenceCommentText": "Adds jobs to the section.",
                            "contextClass": "javaposse.jobdsl.dsl.views.JobsContext"
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the name of the section.",
                            "firstSentenceCommentText": "Sets the name of the section."
                        }
                    ]
                },
                {
                    "name": "width",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "width",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the with of the section. Either <TT>'FULL'</TT>, <TT>'HALF'</TT>, <TT>'THIRD'</TT> or <TT>'TWO_THIRDS'</TT>.",
                            "firstSentenceCommentText": "Sets the with of the section. "
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.SectionsContext": {
            "type": "javaposse.jobdsl.dsl.views.SectionsContext",
            "methods": [
                {
                    "name": "listView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "listViewSectionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a list view section.",
                            "firstSentenceCommentText": "Adds a list view section.",
                            "contextClass": "javaposse.jobdsl.dsl.views.ListViewSectionContext"
                        }
                    ],
                    "examples": "sectionedView('example') {\n    sections {\n        listView {\n            name('project-A')\n            width('HALF')\n            alignment('LEFT')\n            jobs {\n                regex('project-A-.*')\n            }\n            columns {\n                status()\n                weather()\n                name()\n                lastSuccess()\n                lastFailure()\n            }\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.SectionedView": {
            "type": "javaposse.jobdsl.dsl.views.SectionedView",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "sectionedView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "sectionedView('project-a') {\n    description('View for project A')\n}\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "sectionedView('example') {\n    filterBuildQueue()\n}\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ],
                    "examples": "sectionedView('example') {\n    filterExecutors()\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "sections",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sectionsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Creates a section containing a list of jobs.",
                            "firstSentenceCommentText": "Creates a section containing a list of jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.SectionsContext"
                        }
                    ],
                    "examples": "sectionedView('example') {\n    sections {\n        listView {\n            name('project-A')\n            width('HALF')\n            alignment('LEFT')\n            jobs {\n                regex('project-A-.*')\n            }\n            columns {\n                status()\n                weather()\n                name()\n                lastSuccess()\n                lastFailure()\n            }\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.View": {
            "type": "javaposse.jobdsl.dsl.View",
            "methods": [
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ]
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ]
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ]
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ]
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.NestedViewsContext": {
            "type": "javaposse.jobdsl.dsl.views.NestedViewsContext",
            "methods": [
                {
                    "name": "buildMonitorView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildMonitorView"
                        }
                    ]
                },
                {
                    "name": "buildPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildPipelineView"
                        }
                    ]
                },
                {
                    "name": "categorizedJobsView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.CategorizedJobsView"
                        }
                    ]
                },
                {
                    "name": "deliveryPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.DeliveryPipelineView"
                        }
                    ]
                },
                {
                    "name": "listView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.ListView"
                        }
                    ]
                },
                {
                    "name": "nestedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedView"
                        }
                    ]
                },
                {
                    "name": "sectionedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.31",
                            "contextClass": "javaposse.jobdsl.dsl.views.SectionedView"
                        }
                    ]
                },
                {
                    "name": "view",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "arguments",
                                    "type": "Map<String, Object>",
                                    "defaultValue": "[:]"
                                },
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "deprecated": true,
                            "contextClass": "javaposse.jobdsl.dsl.View"
                        }
                    ]
                }
            ]
        },
        "javaposse.jobdsl.dsl.views.NestedView": {
            "type": "javaposse.jobdsl.dsl.views.NestedView",
            "methods": [
                {
                    "name": "columns",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "columnsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds columns to the views. The view will have no columns by default.",
                            "firstSentenceCommentText": "Adds columns to the views. ",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedViewColumnsContext"
                        }
                    ],
                    "examples": "nestedView('project-A') {\n    columns {\n        status()\n        weather()\n    }\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "nestedView('example') {\n    configure { view ->\n        view / icon(class: 'org.example.MyViewIcon')\n    }\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "description",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the view.",
                            "firstSentenceCommentText": "Sets a description for the view."
                        }
                    ],
                    "examples": "nestedView('project-a') {\n    description('View for project A')\n}\n"
                },
                {
                    "name": "filterBuildQueue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterBuildQueue",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>. only jobs in this view will be shown in the build queue. Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true. only jobs in this view will be shown in the build queue. "
                        }
                    ],
                    "examples": "nestedView('example') {\n    filterBuildQueue()\n}\n"
                },
                {
                    "name": "filterExecutors",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filterExecutors",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "If set to <TT>true</TT>, only those build executors will be shown that could execute the jobs in this view.\n Defaults to <TT>false</TT>.",
                            "firstSentenceCommentText": "If set to true, only those build executors will be shown that could execute the jobs in this view.\n "
                        }
                    ],
                    "examples": "nestedView('example') {\n    filterExecutors()\n}\n"
                },
                {
                    "name": "name",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "deprecated": true
                        }
                    ]
                },
                {
                    "name": "views",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "viewsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds nested views.",
                            "firstSentenceCommentText": "Adds nested views.",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedViewsContext"
                        }
                    ],
                    "examples": "nestedView('project-a') {\n    views {\n        listView('overview') {\n            jobs {\n                regex(/project-A-.*/)\n            }\n            columns {\n                status()\n                weather()\n                name()\n                lastSuccess()\n                lastFailure()\n            }\n        }\n        buildPipelineView('pipeline') {\n            selectedJob('project-a-compile')\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.CpsContext": {
            "type": "javaposse.jobdsl.dsl.helpers.CpsContext",
            "methods": [
                {
                    "name": "sandbox",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "sandbox",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Enables the Groovy sandbox for the script.",
                            "firstSentenceCommentText": "Enables the Groovy sandbox for the script."
                        }
                    ]
                },
                {
                    "name": "script",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets the workflow DSL script. Use javaposse.jobdsl.dsl.DslFactory#readFileFromWorkspace(java.lang.String)\n to read the script from a file.",
                            "firstSentenceCommentText": "Sets the workflow DSL script. "
                        }
                    ],
                    "examples": "workflowJob('example') {\n    definition {\n        cps {\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.helpers.WorkflowDefinitionContext": {
            "type": "javaposse.jobdsl.dsl.helpers.WorkflowDefinitionContext",
            "methods": [
                {
                    "name": "cps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "cpsClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Defines a Groovy CPS DSL definition.",
                            "firstSentenceCommentText": "Defines a Groovy CPS DSL definition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.CpsContext"
                        }
                    ],
                    "examples": "workflowJob('example') {\n    definition {\n        cps {\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\n            sandbox()\n        }\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.jobs.WorkflowJob": {
            "type": "javaposse.jobdsl.dsl.jobs.WorkflowJob",
            "methods": [
                {
                    "name": "authorization",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "matrix-auth"
                            },
                            "html": "Creates permission records.",
                            "firstSentenceCommentText": "Creates permission records.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.JobAuthorizationContext"
                        }
                    ],
                    "examples": "// add a permission for the special authenticated group to see the workspace of the job\njob('example-1') {\n    authorization {\n        permission('hudson.model.Item.Workspace:authenticated')\n    }\n}\n\n// adds the build permission for the special anonymous user\njob('example-2') {\n    authorization {\n        permission('hudson.model.Item.Build', 'anonymous')\n    }\n}\n\n// add all permissions for user joe, blocking inheritance of the global\n// authorization matrix\njob('example-3') {\n    authorization {\n        permissionAll('joe')\n        blocksInheritance()\n    }\n}\n"
                },
                {
                    "name": "batchTask",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "script",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.24",
                            "plugin": {
                                "id": "batch-task"
                            },
                            "html": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n Can be called multiple times to add more batch tasks.\n     ",
                            "firstSentenceCommentText": "Adds batch tasks that are not regularly executed to projects, such as releases, integration, archiving.\n "
                        }
                    ],
                    "examples": "job('example') {\n    batchTask('upload', 'curl --upload-file build/dist.zip http://www.example.com/upload')\n    batchTask('release', readFileFromWorkspace('scripts/release.sh'))\n}\n"
                },
                {
                    "name": "blockOn",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectNames",
                                    "type": "Iterable<String>"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36\n",
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                }
                            ],
                            "html": "Block build if certain jobs are running.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "projectName",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "build-blocker-plugin"
                            },
                            "html": "Block build if certain jobs are running.\n\n Regular expressions can be used for the project names, e.g. <TT>/.*-maintenance/</TT> will match all maintenance\n jobs.\n     ",
                            "firstSentenceCommentText": "Block build if certain jobs are running.",
                            "contextClass": "javaposse.jobdsl.dsl.BuildBlockerContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    blockOn('project-a')\n}\n\njob('example-2') {\n    blockOn(['project-a', 'project-b']) {\n        blockLevel('GLOBAL')\n        scanQueueFor('ALL')\n    }\n}\n"
                },
                {
                    "name": "blockOnDownstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when downstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when downstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnDownstreamProjects()\n}\n"
                },
                {
                    "name": "blockOnUpstreamProjects",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.16",
                            "html": "Configures the job to block when upstream projects are building.\n     ",
                            "firstSentenceCommentText": "Configures the job to block when upstream projects are building."
                        }
                    ],
                    "examples": "job('example') {\n    blockOnUpstreamProjects()\n}\n"
                },
                {
                    "name": "checkoutRetryCount",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "times",
                                    "type": "int",
                                    "defaultValue": "3"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets the number of times the SCM checkout is retried on errors.\n     ",
                            "firstSentenceCommentText": "Sets the number of times the SCM checkout is retried on errors."
                        }
                    ],
                    "examples": "job('example') {\n    checkoutRetryCount(10)\n}\n"
                },
                {
                    "name": "compressBuildLog",
                    "signatures": [
                        {
                            "parameters": [
                                
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "compress-buildlog",
                                "minimumVersion": "1.0"
                            },
                            "html": "Compresses the log file after build completion.\n     ",
                            "firstSentenceCommentText": "Compresses the log file after build completion."
                        }
                    ],
                    "examples": "job('example') {\n    compressBuildLog()\n}\n"
                },
                {
                    "name": "concurrentBuild",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "allowConcurrentBuild",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.21",
                            "html": "Allows Jenkins to schedule and execute multiple builds concurrently.\n     ",
                            "firstSentenceCommentText": "Allows Jenkins to schedule and execute multiple builds concurrently."
                        }
                    ],
                    "examples": "job('example') {\n    concurrentBuild()\n}\n"
                },
                {
                    "name": "configure",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "withXmlClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows direct manipulation of the generated XML.\n     ",
                            "firstSentenceCommentText": "Allows direct manipulation of the generated XML."
                        }
                    ],
                    "examples": "job('example-1') {\n    configure { project ->\n        project / 'properties' / 'com.example.Test' {\n            'switch'('on')\n        }\n    }\n}\n"
                },
                {
                    "name": "customWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "workspacePath",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines that a project should use the given directory as a workspace instead of the default workspace location.\n     ",
                            "firstSentenceCommentText": "Defines that a project should use the given directory as a workspace instead of the default workspace location."
                        }
                    ],
                    "examples": "job('example') {\n    customWorkspace('/tmp/my-workspace')\n}\n"
                },
                {
                    "name": "definition",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "definitionClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds a workflow definition.",
                            "firstSentenceCommentText": "Adds a workflow definition.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.WorkflowDefinitionContext"
                        }
                    ],
                    "examples": "workflowJob('example') {\n    definition {\n        cps {\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\n            sandbox()\n        }\n    }\n}\n"
                },
                {
                    "name": "deliveryPipelineConfiguration",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "stageName",
                                    "type": "String"
                                },
                                {
                                    "name": "taskName",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Sets the stage name and task name for the delivery pipeline view. Each of the parameters can be set to\n <TT>null</TT> to use the job name as stage or task name.\n     ",
                            "firstSentenceCommentText": "Sets the stage name and task name for the delivery pipeline view. "
                        }
                    ],
                    "examples": "// use job name as task name\njob('example-1') {\n    deliveryPipelineConfiguration('qa')\n}\n\n// use custom task name\njob('example-2') {\n    deliveryPipelineConfiguration('qa', 'integration-tests')\n}\n"
                },
                {
                    "name": "description",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "descriptionString",
                                    "type": "String"
                                }
                            ],
                            "html": "Sets a description for the job.",
                            "firstSentenceCommentText": "Sets a description for the job."
                        }
                    ],
                    "examples": "job('example') {\n    description('My first job')\n}\n"
                },
                {
                    "name": "disabled",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "shouldDisable",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "html": "Disables the job, so that no new builds will be executed until the project is re-enabled.",
                            "firstSentenceCommentText": "Disables the job, so that no new builds will be executed until the project is re-enabled."
                        }
                    ],
                    "examples": "job('example') {\n    disabled()\n}\n"
                },
                {
                    "name": "displayName",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "displayName",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Sets a display name for the project.\n     ",
                            "firstSentenceCommentText": "Sets a display name for the project."
                        }
                    ],
                    "examples": "job('example') {\n    displayName('Job DSL Example Project')\n}\n"
                },
                {
                    "name": "environmentVariables",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "envClosure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        },
                        {
                            "parameters": [
                                {
                                    "name": "vars",
                                    "type": "Map<Object, Object>"
                                },
                                {
                                    "name": "envClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "plugin": {
                                "id": "envinject"
                            },
                            "html": "Adds environment variables to the build.",
                            "firstSentenceCommentText": "Adds environment variables to the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.EnvironmentVariableContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    environmentVariables(FOO: 'bar', TEST: '123')\n}\n\njob('example-2') {\n    environmentVariables {\n        env('ONE', '1')\n        propertiesFile('env.properties')\n        keepBuildVariables(true)\n    }\n}\n"
                },
                {
                    "name": "jdk",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jdk",
                                    "type": "String"
                                }
                            ],
                            "html": "Name of the JDK installation to use for this job. The name must match the name of a JDK installation defined in\n the Jenkins system configuration. The default JDK will be used when the jdk method is omitted.",
                            "firstSentenceCommentText": "Name of the JDK installation to use for this job. "
                        }
                    ],
                    "examples": "job('jdk') {\n    jdk('Java 8')\n}\n"
                },
                {
                    "name": "keepDependencies",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "keep",
                                    "type": "boolean",
                                    "defaultValue": "true"
                                }
                            ],
                            "availableSince": "1.17",
                            "html": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation.\n     ",
                            "firstSentenceCommentText": "Protects all builds that are referenced from builds of this project (via fingerprint) from log rotation."
                        }
                    ],
                    "examples": "job('example') {\n    keepDependencies()\n}\n"
                },
                {
                    "name": "label",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "labelExpression",
                                    "type": "String",
                                    "defaultValue": "null"
                                }
                            ],
                            "html": "Label which specifies which nodes this job can run on. If <TT>null</TT> is passed in, the label is cleared out and\n the job can roam.",
                            "firstSentenceCommentText": "Label which specifies which nodes this job can run on. "
                        }
                    ],
                    "examples": "job('example') {\n    label('x86 && ubuntu')\n}\n"
                },
                {
                    "name": "lockableResources",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "resources",
                                    "type": "String"
                                },
                                {
                                    "name": "lockClosure",
                                    "type": "Closure",
                                    "defaultValue": "null"
                                }
                            ],
                            "availableSince": "1.25",
                            "plugin": {
                                "id": "lockable-resources"
                            },
                            "html": "Locks resources while a job is running.\n     ",
                            "firstSentenceCommentText": "Locks resources while a job is running.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.LockableResourcesContext"
                        }
                    ],
                    "examples": "// lock single resource\njob('example-1') {\n    lockableResources('lock-resource')\n}\n\n// notation that locks three resources at once\njob('example-2') {\n    lockableResources('resource1 resource2 resource3')\n}\n\n// lock two available resources from given three and capture locked resources in the variable name\njob('example-3') {\n    lockableResources('resource1 resource2 resource3') {\n        resourcesVariable('LOCKED_RESOURCES')\n        resourceNumber(2)\n    }\n    steps {\n        shell('echo Following resources are locked: $LOCKED_RESOURCES')\n    }\n}\n"
                },
                {
                    "name": "logRotator",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "daysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "numToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactDaysToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                },
                                {
                                    "name": "artifactNumToKeep",
                                    "type": "int",
                                    "defaultValue": "-1"
                                }
                            ],
                            "html": "Manages how long to keep records of the builds.",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.35",
                            "html": "Manages how long to keep records of the builds.\n     ",
                            "firstSentenceCommentText": "Manages how long to keep records of the builds.",
                            "contextClass": "javaposse.jobdsl.dsl.LogRotatorContext"
                        }
                    ],
                    "examples": "job('example-1') {\n    logRotator(30, -1, 1, -1)\n}\n\njob('example-2') {\n    logRotator {\n        numToKeep(5)\n        artifactNumToKeep(1)\n    }\n}\n"
                },
                {
                    "name": "multiscm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "multiple-scms"
                            },
                            "html": "Allows a job to check out sources from multiple SCM providers.",
                            "firstSentenceCommentText": "Allows a job to check out sources from multiple SCM providers.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    multiscm {\n        git {\n            remote {\n                github('jenkinsci/jenkins')\n            }\n            relativeTargetDir('jenkins')\n        }\n        git {\n            remote {\n                github('jenkinsci/job-dsl-plugin')\n            }\n            relativeTargetDir('job-dsl-plugin')\n        }\n    }\n}\n"
                },
                {
                    "name": "notifications",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "notificationClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.26",
                            "plugin": {
                                "id": "notification"
                            },
                            "html": "Configures notifications for the build.\n     ",
                            "firstSentenceCommentText": "Configures notifications for the build.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.NotificationContext"
                        }
                    ],
                    "examples": "job('example') {\n    notifications {\n        endpoint('http://example.com:8080/monitor')\n        endpoint('10.100.2.3:3434', 'TCP', 'XML') {\n            event('started')\n            timeout(60000)\n        }\n    }\n}\n"
                },
                {
                    "name": "parameters",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.15",
                            "html": "Allows to parameterize the job.\n     ",
                            "firstSentenceCommentText": "Allows to parameterize the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.BuildParametersContext"
                        }
                    ],
                    "examples": "job('example') {\n    parameters {\n        booleanParam('FLAG', true)\n        choiceParam('OPTION', ['option 1 (default)', 'option 2', 'option 3'])\n    }\n}\n"
                },
                {
                    "name": "previousNames",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "regex",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.29",
                            "html": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n The regular expression needs to match the full name of the job, i.e. with folders included.\n This can be useful to keep the build history.\n     ",
                            "firstSentenceCommentText": "Renames jobs matching the regular expression to the name of this job before the configuration is updated.\n "
                        }
                    ],
                    "examples": "// keep the build history when re-numbering jobs\njob('04-project-a-deploy') {\n    previousNames(/\\d+-project-a-deploy/)\n}\n"
                },
                {
                    "name": "priority",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "value",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.15",
                            "plugin": {
                                "id": "PrioritySorter"
                            },
                            "html": "Set the priority of the job. Default value is 100.\n     ",
                            "firstSentenceCommentText": "Set the priority of the job. "
                        }
                    ],
                    "examples": "job('example') {\n    priority(50)\n}\n"
                },
                {
                    "name": "properties",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds custom properties to the job.",
                            "firstSentenceCommentText": "Adds custom properties to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.properties.PropertiesContext"
                        }
                    ],
                    "examples": "job('example') {\n    properties {\n        customIcon('job.png')\n        sidebarLinks {\n            link('https://jira.acme.org/', 'JIRA', 'notepad.png')\n        }\n    }\n}\n"
                },
                {
                    "name": "publishers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds post-build actions to the job.",
                            "firstSentenceCommentText": "Adds post-build actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.publisher.PublisherContext"
                        }
                    ],
                    "examples": "job('example') {\n    publishers {\n        archiveArtifacts('build/test-output/**/*.html')\n        archiveJunit('**/target/surefire-reports/*.xml')\n    }\n}\n"
                },
                {
                    "name": "quietPeriod",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "seconds",
                                    "type": "int",
                                    "defaultValue": "5"
                                }
                            ],
                            "availableSince": "1.16",
                            "html": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build.\n     ",
                            "firstSentenceCommentText": "Defines a timespan (in seconds) to wait for additional events (pushes, check-ins) before triggering a build."
                        }
                    ],
                    "examples": "job('example') {\n    quietPeriod(120)\n}\n"
                },
                {
                    "name": "scm",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Allows a job to check out sources from an SCM provider.",
                            "firstSentenceCommentText": "Allows a job to check out sources from an SCM provider.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.ScmContext"
                        }
                    ],
                    "examples": "job('example') {\n    scm {\n        github('jenkinsci/job-dsl-plugin')\n    }\n}\n"
                },
                {
                    "name": "steps",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build steps to the jobs.",
                            "firstSentenceCommentText": "Adds build steps to the jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.step.StepContext"
                        }
                    ],
                    "examples": "job('example') {\n    steps {\n        shell('echo START')\n        gradle('check')\n    }\n}\n"
                },
                {
                    "name": "throttleConcurrentBuilds",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "throttleClosure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.20",
                            "plugin": {
                                "id": "throttle-concurrents"
                            },
                            "html": "Throttles the number of concurrent builds of a project running per node or globally.\n     ",
                            "firstSentenceCommentText": "Throttles the number of concurrent builds of a project running per node or globally.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.toplevel.ThrottleConcurrentBuildsContext"
                        }
                    ],
                    "examples": "// throttle one job on its own\njob('example-1') {\n    throttleConcurrentBuilds {\n        maxPerNode(1)\n        maxTotal(2)\n    }\n}\n\n// throttle as part of a category\njob('example-2') {\n    throttleConcurrentBuilds {\n        categories(['cat-1'])\n    }\n}\n"
                },
                {
                    "name": "triggers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Adds build triggers to the job.",
                            "firstSentenceCommentText": "Adds build triggers to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.triggers.TriggerContext"
                        }
                    ],
                    "examples": "job('example') {\n    triggers {\n        scm('@daily')\n    }\n}\n"
                },
                {
                    "name": "using",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "templateName",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates a new job configuration, based on the job template referenced by the parameter and stores this.\n\n When the template is changed, the seed job will attempt to re-run, which has the side-effect of cascading changes\n of the template the jobs generated from it.",
                            "firstSentenceCommentText": "Creates a new job configuration, based on the job template referenced by the parameter and stores this."
                        }
                    ],
                    "examples": "job('example') {\n    using('project-template')\n}\n"
                },
                {
                    "name": "weight",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "weight",
                                    "type": "int"
                                }
                            ],
                            "availableSince": "1.36",
                            "plugin": {
                                "id": "heavy-job",
                                "minimumVersion": "1.1"
                            },
                            "html": "Specifies the number of executors to block for this job.\n     ",
                            "firstSentenceCommentText": "Specifies the number of executors to block for this job."
                        }
                    ],
                    "examples": "job('example') {\n    weight(2)\n}\n"
                },
                {
                    "name": "wrappers",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.19",
                            "html": "Adds pre/post actions to the job.\n     ",
                            "firstSentenceCommentText": "Adds pre/post actions to the job.",
                            "contextClass": "javaposse.jobdsl.dsl.helpers.wrapper.WrapperContext"
                        }
                    ],
                    "examples": "job('example') {\n    wrappers {\n        colorizeOutput()\n        timestamps()\n    }\n}\n"
                }
            ]
        },
        "javaposse.jobdsl.dsl.DslFactory": {
            "type": "javaposse.jobdsl.dsl.DslFactory",
            "methods": [
                {
                    "name": "buildFlowJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "build-flow-plugin"
                            },
                            "html": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL.\n     ",
                            "firstSentenceCommentText": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "build-flow-plugin"
                            },
                            "html": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL.\n     ",
                            "firstSentenceCommentText": "Creates or update a job for managing Jenkins jobs orchestration using a dedicated DSL.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.BuildFlowJob"
                        }
                    ],
                    "examples": "// triple-quotes can be used for inline flow DSL definition\nbuildFlowJob('example-1') {\n    buildFlow('''\n        build(\"job1\")\n    ''')\n}\n\n// the build flow text can also be read from a file\nbuildFlowJob('example-2') {\n    buildFlow(readFileFromWorkspace('my-build-flow-text.groovy'))\n}\n"
                },
                {
                    "name": "buildMonitorView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "build-monitor-plugin"
                            },
                            "html": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs.\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "build-monitor-plugin"
                            },
                            "html": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs.",
                            "firstSentenceCommentText": "Creates or updates a view that provides a highly visible view of the status of selected Jenkins jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildMonitorView"
                        }
                    ],
                    "examples": "buildMonitorView('project-A') {\n    description('All jobs for project A')\n    jobs {\n        name('release-projectA')\n        regex(/project-A-.+/)\n    }\n}\n"
                },
                {
                    "name": "buildPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "build-pipeline-plugin"
                            },
                            "html": "Create or updates a view of upstream and downstream connected jobs.\n     ",
                            "firstSentenceCommentText": "Create or updates a view of upstream and downstream connected jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "build-pipeline-plugin"
                            },
                            "html": "Create or updates a view of upstream and downstream connected jobs.",
                            "firstSentenceCommentText": "Create or updates a view of upstream and downstream connected jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.BuildPipelineView"
                        }
                    ],
                    "examples": "buildPipelineView('project-A') {\n    filterBuildQueue()\n    filterExecutors()\n    title('Project A CI Pipeline')\n    displayedBuilds(5)\n    selectedJob('project-A-compile')\n    alwaysAllowManualTrigger()\n    showPipelineParameters()\n    refreshFrequency(60)\n}\n"
                },
                {
                    "name": "categorizedJobsView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "categorized-view",
                                "minimumVersion": "1.8"
                            },
                            "html": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\n jobs and categorize them according to regular expressions.\n     ",
                            "firstSentenceCommentText": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\n jobs and categorize them according to regular expressions."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "categorized-view",
                                "minimumVersion": "1.8"
                            },
                            "html": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\n jobs and categorize them according to regular expressions.",
                            "firstSentenceCommentText": "Creates or updates a new view that is very similar to the standard Jenkins List Views, but where you can group\n jobs and categorize them according to regular expressions.",
                            "contextClass": "javaposse.jobdsl.dsl.views.CategorizedJobsView"
                        }
                    ],
                    "examples": "categorizedJobsView('example') {\n    jobs {\n        regex(/configuration_.*/)\n    }\n    categorizationCriteria {\n        regexGroupingRule(/^configuration_([^_]+).*$/)\n    }\n    columns {\n        status()\n        categorizedJob()\n        buildButton()\n    }\n}\n"
                },
                {
                    "name": "customConfigFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Creates a managed custom file.\n     ",
                            "firstSentenceCommentText": "Creates a managed custom file."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Creates a managed custom file.\n     ",
                            "firstSentenceCommentText": "Creates a managed custom file.",
                            "contextClass": "javaposse.jobdsl.dsl.ConfigFile"
                        }
                    ],
                    "examples": "// creates a custom config file from a file named acme/settings.json in the seed job's workspace\ncustomConfigFile('acme-settings') {\n    comment('Settings for ACME tools')\n    content(readFileFromWorkspace('acme/settings.json'))\n}\n"
                },
                {
                    "name": "deliveryPipelineView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Creates or updates a view that renders pipelines based on upstream/downstream jobs.\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that renders pipelines based on upstream/downstream jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "delivery-pipeline-plugin"
                            },
                            "html": "Creates or updates a view that renders pipelines based on upstream/downstream jobs.",
                            "firstSentenceCommentText": "Creates or updates a view that renders pipelines based on upstream/downstream jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.views.DeliveryPipelineView"
                        }
                    ],
                    "examples": "deliveryPipelineView('project-a') {\n    pipelineInstances(5)\n    showAggregatedPipeline()\n    columns(2)\n    sorting(Sorting.TITLE)\n    updateInterval(60)\n    enableManualTriggers()\n    showAvatars()\n    showChangeLog()\n    pipelines {\n        component('Sub System A', 'compile-a')\n        component('Sub System B', 'compile-b')\n        regex(/compile-subsystem-(.*)/)\n    }\n}\n"
                },
                {
                    "name": "folder",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "cloudbees-folder"
                            },
                            "html": "Creates or updates a folder.\n     ",
                            "firstSentenceCommentText": "Creates or updates a folder."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "cloudbees-folder"
                            },
                            "html": "Creates or updates a folder.\n     ",
                            "firstSentenceCommentText": "Creates or updates a folder.",
                            "contextClass": "javaposse.jobdsl.dsl.Folder"
                        }
                    ],
                    "examples": "folder('project-a') {\n    displayName('Project A')\n    description('Folder for project A')\n}\n\nfolder('project-a/testing') {\n    description('Folder containing all QA jobs for project A')\n}\n"
                },
                {
                    "name": "freeStyleJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "html": "Creates or updates a free style job.\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "html": "Creates or updates a free style job.\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.FreeStyleJob"
                        }
                    ],
                    "examples": "freeStyleJob('example') {\n    logRotator(-1, 10)\n    jdk('Java 6')\n    scm {\n        github('jenkinsci/job-dsl-plugin', 'master')\n    }\n    triggers {\n        githubPush()\n    }\n    steps {\n        gradle('clean build')\n    }\n    publishers {\n        archiveArtifacts('job-dsl-plugin/build/libs/job-dsl.hpi')\n    }\n}\n"
                },
                {
                    "name": "ivyJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.38\n",
                            "plugin": {
                                "id": "ivy",
                                "minimumVersion": "1.23"
                            },
                            "html": "Creates or updates a job to build an Ivy project.\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build an Ivy project."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.38",
                            "plugin": {
                                "id": "ivy",
                                "minimumVersion": "1.23"
                            },
                            "html": "Creates or updates a job to build an Ivy project.\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build an Ivy project.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.IvyJob"
                        }
                    ],
                    "examples": "ivyJob('example') {\n    ivyBuilder {\n        ant {\n            target('clean')\n            targets(['test', 'publish'])\n            buildFile('build.xml')\n            antInstallation('Ant 1.9')\n            prop('key', 'value')\n            javaOpt('-Xmx=1G')\n        }\n    }\n}\n"
                },
                {
                    "name": "job",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "html": "Creates or updates a free style job.\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31\n",
                            "html": "Creates or updates a free style job.\n     ",
                            "firstSentenceCommentText": "Creates or updates a free style job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.FreeStyleJob"
                        }
                    ],
                    "examples": "job('example') {\n    logRotator(-1, 10)\n    jdk('Java 6')\n    scm {\n        github('jenkinsci/job-dsl-plugin', 'master')\n    }\n    triggers {\n        githubPush()\n    }\n    steps {\n        gradle('clean build')\n    }\n    publishers {\n        archiveArtifacts('job-dsl-plugin/build/libs/job-dsl.hpi')\n    }\n}\n"
                },
                {
                    "name": "listView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "html": "Creates or updates a view that shows items in a simple list format.\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that shows items in a simple list format."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "html": "Creates or updates a view that shows items in a simple list format.",
                            "firstSentenceCommentText": "Creates or updates a view that shows items in a simple list format.",
                            "contextClass": "javaposse.jobdsl.dsl.views.ListView"
                        }
                    ],
                    "examples": "listView('project-A') {\n    description('All unstable jobs for project A')\n    filterBuildQueue()\n    filterExecutors()\n    jobs {\n        name('release-projectA')\n        regex(/project-A-.+/)\n    }\n    jobFilters {\n        status {\n            status(Status.UNSTABLE)\n        }\n    }\n    columns {\n        status()\n        weather()\n        name()\n        lastSuccess()\n        lastFailure()\n        lastDuration()\n        buildButton()\n    }\n}\n"
                },
                {
                    "name": "matrixJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "matrix-project"
                            },
                            "html": "Creates or updates a multi-configuration job.\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-configuration job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "matrix-project"
                            },
                            "html": "Creates or updates a multi-configuration job.\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-configuration job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.MatrixJob"
                        }
                    ],
                    "examples": "matrixJob('example') {\n    axes {\n        jdk('jdk6', 'jdk7')\n    }\n    scm {\n        github('jenkinsci/job-dsl-plugin', 'master')\n    }\n    triggers {\n        githubPush()\n    }\n    steps {\n        gradle('clean build')\n    }\n    publishers {\n        archiveArtifacts('job-dsl-plugin/build/libs/job-dsl.hpi')\n    }\n}\n"
                },
                {
                    "name": "mavenJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "maven-plugin"
                            },
                            "html": "Creates or updates a job to build a Maven project.\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build a Maven project."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "maven-plugin"
                            },
                            "html": "Creates or updates a job to build a Maven project.\n     ",
                            "firstSentenceCommentText": "Creates or updates a job to build a Maven project.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.MavenJob"
                        }
                    ],
                    "examples": "mavenJob('example') {\n    logRotator(-1, 10)\n    jdk('Java 7')\n    scm {\n        github('jenkinsci/jenkins', 'master')\n    }\n    triggers {\n        githubPush()\n    }\n    goals('clean verify')\n}\n"
                },
                {
                    "name": "mavenSettingsConfigFile",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Creates a managed Maven settings file.\n     ",
                            "firstSentenceCommentText": "Creates a managed Maven settings file."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "config-file-provider"
                            },
                            "html": "Creates a managed Maven settings file.\n     ",
                            "firstSentenceCommentText": "Creates a managed Maven settings file.",
                            "contextClass": "javaposse.jobdsl.dsl.ConfigFile"
                        }
                    ],
                    "examples": "// creates a Maven settings file from a file named maven/settings.xml in the seed job's workspace\ncustomConfigFile('company-settings') {\n    comment('Company Maven Settings')\n    content(readFileFromWorkspace('maven/settings.xml'))\n}\n"
                },
                {
                    "name": "multiJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "jenkins-multijob-plugin"
                            },
                            "html": "Creates or updates a multi-job project, suitable for running other jobs.\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-job project, suitable for running other jobs."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "jenkins-multijob-plugin"
                            },
                            "html": "Creates or updates a multi-job project, suitable for running other jobs.\n     ",
                            "firstSentenceCommentText": "Creates or updates a multi-job project, suitable for running other jobs.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.MultiJob"
                        }
                    ],
                    "examples": "multiJob('example') {\n    steps {\n        phase {\n            phaseName 'Second'\n            job('JobZ') {\n                parameters {\n                    propertiesFile('my1.properties')\n                }\n            }\n        }\n        phase('Third') {\n            job('JobA')\n            job('JobB')\n            job('JobC')\n        }\n        phase('Fourth') {\n            job('JobD', false, true) {\n                parameters {\n                    booleanParam('cParam', true)\n                    propertiesFile('my.properties')\n                    sameNode()\n                    matrixSubset('it.name==\"hello\"')\n                    subversionRevision()\n                    gitRevision()\n                    predefinedProp('prop1', 'value1')\n                    nodeLabel('lParam', 'my_nodes')\n                }\n                configure { phaseJobConfig ->\n                    phaseJobConfig / enableCondition << 'true'\n                    phaseJobConfig / condition << '${RUN_JOB} == \"true\"'\n                }\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "nestedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "nested-view"
                            },
                            "html": "Creates or updates a view that allows grouping views into multiple levels.\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that allows grouping views into multiple levels."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "nested-view"
                            },
                            "html": "Creates or updates a view that allows grouping views into multiple levels.",
                            "firstSentenceCommentText": "Creates or updates a view that allows grouping views into multiple levels.",
                            "contextClass": "javaposse.jobdsl.dsl.views.NestedView"
                        }
                    ],
                    "examples": "nestedView('project-a') {\n    views {\n        listView('overview') {\n            jobs {\n                regex(/project-A-.*/)\n            }\n            columns {\n                status()\n                weather()\n                name()\n                lastSuccess()\n                lastFailure()\n            }\n        }\n        buildPipelineView('pipeline') {\n            selectedJob('project-a-compile')\n        }\n    }\n}\n"
                },
                {
                    "name": "queue",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                }
                            ],
                            "html": "Schedule a job to be run later. Validation of the job name isn't done until after the DSL has run.\n     ",
                            "firstSentenceCommentText": "Schedule a job to be run later. "
                        },
                        {
                            "parameters": [
                                {
                                    "name": "job",
                                    "type": "javaposse.jobdsl.dsl.Job"
                                }
                            ],
                            "html": "Schedule a job to be run later.\n     ",
                            "firstSentenceCommentText": "Schedule a job to be run later."
                        }
                    ],
                    "examples": "def example1 = job('example-1') {\n    displayName('first example')\n}\n\nqueue(example1)\n\njob('example-2') {\n    displayName('second example')\n}\n\nqueue('example-2')\n"
                },
                {
                    "name": "readFileFromWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Streams a file from the workspace of the seed job.\n     ",
                            "firstSentenceCommentText": "Streams a file from the workspace of the seed job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "jobName",
                                    "type": "String"
                                },
                                {
                                    "name": "filePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Reads a file from the workspace of a job.\n     ",
                            "firstSentenceCommentText": "Reads a file from the workspace of a job."
                        }
                    ],
                    "examples": "// read the file release.groovy from the seed job's workspace\n// and configure a Groovy build step using that script\ndef releaseScript = readFileFromWorkspace('release.groovy')\njob('example-1') {\n    steps {\n        groovyCommand(releaseScript)\n    }\n}\n\n// read the file run.bat from a workspace of job project-a\n// and use it to configure another job\ndef runScript = readFileFromWorkspace('project-a', 'run.bat')\njob('example-2') {\n    steps {\n        batchFile(runScript)\n    }\n}\n"
                },
                {
                    "name": "sectionedView",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "plugin": {
                                "id": "sectioned-view"
                            },
                            "html": "Creates or updates a view that can be divided into sections.\n     ",
                            "firstSentenceCommentText": "Creates or updates a view that can be divided into sections."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "plugin": {
                                "id": "sectioned-view"
                            },
                            "html": "Creates or updates a view that can be divided into sections.",
                            "firstSentenceCommentText": "Creates or updates a view that can be divided into sections.",
                            "contextClass": "javaposse.jobdsl.dsl.views.SectionedView"
                        }
                    ],
                    "examples": "sectionedView('project-summary') {\n    filterBuildQueue()\n    filterExecutors()\n    sections {\n        listView {\n            name('Project A')\n            jobs {\n                regex(/project-A-.*/)\n            }\n            columns {\n                status()\n                weather()\n                name()\n                lastSuccess()\n                lastFailure()\n            }\n        }\n        listView {\n            name('Project B')\n            jobs {\n                regex(/project-B-.*/)\n            }\n            jobFilters {\n                regex {\n                    matchValue(RegexMatchValue.DESCRIPTION)\n                    regex(/.*-project-B-.*/)\n                }\n            }\n            columns {\n                status()\n                weather()\n                name()\n                lastSuccess()\n                lastFailure()\n            }\n        }\n    }\n}\n"
                },
                {
                    "name": "streamFileFromWorkspace",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "filePath",
                                    "type": "String"
                                }
                            ],
                            "html": "Streams a file from the workspace of the seed job.\n     ",
                            "firstSentenceCommentText": "Streams a file from the workspace of the seed job."
                        }
                    ],
                    "examples": "// read the file images/logo.png from the seed job's workspace\n// and save the as user content\ndef image = streamFileFromWorkspace('images/logo.png')\nuserContent('company-logo.png', image)\n"
                },
                {
                    "name": "userContent",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "path",
                                    "type": "String"
                                },
                                {
                                    "name": "content",
                                    "type": "java.io.InputStream"
                                }
                            ],
                            "availableSince": "1.33",
                            "html": "Upload the stream as <a href=\"https://wiki.jenkins-ci.org/display/JENKINS/User+Content\">user content</a>.\n Use <a href='../../../DslFactory.html#streamFileFromWorkspace(java.lang.String)' title='DslFactory.streamFileFromWorkspace'>DslFactory.streamFileFromWorkspace</a> to read the content from a file.\n     ",
                            "firstSentenceCommentText": "Upload the stream as user content.\n "
                        }
                    ],
                    "examples": "// save the file images/logo.png from the seed job's workspace as user content\nuserContent('company-logo.png', streamFileFromWorkspace('images/logo.png'))\n"
                },
                {
                    "name": "workflowJob",
                    "signatures": [
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                }
                            ],
                            "availableSince": "1.30\n",
                            "plugin": {
                                "id": "workflow-aggregator"
                            },
                            "html": "Create or updates a workflow job.\n     ",
                            "firstSentenceCommentText": "Create or updates a workflow job."
                        },
                        {
                            "parameters": [
                                {
                                    "name": "name",
                                    "type": "String"
                                },
                                {
                                    "name": "closure",
                                    "type": "Closure"
                                }
                            ],
                            "availableSince": "1.31",
                            "plugin": {
                                "id": "workflow-aggregator"
                            },
                            "html": "Create or updates a workflow job.\n     ",
                            "firstSentenceCommentText": "Create or updates a workflow job.",
                            "contextClass": "javaposse.jobdsl.dsl.jobs.WorkflowJob"
                        }
                    ],
                    "examples": "workflowJob('example') {\n    definition {\n        cps {\n            script(readFileFromWorkspace('project-a-workflow.groovy'))\n            sandbox()\n        }\n    }\n}\n"
                }
            ]
        }
    }
}